class dict:
    dictionary = {
        "getenv": ["char *", "(const char *name)"],
        "asctime_r": [
            "char *",
            "(const struct tm *__restrict tp, char *__restrict buf)",
        ],
        "atanh": ["double", "(double x)"],
        "isblank": ["bool", "(CharT, const locale &)"],
        "atomic_fetch_add": [
            "ITp",
            "(volatile atomic<ITp> *a, __atomic_diff_t<ITp> i)",
        ],
        "pthread_self": ["pthread_t", "()"],
        "operator<<": [
            "std::basic_ostream<CharT, Traits> &",
            "(std::basic_ostream<CharT, Traits> &os, const std::exponential_distribution<RealType> &x)",
        ],
        "nth_element": ["void", "(RAIter, RAIter, RAIter)"],
        "cosf32x": ["_Float32x", "(_Float32x x)"],
        "log10": ["float", "(float x)"],
        "uninitialized_value_construct_n": [
            "ForwardIterator",
            "(ForwardIterator first, Size count)",
        ],
        "uninitialized_default_construct_n": [
            "ForwardIterator",
            "(ForwardIterator first, Size count)",
        ],
        "atomic_compare_exchange_strong_explicit": [
            "bool",
            "(atomic<ITp> *a, __atomic_val_t<ITp> *i1, __atomic_val_t<ITp> i2, memory_order m1, memory_order m2)",
        ],
        "count_if": [
            "typename iterator_traits<IIter>::difference_type",
            "(IIter, IIter, Predicate)",
        ],
        "operator~": ["chars_format", "(chars_format fmt)"],
        "swap": ["void", "(weak_ptr<Tp> &a, weak_ptr<Tp> &b)"],
        "rend": ["reverse_iterator<Tp *>", "(Tp (&arr)[Nm])"],
        "mismatch": [
            "pair<InputIterator1, InputIterator2>",
            "(InputIterator1 first1, InputIterator1 last1, InputIterator2 first2)",
        ],
        "y0f": ["float", "(float)"],
        "to_chars": [
            "to_chars_result",
            "(char *first, char *last, signed char value, int base)",
        ],
        "wcschr": ["wchar_t *", "(const wchar_t *wcs, wchar_t wc)"],
        "pow": ["float", "(float x, float y)"],
        "get": [
            "const typename tuple_element<Int, std::pair<Tp1, Tp2>>::type &&",
            "<std::size_t Int>(const std::pair<Tp1, Tp2> &&in)",
        ],
        "operator&&": [
            "_Expr<_BinClos<struct std::__logical_and, std::_Constant, std::_Expr, typename Dom::value_type, Dom>, typename __fun<struct std::__logical_and, typename Dom::value_type>::result_type>",
            "(const typename Dom::value_type &t, const _Expr<Dom, typename Dom::value_type> &v)",
        ],
        "wmemcpy": [
            "wchar_t *",
            "(wchar_t *__restrict s1, const wchar_t *__restrict s2, size_t n)",
        ],
        "swap": [
            "void",
            "(unordered_multimap<Key, Tp, Hash, Pred, Alloc> &x, unordered_multimap<Key, Tp, Hash, Pred, Alloc> &y)",
        ],
        "fabsf32": ["_Float32", "(_Float32 x)"],
        "y1f32": ["_Float32", "(_Float32)"],
        "operator>>": [
            "_Expr<_BinClos<struct std::__shift_right, std::_Expr, std::_Expr, Dom1, Dom2>, typename __fun<struct std::__shift_right, typename Dom1::value_type>::result_type>",
            "(const _Expr<Dom1, typename Dom1::value_type> &v, const _Expr<Dom2, typename Dom2::value_type> &w)",
        ],
        "operator!=": ["bool", "(const unique_ptr<Tp, Dp> &x, nullptr_t)"],
        "operator|": [
            "_Expr<_BinClos<struct std::__bitwise_or, std::_Expr, std::_Expr, Dom1, Dom2>, typename __fun<struct std::__bitwise_or, typename Dom1::value_type>::result_type>",
            "(const _Expr<Dom1, typename Dom1::value_type> &v, const _Expr<Dom2, typename Dom2::value_type> &w)",
        ],
        "memcmp": ["int", "(const void *s1, const void *s2, size_t n)"],
        "operator*": [
            "_Expr<_BinClos<__multiplies, std::_ValArray, std::_Constant, Tp, Tp>, typename __fun<__multiplies, Tp>::result_type>",
            "(const valarray<Tp> &v, const typename valarray<Tp>::value_type &t)",
        ],
        "partition_point": ["FIter", "(FIter, FIter, Predicate)"],
        "nextdownf": ["float", "(float x)"],
        "inclusive_scan": [
            "OutputIterator",
            "(InputIterator first, InputIterator last, OutputIterator result, BinaryOperation binary_op)",
        ],
        "operator<<": [
            "basic_ostream<char, Traits> &",
            "(basic_ostream<char, Traits> &out, char c)",
        ],
        "isxdigit_l": ["int", "(int, locale_t)"],
        "isfinite": ["bool", "(double x)"],
        "replace": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, void>",
            "(ExecutionPolicy &&exec, ForwardIterator first, ForwardIterator last, const Tp &old_value, const Tp &new_value)",
        ],
        "operator/": [
            "_Expr<_BinClos<struct std::__divides, std::_Expr, std::_Expr, Dom1, Dom2>, typename __fun<struct std::__divides, typename Dom1::value_type>::result_type>",
            "(const _Expr<Dom1, typename Dom1::value_type> &v, const _Expr<Dom2, typename Dom2::value_type> &w)",
        ],
        "size": ["size_t", "(const Tp (&)[Nm])"],
        "static_pointer_cast": [
            "shared_ptr<Tp>",
            "<typename Tp>(const shared_ptr<Up> &r)",
        ],
        "rotate_copy": ["OIter", "(FIter, FIter, FIter, OIter)"],
        "operator!=": [
            "bool",
            "(const std::piecewise_linear_distribution<RealType> &d1, const std::piecewise_linear_distribution<RealType> &d2)",
        ],
        "pow": [
            "_Expr<_BinClos<struct std::_Pow, std::_Expr, std::_Expr, Dom1, Dom2>, typename Dom1::value_type>",
            "(const _Expr<Dom1, typename Dom1::value_type> &e1, const _Expr<Dom2, typename Dom2::value_type> &e2)",
        ],
        "make_move_iterator": ["move_iterator<Iterator>", "(Iterator i)"],
        "to_chars": [
            "to_chars_result",
            "(char *first, char *last, unsigned int value, int base)",
        ],
        "scalblnl": ["long double", "(long double x, long n)"],
        "roundf64x": ["_Float64x", "(_Float64x x)"],
        "nextupf64": ["_Float64", "(_Float64 x)"],
        "operator<": ["bool", "(monostate, monostate)"],
        "is_permutation": [
            "bool",
            "(ForwardIterator1 first1, ForwardIterator1 last1, ForwardIterator2 first2, ForwardIterator2 last2, BinaryPredicate pred)",
        ],
        "operator<=": [
            "bool",
            "(const _Bit_iterator_base &x, const _Bit_iterator_base &y)",
        ],
        "scalblnf": ["float", "(float x, long n)"],
        "begin": ["decltype(cont.begin())", "(const Container &cont)"],
        "fgetc_unlocked": ["int", "(FILE *stream)"],
        "log2l": ["long double", "(long double x)"],
        "declare_reachable": ["void", "(void *)"],
        "operator<<": [
            "basic_ostream<CharT, Traits> &",
            "(basic_ostream<CharT, Traits> &out, CharT c)",
        ],
        "tanh": ["complex<Tp>", "(const complex<Tp> &)"],
        "fabsf": ["float", "(float x)"],
        "regex_search": [
            "bool",
            "(const basic_string<Ch_type, Ch_traits, Ch_alloc> &s, match_results<typename basic_string<Ch_type, Ch_traits, Ch_alloc>::const_iterator, Alloc> &m, const basic_regex<Ch_type, Rx_traits> &e, regex_constants::match_flag_type f = regex_constants::match_default)",
        ],
        "pthread_condattr_getpshared": [
            "int",
            "(const pthread_condattr_t *__restrict attr, int *__restrict pshared)",
        ],
        "atanh": [
            "typename __gnu_cxx::__enable_if<__is_integer<Tp>::__value, double>::__type",
            "(Tp x)",
        ],
        "sinh": ["complex<Tp>", "(const complex<Tp> &)"],
        "sigignore": ["int", "(int sig)"],
        "operator>=": [
            "bool",
            "(const sub_match<Bi_iter> &lhs, const typename iterator_traits<Bi_iter>::value_type *rhs)",
        ],
        "operator==": ["bool", "(const shared_ptr<Tp> &a, nullptr_t)"],
        "isblank": ["int", "(int)"],
        "mismatch": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, std::pair<ForwardIterator1, ForwardIterator2>>",
            "(ExecutionPolicy &&exec, ForwardIterator1 first1, ForwardIterator1 last1, ForwardIterator2 first2, ForwardIterator2 last2)",
        ],
        "nrand48": ["long", "(unsigned short *xsubi)"],
        "llrint": ["long long", "(float x)"],
        "operator&": ["perm_options", "(perm_options x, perm_options y)"],
        "operator>>": [
            "std::basic_istream<CharT, Traits> &",
            "(std::basic_istream<CharT, Traits> &is, std::cauchy_distribution<RealType> &x)",
        ],
        "rint": ["long double", "(long double x)"],
        "minmax_element": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, std::pair<ForwardIterator, ForwardIterator>>",
            "(ExecutionPolicy &&exec, ForwardIterator first, ForwardIterator last)",
        ],
        "operator" "h": ["chrono::hours", "<char Digits>()"],
        "fsubl": ["float", "(long double x, long double y)"],
        "sinhf32x": ["_Float32x", "(_Float32x x)"],
        "acoshl": ["long double", "(long double x)"],
        "pthread_spin_unlock": ["int", "(pthread_spinlock_t *lock)"],
        "calloc": ["void *", "(size_t nmemb, size_t size)"],
        "atan2": [
            "_Expr<_BinClos<struct std::_Atan2, std::_Expr, std::_Expr, Dom1, Dom2>, typename Dom1::value_type>",
            "(const _Expr<Dom1, typename Dom1::value_type> &e1, const _Expr<Dom2, typename Dom2::value_type> &e2)",
        ],
        "operator&&": [
            "_Expr<_BinClos<__logical_and, std::_ValArray, std::_ValArray, Tp, Tp>, typename __fun<__logical_and, Tp>::result_type>",
            "(const valarray<Tp> &v, const valarray<Tp> &w)",
        ],
        "operator+": [
            "_Expr<_BinClos<struct std::__plus, std::_Expr, std::_Constant, Dom, typename Dom::value_type>, typename __fun<struct std::__plus, typename Dom::value_type>::result_type>",
            "(const _Expr<Dom, typename Dom::value_type> &v, const typename Dom::value_type &t)",
        ],
        "asctime": ["char *", "(const struct tm *tp)"],
        "fromfpxf64": ["__intmax_t", "(_Float64 x, int round, unsigned int width)"],
        "ldexpf32": ["_Float32", "(_Float32 x, int exponent)"],
        "operator delete[]": ["void", "(void *, void *)"],
        "operator+": ["const_iterator", "(const const_iterator &x, difference_type n)"],
        "operator<": [
            "bool",
            "(const sub_match<Bi_iter> &lhs, const typename iterator_traits<Bi_iter>::value_type &rhs)",
        ],
        "ispunct": ["int", "(int)"],
        "operator&=": ["perms &", "(perms &x, perms y)"],
        "frexpl": ["long double", "(long double x, int *exponent)"],
        "operator>=": [
            "bool",
            "(const multimap<Key, Tp, Compare, Alloc> &x, const multimap<Key, Tp, Compare, Alloc> &y)",
        ],
        "tgamma": ["float", "(float x)"],
        "operator<=": ["bool", "(monostate, monostate)"],
        "wcsdup": ["wchar_t *", "(const wchar_t *s)"],
        "sigemptyset": ["int", "(sigset_t *set)"],
        "search": [
            "ForwardIterator",
            "(ForwardIterator first, ForwardIterator last, const Searcher &searcher)",
        ],
        "isalnum": ["bool", "(CharT, const locale &)"],
        "tanh": ["float", "(float x)"],
        "pthread_mutexattr_settype": ["int", "(pthread_mutexattr_t *attr, int kind)"],
        "operator/": ["complex<Tp>", "(const complex<Tp> &x, const Tp &y)"],
        "isinfl": ["int", "(long double value)"],
        "generate_n": ["OIter", "(OIter, Size, Generator)"],
        "operator+": [
            "time_point<Clock, typename common_type<Dur1, duration<Rep2, Period2>>::type>",
            "(const time_point<Clock, Dur1> &lhs, const duration<Rep2, Period2> &rhs)",
        ],
        "tgammaf": ["float", "(float)"],
        "exp10f32": ["_Float32", "(_Float32 x)"],
        "llround": ["long long", "(long double x)"],
        "mem_fun": ["mem_fun1_t<Ret, Tp, Arg>", "(Ret (Tp::*f)(Arg))"],
        "trunc": ["float", "(float x)"],
        "hypotf64x": ["_Float64x", "(_Float64x x, _Float64x y)"],
        "mrand48": ["long", "()"],
        "fwrite_unlocked": [
            "size_t",
            "(const void *__restrict ptr, size_t size, size_t n, FILE *__restrict stream)",
        ],
        "cyl_bessel_jl": ["long double", "(long double nu, long double x)"],
        "atomic_compare_exchange_weak": [
            "bool",
            "(volatile atomic<ITp> *a, __atomic_val_t<ITp> *i1, __atomic_val_t<ITp> i2)",
        ],
        "operator!=": ["bool", "(const shared_ptr<Tp> &a, nullptr_t)"],
        "towctrans_l": ["wint_t", "(wint_t wc, wctrans_t desc, locale_t locale)"],
        "atomic_flag_test_and_set": ["bool", "(atomic_flag *a)"],
        "atomic_load_explicit": [
            "shared_ptr<Tp>",
            "(const shared_ptr<Tp> *p, memory_order)",
        ],
        "isctype": ["int", "(int c, int mask)"],
        "copysignf": ["float", "(float x, float y)"],
        "any_cast": ["ValueType", "<typename ValueType>(any &&any)"],
        "atomic_init": ["void", "(atomic<ITp> *a, __atomic_val_t<ITp> i)"],
        "roundf32": ["_Float32", "(_Float32 x)"],
        "isdigit": ["int", "(int)"],
        "canonicalizef32": ["int", "(_Float32 *cx, const _Float32 *x)"],
        "mem_fn": ["_Mem_fn<Tp Class::*>", "(Tp Class::*pm)"],
        "pthread_getschedparam": [
            "int",
            "(pthread_t target_thread, int *__restrict policy, struct sched_param *__restrict param)",
        ],
        "copy_symlink": [
            "void",
            "(const path &existing_symlink, const path &new_symlink)",
        ],
        "sqrt": ["double", "(double x)"],
        "wcstoull_l": [
            "unsigned long long",
            "(const wchar_t *__restrict nptr, wchar_t **__restrict endptr, int base, locale_t loc)",
        ],
        "find_if_not": ["IIter", "(IIter, IIter, Predicate)"],
        "puts": ["int", "(const char *s)"],
        "daddl": ["double", "(long double x, long double y)"],
        "hermitel": ["long double", "(unsigned int n, long double x)"],
        "get": [
            "const typename tuple_element<Int, std::pair<Tp1, Tp2>>::type &",
            "<std::size_t Int>(const std::pair<Tp1, Tp2> &in)",
        ],
        "noshowpoint": ["ios_base &", "(ios_base &base)"],
        "operator<=": [
            "bool",
            "(const sub_match<Bi_iter> &lhs, const typename iterator_traits<Bi_iter>::value_type &rhs)",
        ],
        "ynf32": ["_Float32", "(int, _Float32)"],
        "fdivl": ["float", "(long double x, long double y)"],
        "setlinebuf": ["void", "(FILE *stream)"],
        "lroundf32x": ["long", "(_Float32x x)"],
        "set_unexpected": ["unexpected_handler", "(unexpected_handler)"],
        "weakly_canonical": ["path", "(const path &p, error_code &ec)"],
        "operator==": [
            "bool",
            "(const _Rb_tree<Key, Val, KeyOfValue, Compare, Alloc> &x, const _Rb_tree<Key, Val, KeyOfValue, Compare, Alloc> &y)",
        ],
        "fpclassify": [
            "typename __gnu_cxx::__enable_if<__is_integer<Tp>::__value, int>::__type",
            "(Tp x)",
        ],
        "operator~": ["launch", "(launch x)"],
        "sin": [
            "_Expr<_UnClos<struct std::_Sin, std::_ValArray, Tp>, Tp>",
            "(const valarray<Tp> &v)",
        ],
        "atan2f32": ["_Float32", "(_Float32 y, _Float32 x)"],
        "operator>": ["bool", "(const shared_ptr<Tp> &a, const shared_ptr<Up> &b)"],
        "exp2": ["float", "(float x)"],
        "fesetround": ["int", "(int rounding_direction)"],
        "atomic_store": ["void", "(atomic<ITp> *a, __atomic_val_t<ITp> i)"],
        "transform": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, ForwardIterator2>",
            "(ExecutionPolicy &&exec, ForwardIterator1 first, ForwardIterator1 last, ForwardIterator2 result, UnaryOperation op)",
        ],
        "atomic_exchange_explicit": [
            "shared_ptr<Tp>",
            "(shared_ptr<Tp> *p, shared_ptr<Tp> r, memory_order)",
        ],
        "gettext": ["char *", "(const char *msgid)"],
        "operator>>": [
            "std::basic_istream<CharT, Traits> &",
            "(std::basic_istream<CharT, Traits> &is, chi_squared_distribution<RealType> &x)",
        ],
        "ssignal": ["__sighandler_t", "(int sig, __sighandler_t handler)"],
        "operator" "ns": ["chrono::nanoseconds", "<char Digits>()"],
        "pthread_mutexattr_getprotocol": [
            "int",
            "(const pthread_mutexattr_t *__restrict attr, int *__restrict protocol)",
        ],
        "distance": [
            "ptrdiff_t",
            "(filesystem::path::iterator first, filesystem::path::iterator last)",
        ],
        "operator>>": [
            "std::basic_istream<CharT, Traits> &",
            "(std::basic_istream<CharT, Traits> &is, bitset<Nb> &x)",
        ],
        "operator>": ["bool", "(const pair<T1, T2> &x, const pair<T1, T2> &y)"],
        "operator>=": [
            "bool",
            "(const deque<Tp, Alloc> &x, const deque<Tp, Alloc> &y)",
        ],
        "nanf32": ["_Float32", "(const char *tagb)"],
        "is_heap": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, bool>",
            "(ExecutionPolicy &&exec, RandomAccessIterator first, RandomAccessIterator last)",
        ],
        "isalnum": ["int", "(int)"],
        "pthread_attr_setstackaddr": ["int", "(pthread_attr_t *attr, void *stackaddr)"],
        "resize_file": ["void", "(const path &p, uintmax_t size)"],
        "operator>=": ["bool", "(nullptr_t, const __shared_ptr<Tp, Lp> &a)"],
        "powf": ["float", "(float x, float y)"],
        "toupper_l": ["int", "(int c, locale_t l)"],
        "atan2l": ["long double", "(long double y, long double x)"],
        "to_chars": [
            "to_chars_result",
            "(char *first, char *last, short value, int base)",
        ],
        "swap": [
            "void",
            "(basic_ifstream<CharT, Traits> &x, basic_ifstream<CharT, Traits> &y)",
        ],
        "operator>>": [
            "basic_istream<CharT, Traits> &",
            "(basic_istream<CharT, Traits> &is, _Setprecision f)",
        ],
        "atomic_fetch_xor_explicit": [
            "ITp",
            "(__atomic_base<ITp> *a, __atomic_val_t<ITp> i, memory_order m)",
        ],
        "sort": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, void>",
            "(ExecutionPolicy &&exec, RandomAccessIterator first, RandomAccessIterator last, Compare comp)",
        ],
        "is_sorted_until": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, ForwardIterator>",
            "(ExecutionPolicy &&exec, ForwardIterator first, ForwardIterator last)",
        ],
        "getdents64": ["__ssize_t", "(int fd, void *buffer, size_t length)"],
        "exp10f": ["float", "(float x)"],
        "operator>": [
            "bool",
            "(const reverse_iterator<IteratorL> &x, const reverse_iterator<IteratorR> &y)",
        ],
        "noskipws": ["ios_base &", "(ios_base &base)"],
        "swap": [
            "void",
            "(_Node_handle<type-parameter-0-0, type-parameter-0-0, type-parameter-0-1> &x, _Node_handle<type-parameter-0-0, type-parameter-0-0, type-parameter-0-1> &y)",
        ],
        "remove_copy": ["OIter", "(IIter, IIter, OIter, const Tp &)"],
        "operator!=": [
            "bool",
            "(const _Rb_tree<Key, Val, KeyOfValue, Compare, Alloc> &x, const _Rb_tree<Key, Val, KeyOfValue, Compare, Alloc> &y)",
        ],
        "operator+": [
            "basic_string<CharT, Traits, Alloc>",
            "(CharT lhs, basic_string<CharT, Traits, Alloc> &&rhs)",
        ],
        "getpt": ["int", "()"],
        "significandf": ["float", "(float x)"],
        "operator!=": [
            "__optional_ne_t<Tp, Up>",
            "(const optional<Tp> &lhs, const Up &rhs)",
        ],
        "comp_ellint_2f": ["float", "(float k)"],
        "pthread_barrier_init": [
            "int",
            "(pthread_barrier_t *__restrict barrier, const pthread_barrierattr_t *__restrict attr, unsigned int count)",
        ],
        "remainder": ["long double", "(long double x, long double y)"],
        "copysign": ["float", "(float x, float y)"],
        "llogb": ["long", "(double x)"],
        "fileno_unlocked": ["int", "(FILE *stream)"],
        "operator-": ["const_iterator", "(const const_iterator &x, difference_type n)"],
        "f32addf64": ["_Float32", "(_Float64 x, _Float64 y)"],
        "feupdateenv": ["int", "(const fenv_t *envp)"],
        "round": [
            "typename __gnu_cxx::__enable_if<__is_integer<Tp>::__value, double>::__type",
            "(Tp x)",
        ],
        "copy_file": [
            "bool",
            "(const path &from, const path &to, copy_options option, error_code &)",
        ],
        "sinhf64x": ["_Float64x", "(_Float64x x)"],
        "fpclassify": ["int", "(float x)"],
        "pthread_getcpuclockid": [
            "int",
            "(pthread_t thread_id, __clockid_t *clock_id)",
        ],
        "wcstod": [
            "double",
            "(const wchar_t *__restrict nptr, wchar_t **__restrict endptr)",
        ],
        "front_inserter": ["front_insert_iterator<Container>", "(Container &x)"],
        "cend": ["decltype(std::end(cont))", "(const Container &cont)"],
        "siggetmask": ["int", "()"],
        "fdiv": ["float", "(double x, double y)"],
        "swap": [
            "enable_if_t<!(is_move_constructible_v<Tp> && is_swappable_v<Tp>)>",
            "(optional<Tp> &, optional<Tp> &)",
        ],
        "operator delete[]": [
            "void",
            "(void *, std::align_val_t, const std::nothrow_t &)",
        ],
        "ptsname_r": ["int", "(int fd, char *buf, size_t buflen)"],
        "wcspbrk": ["wchar_t *", "(const wchar_t *wcs, const wchar_t *accept)"],
        "betal": ["long double", "(long double a, long double b)"],
        "legendrel": ["long double", "(unsigned int l, long double x)"],
        "operator<": ["bool", "(const _Self &x, const _Self &y)"],
        "gmtime": ["struct tm *", "(const time_t *timer)"],
        "inplace_merge": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, void>",
            "(ExecutionPolicy &&exec, BidirectionalIterator first, BidirectionalIterator middle, BidirectionalIterator last)",
        ],
        "operator>=": [
            "bool",
            "(const move_iterator<Iterator> &x, const move_iterator<Iterator> &y)",
        ],
        "fflush": ["int", "(FILE *stream)"],
        "lcong48_r": ["int", "(unsigned short *param, struct drand48_data *buffer)"],
        "towupper_l": ["wint_t", "(wint_t wc, locale_t locale)"],
        "vscanf": ["int", "(const char *__restrict format, __va_list_tag *arg)"],
        "sigdelset": ["int", "(sigset_t *set, int signo)"],
        "fmax": ["double", "(double x, double y)"],
        "j1": ["double", "(double)"],
        "asinh": ["float", "(float x)"],
        "to_wstring": ["wstring", "(unsigned long val)"],
        "partial_sort_copy": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, RandomAccessIterator>",
            "(ExecutionPolicy &&exec, ForwardIterator first, ForwardIterator last, RandomAccessIterator d_first, RandomAccessIterator d_last, Compare comp)",
        ],
        "tanhf64x": ["_Float64x", "(_Float64x x)"],
        "memrchr": ["void *", "(void *s, int c, size_t n)"],
        "totalordermagf": ["int", "(const float *x, const float *y)"],
        "wcwidth": ["int", "(wchar_t c)"],
        "timer_gettime": ["int", "(timer_t timerid, struct itimerspec *value)"],
        "freopen64": [
            "FILE *",
            "(const char *__restrict filename, const char *__restrict modes, FILE *__restrict stream)",
        ],
        "operator&": [
            "_Expr<_BinClos<struct std::__bitwise_and, std::_Constant, std::_Expr, typename Dom::value_type, Dom>, typename __fun<struct std::__bitwise_and, typename Dom::value_type>::result_type>",
            "(const typename Dom::value_type &t, const _Expr<Dom, typename Dom::value_type> &v)",
        ],
        "swap": [
            "typename enable_if<!std::__array_traits<Tp, Nm>::_Is_swappable::value>::type",
            "(array<Tp, Nm> &, array<Tp, Nm> &)",
        ],
        "strtof": ["float", "(const char *__restrict nptr, char **__restrict endptr)"],
        "any_cast": ["ValueType *", "<typename ValueType>(any *any)"],
        "catgets": [
            "char *",
            "(nl_catd catalog, int set, int number, const char *string)",
        ],
        "operator^": ["perm_options", "(perm_options x, perm_options y)"],
        "j1f32": ["_Float32", "(_Float32)"],
        "operator<": [
            "bool",
            "(const typename iterator_traits<Bi_iter>::value_type &lhs, const sub_match<Bi_iter> &rhs)",
        ],
        "remove_all": ["uintmax_t", "(const path &p)"],
        "iswspace": ["int", "(wint_t wc)"],
        "wcstof64_l": [
            "_Float64",
            "(const wchar_t *__restrict nptr, wchar_t **__restrict endptr, locale_t loc)",
        ],
        "scalbl": ["long double", "(long double x, long double n)"],
        "pthread_mutexattr_getrobust": [
            "int",
            "(const pthread_mutexattr_t *attr, int *robustness)",
        ],
        "pthread_kill": ["int", "(pthread_t threadid, int signo)"],
        "upper_bound": ["FIter", "(FIter, FIter, const Tp &)"],
        "exclusive_scan": [
            "OutputIterator",
            "(InputIterator first, InputIterator last, OutputIterator result, Tp init)",
        ],
        "operator delete": ["void", "(void *, void *)"],
        "find_first_of": [
            "FIter1",
            "(FIter1, FIter1, FIter2, FIter2, BinaryPredicate)",
        ],
        "fputc_unlocked": ["int", "(int c, FILE *stream)"],
        "operator%": [
            "_Expr<_BinClos<struct std::__modulus, std::_Expr, std::_Constant, Dom, typename Dom::value_type>, typename __fun<struct std::__modulus, typename Dom::value_type>::result_type>",
            "(const _Expr<Dom, typename Dom::value_type> &v, const typename Dom::value_type &t)",
        ],
        "swap": [
            "void",
            "(map<Key, Tp, Compare, Alloc> &x, map<Key, Tp, Compare, Alloc> &y)",
        ],
        "get": ["const Tp &&", "<std::size_t Int>(const array<Tp, Nm> &&arr)"],
        "operator^": [
            "_Expr<_BinClos<struct std::__bitwise_xor, std::_ValArray, std::_Expr, typename Dom::value_type, Dom>, typename __fun<struct std::__bitwise_xor, typename Dom::value_type>::result_type>",
            "(const valarray<typename Dom::value_type> &v, const _Expr<Dom, typename Dom::value_type> &e)",
        ],
        "abs": [
            "enable_if_t<numeric_limits<Rep>::is_signed, duration<Rep, Period>>",
            "(duration<Rep, Period> d)",
        ],
        "exchange": ["Tp", "(Tp &obj, Up &&new_val)"],
        "operator<=": ["bool", "(const _Self &x, const _Self &y)"],
        "atomic_exchange_explicit": [
            "ITp",
            "(volatile atomic<ITp> *a, __atomic_val_t<ITp> i, memory_order m)",
        ],
        "swap": [
            "void",
            "(unordered_set<Value, Hash, Pred, Alloc> &x, unordered_set<Value, Hash, Pred, Alloc> &y)",
        ],
        "end": ["decltype(cont.end())", "(const Container &cont)"],
        "fegetenv": ["int", "(fenv_t *envp)"],
        "sph_neumann": [
            "typename __gnu_cxx::__promote<Tp>::__type",
            "(unsigned int n, Tp x)",
        ],
        "mktemp": ["char *", "(char *template)"],
        "isfinite": ["bool", "(long double x)"],
        "operator" "s": ["chrono::duration<long double>", "(long double secs)"],
        "operator|=": ["copy_options &", "(copy_options &x, copy_options y)"],
        "expm1l": ["long double", "(long double x)"],
        "pthread_mutexattr_getprioceiling": [
            "int",
            "(const pthread_mutexattr_t *__restrict attr, int *__restrict prioceiling)",
        ],
        "is_socket": ["bool", "(const path &p)"],
        "ufromfpf64": ["__uintmax_t", "(_Float64 x, int round, unsigned int width)"],
        "cbrtf64": ["_Float64", "(_Float64 x)"],
        "pthread_equal": ["int", "(pthread_t thread1, pthread_t thread2)"],
        "operator==": ["bool", "(const Tp &x, const complex<Tp> &y)"],
        "tan": ["complex<Tp>", "(const complex<Tp> &)"],
        "frexpf32x": ["_Float32x", "(_Float32x x, int *exponent)"],
        "remquol": ["long double", "(long double x, long double y, int *quo)"],
        "lgammaf": ["float", "(float)"],
        "operator delete": ["void", "(void *, std::align_val_t)"],
        "jrand48": ["long", "(unsigned short *xsubi)"],
        "end": ["Tp *", "(Tp (&arr)[Nm])"],
        "nextupf32x": ["_Float32x", "(_Float32x x)"],
        "declval": ["decltype(__declval<Tp>(0))", "<typename Tp>()"],
        "operator"
        "min": ["chrono::duration<long double, ratio<60, 1>>", "(long double mins)"],
        "equal": ["bool", "(II1 first1, II1 last1, II2 first2, II2 last2)"],
        "operator<=": [
            "bool",
            "(const typename iterator_traits<Bi_iter>::value_type &lhs, const sub_match<Bi_iter> &rhs)",
        ],
        "vswscanf": [
            "int",
            "(const wchar_t *__restrict s, const wchar_t *__restrict format, __va_list_tag *arg)",
        ],
        "mkostemps": ["int", "(char *template, int suffixlen, int flags)"],
        "operator^": [
            "_Expr<_BinClos<__bitwise_xor, std::_ValArray, std::_ValArray, Tp, Tp>, typename __fun<__bitwise_xor, Tp>::result_type>",
            "(const valarray<Tp> &v, const valarray<Tp> &w)",
        ],
        "getline": [
            "basic_istream<CharT, Traits> &",
            "(basic_istream<CharT, Traits> &is, basic_string<CharT, Traits, Alloc> &str)",
        ],
        "isgreater": ["bool", "(double x, double y)"],
        "isupper": ["bool", "(CharT, const locale &)"],
        "operator<": [
            "bool",
            "(const sub_match<BiIter> &lhs, const sub_match<BiIter> &rhs)",
        ],
        "is_empty": ["bool", "(const path &p)"],
        "fetestexcept": ["int", "(int excepts)"],
        "llogbf32x": ["long", "(_Float32x x)"],
        "reduce": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, typename iterator_traits<ForwardIterator>::value_type>",
            "(ExecutionPolicy &&exec, ForwardIterator first, ForwardIterator last)",
        ],
        "uninitialized_move_n": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, ForwardIterator>",
            "(ExecutionPolicy &&exec, InputIterator first, Size n, ForwardIterator result)",
        ],
        "operator<=": [
            "_Expr<_BinClos<struct std::__less_equal, std::_Expr, std::_Constant, Dom, typename Dom::value_type>, typename __fun<struct std::__less_equal, typename Dom::value_type>::result_type>",
            "(const _Expr<Dom, typename Dom::value_type> &v, const typename Dom::value_type &t)",
        ],
        "pthread_atfork": [
            "int",
            "(void (*prepare)(), void (*parent)(), void (*child)())",
        ],
        "uninitialized_copy_n": [
            "ForwardIterator",
            "(InputIterator first, Size n, ForwardIterator result)",
        ],
        "pthread_rwlock_wrlock": ["int", "(pthread_rwlock_t *rwlock)"],
        "operator|": ["match_flag_type", "(match_flag_type a, match_flag_type b)"],
        "setjmp": ["int", "(struct __jmp_buf_tag *env)"],
        "make_heap": ["void", "(RAIter, RAIter)"],
        "strptime_l": [
            "char *",
            "(const char *__restrict s, const char *__restrict fmt, struct tm *tp, locale_t loc)",
        ],
        "operator==": ["bool", "(const complex<Tp> &x, const complex<Tp> &y)"],
        "operator>>": [
            "std::basic_istream<CharT, Traits> &",
            "(std::basic_istream<CharT, Traits> &is, fisher_f_distribution<RealType> &x)",
        ],
        "sigwaitinfo": [
            "int",
            "(const sigset_t *__restrict set, siginfo_t *__restrict info)",
        ],
        "stable_sort": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, void>",
            "(ExecutionPolicy &&exec, RandomAccessIterator first, RandomAccessIterator last, Compare comp)",
        ],
        "pselect": [
            "int",
            "(int nfds, fd_set *__restrict readfds, fd_set *__restrict writefds, fd_set *__restrict exceptfds, const struct timespec *__restrict timeout, const __sigset_t *__restrict sigmask)",
        ],
        "iswpunct": ["int", "(wint_t wc)"],
        "operator<<": [
            "std::basic_ostream<CharT, Traits> &",
            "(std::basic_ostream<CharT, Traits> &os, const path &p)",
        ],
        "copysignf32x": ["_Float32x", "(_Float32x x, _Float32x y)"],
        "operator<<": ["__byte_op_t<IntegerType>", "(byte b, IntegerType shift)"],
        "operator!=": [
            "bool",
            "(const std::weibull_distribution<RealType> &d1, const std::weibull_distribution<RealType> &d2)",
        ],
        "iscntrl_l": ["int", "(int, locale_t)"],
        "operator!=": ["bool", "(const Tp &x, const complex<Tp> &y)"],
        "is_socket": ["bool", "(file_status s)"],
        "pthread_rwlock_init": [
            "int",
            "(pthread_rwlock_t *__restrict rwlock, const pthread_rwlockattr_t *__restrict attr)",
        ],
        "ldexpf64x": ["_Float64x", "(_Float64x x, int exponent)"],
        "create_symlink": ["void", "(const path &to, const path &new_symlink)"],
        "ldexpf64": ["_Float64", "(_Float64 x, int exponent)"],
        "swap": ["void", "(thread &x, thread &y)"],
        "popen": ["FILE *", "(const char *command, const char *modes)"],
        "isunordered": ["bool", "(long double x, long double y)"],
        "operator==": [
            "bool",
            "(const uniform_int_distribution<IntType> &d1, const uniform_int_distribution<IntType> &d2)",
        ],
        "ftell": ["long", "(FILE *stream)"],
        "from_chars": [
            "__detail::__integer_from_chars_result_type<Tp>",
            "(const char *first, const char *last, Tp &value, int base = 10)",
        ],
        "operator<": [
            "bool",
            "(const reverse_iterator<Iterator> &x, const reverse_iterator<Iterator> &y)",
        ],
        "pow": [
            "_Expr<_BinClos<struct std::_Pow, std::_Constant, std::_Expr, typename Dom::value_type, Dom>, typename Dom::value_type>",
            "(const typename Dom::value_type &t, const _Expr<Dom, typename Dom::value_type> &e)",
        ],
        "operator>>": ["__byte_op_t<IntegerType>", "(byte b, IntegerType shift)"],
        "operator==": ["bool", "(const path &lhs, const path &rhs)"],
        "conj": ["std::complex<typename __gnu_cxx::__promote<Tp>::__type>", "(Tp x)"],
        "fromfpf32x": ["__intmax_t", "(_Float32x x, int round, unsigned int width)"],
        "operator&=": ["const _Ios_Openmode &", "(_Ios_Openmode &a, _Ios_Openmode b)"],
        "comp_ellint_1f": ["float", "(float k)"],
        "data": ["decltype(cont.data())", "(Container &cont)"],
        "operator^=": ["perm_options &", "(perm_options &x, perm_options y)"],
        "operator==": [
            "_Expr<_BinClos<__equal_to, std::_Constant, std::_ValArray, Tp, Tp>, typename __fun<__equal_to, Tp>::result_type>",
            "(const typename valarray<Tp>::value_type &t, const valarray<Tp> &v)",
        ],
        "is_fifo": ["bool", "(const path &p)"],
        "operator<=": [
            "bool",
            "(const sub_match<BiIter> &lhs, const sub_match<BiIter> &rhs)",
        ],
        "isprint": ["bool", "(CharT, const locale &)"],
        "asinh": ["std::complex<Tp>", "(const std::complex<Tp> &)"],
        "to_chars": [
            "to_chars_result",
            "(char *first, char *last, unsigned long value, int base)",
        ],
        "opendir": ["DIR *", "(const char *name)"],
        "to_chars": [
            "to_chars_result",
            "(char *first, char *last, int value, int base)",
        ],
        "operator!=": ["bool", "(const complex<Tp> &x, const complex<Tp> &y)"],
        "operator!=": [
            "_Expr<_BinClos<struct std::__not_equal_to, std::_Expr, std::_ValArray, Dom, typename Dom::value_type>, typename __fun<struct std::__not_equal_to, typename Dom::value_type>::result_type>",
            "(const _Expr<Dom, typename Dom::value_type> &e, const valarray<typename Dom::value_type> &v)",
        ],
        "all_of": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, bool>",
            "(ExecutionPolicy &&exec, ForwardIterator first, ForwardIterator last, Predicate pred)",
        ],
        "get": ["Tp &", "<std::size_t Int>(array<Tp, Nm> &arr)"],
        "proj": ["std::complex<typename __gnu_cxx::__promote<Tp>::__type>", "(Tp x)"],
        "llrintf32x": ["long long", "(_Float32x x)"],
        "regex_match": [
            "bool",
            "(Bi_iter s, Bi_iter e, match_results<Bi_iter, Alloc> &m, const basic_regex<Ch_type, Rx_traits> &re, regex_constants::match_flag_type flags = regex_constants::match_default)",
        ],
        "rotate": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, ForwardIterator>",
            "(ExecutionPolicy &&exec, ForwardIterator first, ForwardIterator middle, ForwardIterator last)",
        ],
        "noshowbase": ["ios_base &", "(ios_base &base)"],
        "get": ["Tp &&", "(pair<Tp, Up> &&p)"],
        "jnf64x": ["_Float64x", "(int, _Float64x)"],
        "alphasort64": [
            "int",
            "(const struct dirent64 **e1, const struct dirent64 **e2)",
        ],
        "for_each": ["Funct", "(IIter, IIter, Funct)"],
        "isupper": ["int", "(int)"],
        "asinhf32x": ["_Float32x", "(_Float32x x)"],
        "f32mulf32x": ["_Float32", "(_Float32x x, _Float32x y)"],
        "atan2": [
            "_Expr<_BinClos<struct std::_Atan2, std::_ValArray, std::_ValArray, Tp, Tp>, Tp>",
            "(const valarray<Tp> &v, const valarray<Tp> &w)",
        ],
        "pthread_barrierattr_destroy": ["int", "(pthread_barrierattr_t *attr)"],
        "stoll": ["long long", "(const wstring &str, size_t *idx = 0, int base = 10)"],
        "operator!=": ["bool", "(const path &lhs, const path &rhs)"],
        "sinhf64": ["_Float64", "(_Float64 x)"],
        "operator<=": [
            "bool",
            "(basic_string_view<CharT, Traits> x, basic_string_view<CharT, Traits> y)",
        ],
        "operator>": [
            "bool",
            "(const sub_match<Bi_iter> &lhs, const typename iterator_traits<Bi_iter>::value_type &rhs)",
        ],
        "fabsf32x": ["_Float32x", "(_Float32x x)"],
        "exp": [
            "_Expr<_UnClos<struct std::_Exp, std::_ValArray, Tp>, Tp>",
            "(const valarray<Tp> &v)",
        ],
        "riemann_zeta": ["typename __gnu_cxx::__promote<Tp>::__type", "(Tp s)"],
        "operator delete": [
            "void",
            "(void *, std::align_val_t, const std::nothrow_t &)",
        ],
        "vprintf": ["int", "(const char *__restrict format, __va_list_tag *arg)"],
        "round": ["long double", "(long double x)"],
        "logb": ["long double", "(long double x)"],
        "shuffle": ["void", "(RAIter, RAIter, UGenerator &&)"],
        "fsetpos": ["int", "(FILE *stream, const fpos_t *pos)"],
        "f32xmulf64x": ["_Float32x", "(_Float64x x, _Float64x y)"],
        "jnf32": ["_Float32", "(int, _Float32)"],
        "clearenv": ["int", "()"],
        "log10f": ["float", "(float x)"],
        "reduce": [
            "Tp",
            "(InputIterator first, InputIterator last, Tp init, BinaryOperation binary_op)",
        ],
        "mrand48_r": [
            "int",
            "(struct drand48_data *__restrict buffer, long *__restrict result)",
        ],
        "operator" "i": ["std::complex<double>", "(unsigned long long num)"],
        "is_fifo": ["bool", "(file_status s)"],
        "sigfillset": ["int", "(sigset_t *set)"],
        "pthread_join": ["int", "(pthread_t th, void **thread_return)"],
        "cyl_bessel_il": ["long double", "(long double nu, long double x)"],
        "asinhf64": ["_Float64", "(_Float64 x)"],
        "fromfpxf64x": ["__intmax_t", "(_Float64x x, int round, unsigned int width)"],
        "cbrt": ["double", "(double x)"],
        "pthread_getconcurrency": ["int", "()"],
        "ceilf32x": ["_Float32x", "(_Float32x x)"],
        "atomic_fetch_sub_explicit": [
            "ITp",
            "(atomic<ITp> *a, __atomic_diff_t<ITp> i, memory_order m)",
        ],
        "laguerrel": ["long double", "(unsigned int n, long double x)"],
        "fmaxf32x": ["_Float32x", "(_Float32x x, _Float32x y)"],
        "log1p": ["long double", "(long double x)"],
        "regex_search": [
            "bool",
            "(Bi_iter first, Bi_iter last, const basic_regex<Ch_type, Rx_traits> &re, regex_constants::match_flag_type flags = regex_constants::match_default)",
        ],
        "setpayloadsigl": ["int", "(long double *x, long double payload)"],
        "lgammaf64": ["_Float64", "(_Float64)"],
        "operator|": [
            "directory_options",
            "(directory_options x, directory_options y)",
        ],
        "operator/": [
            "_Expr<_BinClos<__divides, std::_Constant, std::_ValArray, Tp, Tp>, typename __fun<__divides, Tp>::result_type>",
            "(const typename valarray<Tp>::value_type &t, const valarray<Tp> &v)",
        ],
        "operator<<": [
            "_Expr<_BinClos<__shift_left, std::_ValArray, std::_Constant, Tp, Tp>, typename __fun<__shift_left, Tp>::result_type>",
            "(const valarray<Tp> &v, const typename valarray<Tp>::value_type &t)",
        ],
        "nth_element": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, void>",
            "(ExecutionPolicy &&exec, RandomAccessIterator first, RandomAccessIterator nth, RandomAccessIterator last)",
        ],
        "atomic_fetch_add_explicit": [
            "ITp",
            "(atomic<ITp> *a, __atomic_diff_t<ITp> i, memory_order m)",
        ],
        "is_other": ["bool", "(file_status)"],
        "setpayloadf32": ["int", "(_Float32 *x, _Float32 payload)"],
        "wctrans": ["wctrans_t", "(const char *property)"],
        "remove_copy_if": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, ForwardIterator2>",
            "(ExecutionPolicy &&exec, ForwardIterator1 first, ForwardIterator1 last, ForwardIterator2 result, Predicate pred)",
        ],
        "operator-": [
            "decltype(x.base() - y.base())",
            "(const move_iterator<IteratorL> &x, const move_iterator<IteratorR> &y)",
        ],
        "ceil": ["float", "(float x)"],
        "llrint": ["long long", "(long double x)"],
        "strtoimax": [
            "intmax_t",
            "(const char *__restrict nptr, char **__restrict endptr, int base)",
        ],
        "bind2nd": ["binder2nd<Operation>", "(const Operation &fn, const Tp &x)"],
        "operator==": [
            "bool",
            "(const geometric_distribution<IntType> &d1, const geometric_distribution<IntType> &d2)",
        ],
        "versionsort64": [
            "int",
            "(const struct dirent64 **e1, const struct dirent64 **e2)",
        ],
        "wcstod_l": [
            "double",
            "(const wchar_t *__restrict nptr, wchar_t **__restrict endptr, locale_t loc)",
        ],
        "bind_textdomain_codeset": [
            "char *",
            "(const char *domainname, const char *codeset)",
        ],
        "logf64x": ["_Float64x", "(_Float64x x)"],
        "operator new[]": ["void *", "(std::size_t, const std::nothrow_t &)"],
        "ldexp": [
            "typename __gnu_cxx::__enable_if<__is_integer<Tp>::__value, double>::__type",
            "(Tp x, int exp)",
        ],
        "nanl": ["long double", "(const char *tagb)"],
        "frexpf": ["float", "(float x, int *exponent)"],
        "towupper": ["wint_t", "(wint_t wc)"],
        "operator>>": [
            "std::basic_istream<CharT, Traits> &",
            "(std::basic_istream<CharT, Traits> &is, shuffle_order_engine<RandomNumberEngine, k> &x)",
        ],
        "timer_delete": ["int", "(timer_t timerid)"],
        "expintf": ["float", "(float x)"],
        "operator!=": [
            "bool",
            "(const std::uniform_int_distribution<IntType> &d1, const std::uniform_int_distribution<IntType> &d2)",
        ],
        "find_end": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, ForwardIterator1>",
            "(ExecutionPolicy &&exec, ForwardIterator1 first, ForwardIterator1 last, ForwardIterator2 s_first, ForwardIterator2 s_last, BinaryPredicate pred)",
        ],
        "clamp": ["const Tp &", "(const Tp &, const Tp &, const Tp &)"],
        "transform_exclusive_scan": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, ForwardIterator2>",
            "(ExecutionPolicy &&exec, ForwardIterator1 first, ForwardIterator1 last, ForwardIterator2 result, Tp init, BinaryOperation binary_op, UnaryOperation unary_op)",
        ],
        "atanf64": ["_Float64", "(_Float64 x)"],
        "pthread_attr_setscope": ["int", "(pthread_attr_t *attr, int scope)"],
        "regex_replace": [
            "basic_string<Ch_type>",
            "(const Ch_type *s, const basic_regex<Ch_type, Rx_traits> &e, const basic_string<Ch_type, St, Sa> &fmt, regex_constants::match_flag_type flags = regex_constants::match_default)",
        ],
        "operator==": ["bool", "(const shared_ptr<Tp> &a, const shared_ptr<Up> &b)"],
        "comp_ellint_3l": ["long double", "(long double k, long double nu)"],
        "uninitialized_move": [
            "ForwardIterator",
            "(InputIterator first, InputIterator last, ForwardIterator result)",
        ],
        "scalbln": ["float", "(float x, long ex)"],
        "swap": [
            "void",
            "(basic_fstream<CharT, Traits> &x, basic_fstream<CharT, Traits> &y)",
        ],
        "operator-": ["_Self", "(const _Self &x, difference_type n)"],
        "totalordermagf64": ["int", "(const _Float64 *x, const _Float64 *y)"],
        "log": ["complex<Tp>", "(const complex<Tp> &)"],
        "pthread_mutex_init": [
            "int",
            "(pthread_mutex_t *mutex, const pthread_mutexattr_t *mutexattr)",
        ],
        "operator==": [
            "bool",
            "(const istreambuf_iterator<CharT, Traits> &a, const istreambuf_iterator<CharT, Traits> &b)",
        ],
        "equivalent": ["bool", "(const path &p1, const path &p2)"],
        "cbrt": [
            "typename __gnu_cxx::__enable_if<__is_integer<Tp>::__value, double>::__type",
            "(Tp x)",
        ],
        "read_symlink": ["path", "(const path &p)"],
        "canonicalizel": ["int", "(long double *cx, const long double *x)"],
        "operator==": ["bool", "(const pair<T1, T2> &x, const pair<T1, T2> &y)"],
        "operator>=": [
            "bool",
            "(const forward_list<Tp, Alloc> &lx, const forward_list<Tp, Alloc> &ly)",
        ],
        "modf": ["double", "(double x, double *iptr)"],
        "operator/": [
            "_Expr<_BinClos<__divides, std::_ValArray, std::_Constant, Tp, Tp>, typename __fun<__divides, Tp>::result_type>",
            "(const valarray<Tp> &v, const typename valarray<Tp>::value_type &t)",
        ],
        "sigsetmask": ["int", "(int mask)"],
        "is_sorted": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, bool>",
            "(ExecutionPolicy &&exec, ForwardIterator first, ForwardIterator last, Compare comp)",
        ],
        "is_heap_until": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, RandomAccessIterator>",
            "(ExecutionPolicy &&exec, RandomAccessIterator first, RandomAccessIterator last, Compare comp)",
        ],
        "uninitialized_fill_n": [
            "ForwardIterator",
            "(ForwardIterator first, Size n, const Tp &x)",
        ],
        "find_end": ["FIter1", "(FIter1, FIter1, FIter2, FIter2)"],
        "finitel": ["int", "(long double value)"],
        "operator<<": [
            "basic_ostream<CharT, Traits> &",
            "(basic_ostream<CharT, Traits> &os, const directory_entry &d)",
        ],
        "atomic_exchange": [
            "__shared_ptr<Tp, Lp>",
            "(__shared_ptr<Tp, Lp> *p, __shared_ptr<Tp, Lp> r)",
        ],
        "partial_sort_copy": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, RandomAccessIterator>",
            "(ExecutionPolicy &&exec, ForwardIterator first, ForwardIterator last, RandomAccessIterator d_first, RandomAccessIterator d_last)",
        ],
        "operator+": ["iterator", "(const iterator &x, difference_type n)"],
        "logb": ["double", "(double x)"],
        "pthread_mutexattr_setrobust": [
            "int",
            "(pthread_mutexattr_t *attr, int robustness)",
        ],
        "fdim": ["float", "(float x, float y)"],
        "operator>": [
            "bool",
            "(const vector<Tp, Alloc> &x, const vector<Tp, Alloc> &y)",
        ],
        "create_directories": ["bool", "(const path &p, error_code &ec)"],
        "ilogb": ["int", "(float x)"],
        "operator&&": [
            "_Expr<_BinClos<struct std::__logical_and, std::_Expr, std::_ValArray, Dom, typename Dom::value_type>, typename __fun<struct std::__logical_and, typename Dom::value_type>::result_type>",
            "(const _Expr<Dom, typename Dom::value_type> &e, const valarray<typename Dom::value_type> &v)",
        ],
        "acosh": ["long double", "(long double x)"],
        "set_intersection": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, ForwardIterator>",
            "(ExecutionPolicy &&exec, ForwardIterator1 first1, ForwardIterator1 last1, ForwardIterator2 first2, ForwardIterator2 last2, ForwardIterator result, Compare comp)",
        ],
        "uninitialized_value_construct": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, void>",
            "(ExecutionPolicy &&exec, ForwardIterator first, ForwardIterator last)",
        ],
        "memrchr": ["const void *", "(const void *s, int c, size_t n)"],
        "sqrtf32x": ["_Float32x", "(_Float32x x)"],
        "coshf": ["float", "(float x)"],
        "expint": ["typename __gnu_cxx::__promote<Tp>::__type", "(Tp x)"],
        "log10f32x": ["_Float32x", "(_Float32x x)"],
        "expm1": ["float", "(float x)"],
        "operator!=": ["bool", "(const shared_ptr<Tp> &a, const shared_ptr<Up> &b)"],
        "signal": ["__sighandler_t", "(int sig, __sighandler_t handler)"],
        "operator!=": [
            "bool",
            "(const std::independent_bits_engine<RandomNumberEngine, w, UIntType> &lhs, const std::independent_bits_engine<RandomNumberEngine, w, UIntType> &rhs)",
        ],
        "operator/": [
            "_Expr<_BinClos<__divides, std::_ValArray, std::_ValArray, Tp, Tp>, typename __fun<__divides, Tp>::result_type>",
            "(const valarray<Tp> &v, const valarray<Tp> &w)",
        ],
        "operator<=": [
            "_Expr<_BinClos<__less_equal, std::_ValArray, std::_ValArray, Tp, Tp>, typename __fun<__less_equal, Tp>::result_type>",
            "(const valarray<Tp> &v, const valarray<Tp> &w)",
        ],
        "isunordered": [
            "typename __gnu_cxx::__enable_if<(__is_arithmetic<Tp>::__value && __is_arithmetic<Up>::__value), bool>::__type",
            "(Tp x, Up y)",
        ],
        "operator!=": [
            "bool",
            "(const istreambuf_iterator<CharT, Traits> &a, const istreambuf_iterator<CharT, Traits> &b)",
        ],
        "asin": ["float", "(float x)"],
        "tanh": [
            "_Expr<_UnClos<struct std::_Tanh, std::_ValArray, Tp>, Tp>",
            "(const valarray<Tp> &v)",
        ],
        "stoi": ["int", "(const string &str, size_t *idx = 0, int base = 10)"],
        "f32mulf64x": ["_Float32", "(_Float64x x, _Float64x y)"],
        "is_permutation": [
            "bool",
            "(ForwardIterator1 first1, ForwardIterator1 last1, ForwardIterator2 first2, ForwardIterator2 last2)",
        ],
        "acoshf32x": ["_Float32x", "(_Float32x x)"],
        "sinh": [
            "_Expr<_UnClos<struct std::_Sinh, std::_ValArray, Tp>, Tp>",
            "(const valarray<Tp> &v)",
        ],
        "issignaling": ["int", "(long double val)"],
        "cosh": [
            "_Expr<_UnClos<struct std::_Cosh, std::_ValArray, Tp>, Tp>",
            "(const valarray<Tp> &v)",
        ],
        "pthread_attr_getscope": [
            "int",
            "(const pthread_attr_t *__restrict attr, int *__restrict scope)",
        ],
        "nexttoward": ["float", "(float x, long double y)"],
        "llroundf32": ["long long", "(_Float32 x)"],
        "operator==": [
            "bool",
            "(const __weak_count<Lp> &a, const __weak_count<Lp> &b)",
        ],
        "operator" "sv": ["basic_string_view<char>", "(const char *str, size_t len)"],
        "operator>": ["bool", "(const _Self &x, const _Self &y)"],
        "partial_sort": ["void", "(RAIter, RAIter, RAIter, Compare)"],
        "ellint_3f": ["float", "(float k, float nu, float phi)"],
        "operator>": [
            "bool",
            "(const basic_string<CharT, Traits, Alloc> &lhs, const CharT *rhs)",
        ],
        "fread": [
            "size_t",
            "(void *__restrict ptr, size_t size, size_t n, FILE *__restrict stream)",
        ],
        "operator-": ["complex<Tp>", "(const complex<Tp> &x)"],
        "tgamma": [
            "typename __gnu_cxx::__enable_if<__is_integer<Tp>::__value, double>::__type",
            "(Tp x)",
        ],
        "on_exit": ["int", "(void (*func)(int, void *), void *arg)"],
        "scandirat64": [
            "int",
            "(int dfd, const char *__restrict dir, struct dirent64 ***__restrict namelist, int (*selector)(const struct dirent64 *), int (*cmp)(const struct dirent64 **, const struct dirent64 **))",
        ],
        "strxfrm_l": ["size_t", "(char *dest, const char *src, size_t n, locale_t l)"],
        "operator==": [
            "bool",
            "(const __shared_ptr<Tp1, Lp> &a, const __shared_ptr<Tp2, Lp> &b)",
        ],
        "operator"
        "ms": ["chrono::duration<long double, milli>", "(long double msecs)"],
        "operator&&": [
            "_Expr<_BinClos<__logical_and, std::_Constant, std::_ValArray, Tp, Tp>, typename __fun<__logical_and, Tp>::result_type>",
            "(const typename valarray<Tp>::value_type &t, const valarray<Tp> &v)",
        ],
        "operator>=": ["bool", "(nullptr_t, const shared_ptr<Tp> &a)"],
        "is_partitioned": ["bool", "(IIter, IIter, Predicate)"],
        "atomic_compare_exchange_strong": [
            "bool",
            "(__shared_ptr<Tp, Lp> *p, __shared_ptr<Tp, Lp> *v, __shared_ptr<Tp, Lp> w)",
        ],
        "strncpy": [
            "char *",
            "(char *__restrict dest, const char *__restrict src, size_t n)",
        ],
        "strstr": ["char *", "(char *haystack, const char *needle)"],
        "readdir64": ["struct dirent64 *", "(DIR *dirp)"],
        "operator^=": ["const _Ios_Iostate &", "(_Ios_Iostate &a, _Ios_Iostate b)"],
        "pthread_setcancelstate": ["int", "(int state, int *oldstate)"],
        "strtoull": [
            "unsigned long long",
            "(const char *__restrict nptr, char **__restrict endptr, int base)",
        ],
        "copysign": ["typename __gnu_cxx::__promote_2<Tp, Up>::__type", "(Tp x, Up y)"],
        "to_string": ["string", "(long long val)"],
        "cos": ["long double", "(long double x)"],
        "fpclassify": ["int", "(long double x)"],
        "abs": ["int", "(int x)"],
        "includes": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, bool>",
            "(ExecutionPolicy &&exec, ForwardIterator1 first1, ForwardIterator1 last1, ForwardIterator2 first2, ForwardIterator2 last2, Compare comp)",
        ],
        "operator>": [
            "bool",
            "(const typename iterator_traits<Bi_iter>::value_type &lhs, const sub_match<Bi_iter> &rhs)",
        ],
        "rend": ["reverse_iterator<const Tp *>", "(initializer_list<Tp> il)"],
        "operator>>": [
            "std::basic_istream<CharT, Traits> &",
            "(std::basic_istream<CharT, Traits> &is, lognormal_distribution<RealType> &x)",
        ],
        "reduce": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, Tp>",
            "(ExecutionPolicy &&exec, ForwardIterator first, ForwardIterator last, Tp init, BinaryOperation binary_op)",
        ],
        "operator<": ["bool", "(const unique_ptr<Tp, Dp> &x, nullptr_t)"],
        "atomic_flag_clear_explicit": ["void", "(atomic_flag *a, memory_order m)"],
        "mkostemps64": ["int", "(char *template, int suffixlen, int flags)"],
        "rintl": ["long double", "(long double x)"],
        "operator>>": [
            "std::basic_istream<CharT, Traits> &",
            "(std::basic_istream<CharT, Traits> &is, student_t_distribution<RealType> &x)",
        ],
        "fmax": ["float", "(float x, float y)"],
        "operator-": [
            "typename common_type<duration<Rep1, Period1>, duration<Rep2, Period2>>::type",
            "(const duration<Rep1, Period1> &lhs, const duration<Rep2, Period2> &rhs)",
        ],
        "operator%": [
            "_Expr<_BinClos<__modulus, std::_ValArray, std::_Constant, Tp, Tp>, typename __fun<__modulus, Tp>::result_type>",
            "(const valarray<Tp> &v, const typename valarray<Tp>::value_type &t)",
        ],
        "atan": ["float", "(float x)"],
        "operator-": [
            "difference_type",
            "(const _Self &x, const _Deque_iterator<Tp, RefR, PtrR> &y)",
        ],
        "swap": ["void", "(list<Tp, Alloc> &x, list<Tp, Alloc> &y)"],
        "atoi": ["int", "(const char *nptr)"],
        "get_unexpected": ["unexpected_handler", "()"],
        "operator==": [
            "bool",
            "(const std::normal_distribution<RealType> &d1, const std::normal_distribution<RealType> &d2)",
        ],
        "posix_openpt": ["int", "(int oflag)"],
        "strtold_l": [
            "long double",
            "(const char *__restrict nptr, char **__restrict endptr, locale_t loc)",
        ],
        "pthread_getaffinity_np": [
            "int",
            "(pthread_t th, size_t cpusetsize, cpu_set_t *cpuset)",
        ],
        "div": ["ldiv_t", "(long i, long j)"],
        "pthread_attr_setguardsize": [
            "int",
            "(pthread_attr_t *attr, size_t guardsize)",
        ],
        "operator!=": [
            "bool",
            "(const __shared_ptr<Tp1, Lp> &a, const __shared_ptr<Tp2, Lp> &b)",
        ],
        "mkstemps64": ["int", "(char *template, int suffixlen)"],
        "operator>=": [
            "_Expr<_BinClos<__greater_equal, std::_Constant, std::_ValArray, Tp, Tp>, typename __fun<__greater_equal, Tp>::result_type>",
            "(const typename valarray<Tp>::value_type &t, const valarray<Tp> &v)",
        ],
        "vfprintf": [
            "int",
            "(FILE *__restrict s, const char *__restrict format, __va_list_tag *arg)",
        ],
        "pthread_cond_signal": ["int", "(pthread_cond_t *cond)"],
        "swap": [
            "typename enable_if<!__is_swappable<Dp>::value>::type",
            "(unique_ptr<Tp, Dp> &, unique_ptr<Tp, Dp> &)",
        ],
        "hard_link_count": ["uintmax_t", "(const path &)"],
        "copy_if": ["OIter", "(IIter, IIter, OIter, Predicate)"],
        "isspace": ["bool", "(CharT, const locale &)"],
        "ilogb": ["int", "(double x)"],
        "operator==": [
            "bool",
            "(const CharT *lhs, const basic_string<CharT, Traits, Alloc> &rhs)",
        ],
        "strndup": ["char *", "(const char *string, size_t n)"],
        "for_each_n": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, ForwardIterator>",
            "(ExecutionPolicy &&exec, ForwardIterator first, Size n, Function f)",
        ],
        "asinh": ["double", "(double x)"],
        "siglongjmp": ["void", "(struct __jmp_buf_tag *env, int val)"],
        "right": ["ios_base &", "(ios_base &base)"],
        "max_element": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, ForwardIterator>",
            "(ExecutionPolicy &&exec, ForwardIterator first, ForwardIterator last)",
        ],
        "remquof64x": ["_Float64x", "(_Float64x x, _Float64x y, int *quo)"],
        "fromfpx": ["__intmax_t", "(double x, int round, unsigned int width)"],
        "operator!=": [
            "bool",
            "(const std::uniform_real_distribution<IntType> &d1, const std::uniform_real_distribution<IntType> &d2)",
        ],
        "pthread_spin_lock": ["int", "(pthread_spinlock_t *lock)"],
        "min": ["Tp", "(initializer_list<Tp>, Compare)"],
        "operator-": [
            "decltype(y.base() - x.base())",
            "(const reverse_iterator<IteratorL> &x, const reverse_iterator<IteratorR> &y)",
        ],
        "swap": ["void", "(unique_lock<Mutex> &x, unique_lock<Mutex> &y)"],
        "operator<=": ["bool", "(const unique_ptr<Tp, Dp> &x, nullptr_t)"],
        "operator>": [
            "bool",
            "(const sub_match<BiIter> &lhs, const sub_match<BiIter> &rhs)",
        ],
        "unique_copy": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, ForwardIterator2>",
            "(ExecutionPolicy &&exec, ForwardIterator1 first, ForwardIterator1 last, ForwardIterator2 result)",
        ],
        "atomic_compare_exchange_weak_explicit": [
            "bool",
            "(volatile atomic<ITp> *a, __atomic_val_t<ITp> *i1, __atomic_val_t<ITp> i2, memory_order m1, memory_order m2)",
        ],
        "exit": ["void", "(int status)"],
        "abs": ["__float128", "(__float128 x)"],
        "minmax": ["pair<Tp, Tp>", "(initializer_list<Tp>, Compare)"],
        "create_directory_symlink": [
            "void",
            "(const path &to, const path &new_symlink)",
        ],
        "iswalpha": ["int", "(wint_t wc)"],
        "regex_replace": [
            "Out_iter",
            "(Out_iter out, Bi_iter first, Bi_iter last, const basic_regex<Ch_type, Rx_traits> &e, const basic_string<Ch_type, St, Sa> &fmt, regex_constants::match_flag_type flags = regex_constants::match_default)",
        ],
        "uninitialized_value_construct_n": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, ForwardIterator>",
            "(ExecutionPolicy &&exec, ForwardIterator first, Size n)",
        ],
        "uninitialized_default_construct_n": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, ForwardIterator>",
            "(ExecutionPolicy &&exec, ForwardIterator first, Size n)",
        ],
        "operator!=": [
            "bool",
            "(const std::gamma_distribution<RealType> &d1, const std::gamma_distribution<RealType> &d2)",
        ],
        "log2f": ["float", "(float x)"],
        "operator!=": [
            "bool",
            "(const std::normal_distribution<RealType> &d1, const std::normal_distribution<RealType> &d2)",
        ],
        "prev": [
            "BidirectionalIterator",
            "(BidirectionalIterator x, typename iterator_traits<BidirectionalIterator>::difference_type n = 1)",
        ],
        "operator/": [
            "_Expr<_BinClos<struct std::__divides, std::_Constant, std::_Expr, typename Dom::value_type, Dom>, typename __fun<struct std::__divides, typename Dom::value_type>::result_type>",
            "(const typename Dom::value_type &t, const _Expr<Dom, typename Dom::value_type> &v)",
        ],
        "unique_copy": ["OIter", "(IIter, IIter, OIter, BinaryPredicate)"],
        "merge": ["OIter", "(IIter1, IIter1, IIter2, IIter2, OIter)"],
        "mkostemp64": ["int", "(char *template, int flags)"],
        "tmpfile": ["FILE *", "()"],
        "relative": ["path", "(const path &p, const path &base, error_code &ec)"],
        "unique": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, ForwardIterator>",
            "(ExecutionPolicy &&exec, ForwardIterator first, ForwardIterator last)",
        ],
        "sin": [
            "typename __gnu_cxx::__enable_if<__is_integer<Tp>::__value, double>::__type",
            "(Tp x)",
        ],
        "fmodf64x": ["_Float64x", "(_Float64x x, _Float64x y)"],
        "strtol": [
            "long",
            "(const char *__restrict nptr, char **__restrict endptr, int base)",
        ],
        "operator!=": [
            "bool",
            "(const CharT *lhs, const basic_string<CharT, Traits, Alloc> &rhs)",
        ],
        "operator<<": [
            "std::basic_ostream<CharT, Traits> &",
            "(std::basic_ostream<CharT, Traits> &os, const std::extreme_value_distribution<RealType> &x)",
        ],
        "time_point_cast": [
            "typename enable_if<__is_duration<ToDur>::value, time_point<Clock, ToDur>>::type",
            "<typename ToDur>(const time_point<Clock, Dur> &t)",
        ],
        "operator>": [
            "bool",
            "(const reverse_iterator<Iterator> &x, const reverse_iterator<Iterator> &y)",
        ],
        "operator>": [
            "bool",
            "(const __sub_match_string<Bi_iter, Ch_traits, Ch_alloc> &lhs, const sub_match<Bi_iter> &rhs)",
        ],
        "strerror_l": ["char *", "(int errnum, locale_t l)"],
        "operator>=": [
            "bool",
            "(const _Self &x, const _Deque_iterator<Tp, RefR, PtrR> &y)",
        ],
        "operator|=": ["chars_format &", "(chars_format &lhs, chars_format rhs)"],
        "operator>=": ["bool", "(thread::id x, thread::id y)"],
        "putchar": ["int", "(int c)"],
        "isupper_l": ["int", "(int, locale_t)"],
        "swap": [
            "void",
            "(basic_regex<Ch_type, Rx_traits> &lhs, basic_regex<Ch_type, Rx_traits> &rhs)",
        ],
        "lrint": [
            "typename __gnu_cxx::__enable_if<__is_integer<Tp>::__value, long>::__type",
            "(Tp x)",
        ],
        "pthread_rwlockattr_getpshared": [
            "int",
            "(const pthread_rwlockattr_t *__restrict attr, int *__restrict pshared)",
        ],
        "operator|=": ["perms &", "(perms &x, perms y)"],
        "any_cast": ["ValueType", "<typename ValueType>(const any &any)"],
        "getpayloadf64x": ["_Float64x", "(const _Float64x *x)"],
        "getwc_unlocked": ["wint_t", "(__FILE *stream)"],
        "operator&": ["perms", "(perms x, perms y)"],
        "replace_copy_if": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, ForwardIterator2>",
            "(ExecutionPolicy &&exec, ForwardIterator1 first, ForwardIterator1 last, ForwardIterator2 result, UnaryPredicate pred, const Tp &new_value)",
        ],
        "asinh": [
            "typename __gnu_cxx::__enable_if<__is_integer<Tp>::__value, double>::__type",
            "(Tp x)",
        ],
        "isspace": ["int", "(int)"],
        "truncl": ["long double", "(long double x)"],
        "atomic_flag_clear": ["void", "(atomic_flag *a)"],
        "atan2f64x": ["_Float64x", "(_Float64x y, _Float64x x)"],
        "operator new": ["void *", "(std::size_t)"],
        "operator+": ["iterator", "(difference_type n, const iterator &x)"],
        "fmod": ["double", "(double x, double y)"],
        "nextdownf64": ["_Float64", "(_Float64 x)"],
        "wcsrchr": ["wchar_t *", "(wchar_t *p, wchar_t c)"],
        "lgammaf64x_r": ["_Float64x", "(_Float64x, int *signgamp)"],
        "regex_match": [
            "bool",
            "(const basic_string<Ch_type, Ch_traits, Str_allocator> &s, const basic_regex<Ch_type, Rx_traits> &re, regex_constants::match_flag_type flags = regex_constants::match_default)",
        ],
        "sigaction": [
            "int",
            "(int sig, const struct sigaction *__restrict act, struct sigaction *__restrict oact)",
        ],
        "roundevenf": ["float", "(float x)"],
        "operator<<": [
            "basic_ostream<CharT, Traits> &",
            "(basic_ostream<CharT, Traits> &out, thread::id id)",
        ],
        "reverse_copy": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, ForwardIterator>",
            "(ExecutionPolicy &&exec, BidirectionalIterator first, BidirectionalIterator last, ForwardIterator d_first)",
        ],
        "make_error_condition": ["error_condition", "(errc)"],
        "to_chars": [
            "to_chars_result",
            "(char *first, char *last, unsigned char value, int base)",
        ],
        "operator>=": [
            "bool",
            "(const unique_ptr<Tp, Dp> &x, const unique_ptr<Up, Ep> &y)",
        ],
        "operator!=": [
            "_Expr<_BinClos<__not_equal_to, std::_Constant, std::_ValArray, Tp, Tp>, typename __fun<__not_equal_to, Tp>::result_type>",
            "(const typename valarray<Tp>::value_type &t, const valarray<Tp> &v)",
        ],
        "create_hard_link": [
            "void",
            "(const path &to, const path &new_hard_link, error_code &ec)",
        ],
        "ceilf64x": ["_Float64x", "(_Float64x x)"],
        "fminf": ["float", "(float x, float y)"],
        "isless": [
            "typename __gnu_cxx::__enable_if<(__is_arithmetic<Tp>::__value && __is_arithmetic<Up>::__value), bool>::__type",
            "(Tp x, Up y)",
        ],
        "strcmp": ["int", "(const char *s1, const char *s2)"],
        "log": [
            "typename __gnu_cxx::__enable_if<__is_integer<Tp>::__value, double>::__type",
            "(Tp x)",
        ],
        "mktime": ["time_t", "(struct tm *tp)"],
        "asinhf": ["float", "(float x)"],
        "mbrlen": [
            "size_t",
            "(const char *__restrict s, size_t n, mbstate_t *__restrict ps)",
        ],
        "exists": ["bool", "(file_status)"],
        "getpayloadl": ["long double", "(const long double *x)"],
        "remove": ["bool", "(const path &p)"],
        "rename": ["int", "(const char *old, const char *new)"],
        "operator<=": ["bool", "(const shared_ptr<Tp> &a, nullptr_t)"],
        "regex_search": [
            "bool",
            "(const Ch_type *s, const basic_regex<Ch_type, Rx_traits> &e, regex_constants::match_flag_type f = regex_constants::match_default)",
        ],
        "operator||": [
            "_Expr<_BinClos<__logical_or, std::_Constant, std::_ValArray, Tp, Tp>, typename __fun<__logical_or, Tp>::result_type>",
            "(const typename valarray<Tp>::value_type &t, const valarray<Tp> &v)",
        ],
        "partial_sort": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, void>",
            "(ExecutionPolicy &&exec, RandomAccessIterator first, RandomAccessIterator middle, RandomAccessIterator last, Compare comp)",
        ],
        "last_write_time": ["void", "(const path &p, file_time_type new_time)"],
        "operator>>": [
            "std::basic_istream<CharT, Traits> &",
            "(std::basic_istream<CharT, Traits> &is, std::geometric_distribution<IntType> &x)",
        ],
        "regex_match": [
            "bool",
            "(const Ch_type *s, match_results<const Ch_type *, Alloc> &m, const basic_regex<Ch_type, Rx_traits> &re, regex_constants::match_flag_type f = regex_constants::match_default)",
        ],
        "operator~": ["byte", "(byte b)"],
        "operator+": [
            "basic_string<CharT, Traits, Alloc>",
            "(basic_string<CharT, Traits, Alloc> &&lhs, const CharT *rhs)",
        ],
        "feclearexcept": ["int", "(int excepts)"],
        "lgammaf32_r": ["_Float32", "(_Float32, int *signgamp)"],
        "signbit": ["bool", "(float x)"],
        "isinf": ["bool", "(float x)"],
        "asinhl": ["long double", "(long double x)"],
        "operator>": [
            "_Expr<_BinClos<struct std::__greater, std::_Expr, std::_ValArray, Dom, typename Dom::value_type>, typename __fun<struct std::__greater, typename Dom::value_type>::result_type>",
            "(const _Expr<Dom, typename Dom::value_type> &e, const valarray<typename Dom::value_type> &v)",
        ],
        "swap": [
            "void",
            "(_Node_handle<Key, Value, NodeAlloc> &x, _Node_handle<Key, Value, NodeAlloc> &y)",
        ],
        "memmove": ["void *", "(void *dest, const void *src, size_t n)"],
        "wcscasecmp": ["int", "(const wchar_t *s1, const wchar_t *s2)"],
        "coshf64x": ["_Float64x", "(_Float64x x)"],
        "copy": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, ForwardIterator2>",
            "(ExecutionPolicy &&exec, ForwardIterator1 first, ForwardIterator1 last, ForwardIterator2 result)",
        ],
        "get": [
            "typename tuple_element<Int, std::pair<Tp1, Tp2>>::type &&",
            "<std::size_t Int>(std::pair<Tp1, Tp2> &&in)",
        ],
        "strtoumax": [
            "uintmax_t",
            "(const char *__restrict nptr, char **__restrict endptr, int base)",
        ],
        "sysv_signal": ["__sighandler_t", "(int sig, __sighandler_t handler)"],
        "raise": ["int", "(int sig)"],
        "cyl_bessel_kf": ["float", "(float nu, float x)"],
        "scientific": ["ios_base &", "(ios_base &base)"],
        "operator>>": [
            "std::basic_istream<CharT, Traits> &",
            "(std::basic_istream<CharT, Traits> &is, std::exponential_distribution<RealType> &x)",
        ],
        "nextdownf32x": ["_Float32x", "(_Float32x x)"],
        "sigwait": ["int", "(const sigset_t *__restrict set, int *__restrict sig)"],
        "ref": ["reference_wrapper<Tp>", "(Tp &t)"],
        "exp2f": ["float", "(float x)"],
        "operator~": ["copy_options", "(copy_options x)"],
        "operator<": [
            "bool",
            "(const _Rb_tree<Key, Val, KeyOfValue, Compare, Alloc> &x, const _Rb_tree<Key, Val, KeyOfValue, Compare, Alloc> &y)",
        ],
        "operator==": [
            "bool",
            "(const sub_match<Bi_iter> &lhs, const typename iterator_traits<Bi_iter>::value_type *rhs)",
        ],
        "frexp": ["double", "(double x, int *exponent)"],
        "operator*": [
            "_Expr<_BinClos<struct std::__multiplies, std::_Expr, std::_Expr, Dom1, Dom2>, typename __fun<struct std::__multiplies, typename Dom1::value_type>::result_type>",
            "(const _Expr<Dom1, typename Dom1::value_type> &v, const _Expr<Dom2, typename Dom2::value_type> &w)",
        ],
        "fabsl": ["long double", "(long double x)"],
        "operator>=": [
            "_Expr<_BinClos<struct std::__greater_equal, std::_ValArray, std::_Expr, typename Dom::value_type, Dom>, typename __fun<struct std::__greater_equal, typename Dom::value_type>::result_type>",
            "(const valarray<typename Dom::value_type> &v, const _Expr<Dom, typename Dom::value_type> &e)",
        ],
        "modff32": ["_Float32", "(_Float32 x, _Float32 *iptr)"],
        "get": ["const Tp &", "(const pair<Up, Tp> &p)"],
        "floorf32x": ["_Float32x", "(_Float32x x)"],
        "transform_reduce": [
            "Tp",
            "(InputIterator1 first1, InputIterator1 last1, InputIterator2 first2, Tp init)",
        ],
        "uninitialized_fill": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, void>",
            "(ExecutionPolicy &&exec, ForwardIterator first, ForwardIterator last, const Tp &value)",
        ],
        "log": [
            "_Expr<_UnClos<struct std::_Log, std::_ValArray, Tp>, Tp>",
            "(const valarray<Tp> &v)",
        ],
        "weakly_canonical": ["path", "(const path &p)"],
        "atanf32": ["_Float32", "(_Float32 x)"],
        "conj": ["complex<Tp>", "(const complex<Tp> &)"],
        "feof": ["int", "(FILE *stream)"],
        "last_write_time": ["file_time_type", "(const path &, error_code &)"],
        "operator>>": [
            "basic_istream<CharT, Traits> &",
            "(basic_istream<CharT, Traits> &is, _Get_time<CharT> f)",
        ],
        "nextupf": ["float", "(float x)"],
        "wcstombs": [
            "size_t",
            "(char *__restrict s, const wchar_t *__restrict pwcs, size_t n)",
        ],
        "jnf64": ["_Float64", "(int, _Float64)"],
        "operator^": ["_Ios_Iostate", "(_Ios_Iostate a, _Ios_Iostate b)"],
        "fmaxf": ["float", "(float x, float y)"],
        "assoc_legendre": [
            "typename __gnu_cxx::__promote<Tp>::__type",
            "(unsigned int l, unsigned int m, Tp x)",
        ],
        "logf32": ["_Float32", "(_Float32 x)"],
        "lrand48_r": [
            "int",
            "(struct drand48_data *__restrict buffer, long *__restrict result)",
        ],
        "open_memstream": ["FILE *", "(char **bufloc, size_t *sizeloc)"],
        "strtoul": [
            "unsigned long",
            "(const char *__restrict nptr, char **__restrict endptr, int base)",
        ],
        "fmin": ["double", "(double x, double y)"],
        "fsub": ["float", "(double x, double y)"],
        "operator+": [
            "_Expr<_BinClos<__plus, std::_ValArray, std::_Constant, Tp, Tp>, typename __fun<__plus, Tp>::result_type>",
            "(const valarray<Tp> &v, const typename valarray<Tp>::value_type &t)",
        ],
        "current_path": ["path", "()"],
        "wcstoul": [
            "unsigned long",
            "(const wchar_t *__restrict nptr, wchar_t **__restrict endptr, int base)",
        ],
        "get": ["Tp &", "(pair<Tp, Up> &p)"],
        "operator&": ["launch", "(launch x, launch y)"],
        "operator>=": [
            "_Expr<_BinClos<struct std::__greater_equal, std::_Constant, std::_Expr, typename Dom::value_type, Dom>, typename __fun<struct std::__greater_equal, typename Dom::value_type>::result_type>",
            "(const typename Dom::value_type &t, const _Expr<Dom, typename Dom::value_type> &v)",
        ],
        "operator!=": [
            "__optional_ne_t<Tp, Up>",
            "(const optional<Tp> &lhs, const optional<Up> &rhs)",
        ],
        "atomic_compare_exchange_strong_explicit": [
            "bool",
            "(shared_ptr<Tp> *p, shared_ptr<Tp> *v, shared_ptr<Tp> w, memory_order, memory_order)",
        ],
        "operator+": ["complex<Tp>", "(const complex<Tp> &x)"],
        "operator+": [
            "basic_string<CharT, Traits, Alloc>",
            "(basic_string<CharT, Traits, Alloc> &&lhs, CharT rhs)",
        ],
        "transform_inclusive_scan": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, ForwardIterator2>",
            "(ExecutionPolicy &&exec, ForwardIterator1 first, ForwardIterator1 last, ForwardIterator2 result, BinaryOperation binary_op, UnaryOperation unary_op, Tp init)",
        ],
        "minmax_element": ["pair<FIter, FIter>", "(FIter, FIter)"],
        "ecvt_r": [
            "int",
            "(double value, int ndigit, int *__restrict decpt, int *__restrict sign, char *__restrict buf, size_t len)",
        ],
        "partial_sum": [
            "OutputIterator",
            "(InputIterator first, InputIterator last, OutputIterator result)",
        ],
        "operator!=": [
            "bool",
            "(const sub_match<Bi_iter> &lhs, const typename iterator_traits<Bi_iter>::value_type *rhs)",
        ],
        "search": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, ForwardIterator1>",
            "(ExecutionPolicy &&exec, ForwardIterator1 first, ForwardIterator1 last, ForwardIterator2 s_first, ForwardIterator2 s_last)",
        ],
        "operator<=": [
            "bool",
            "(const _Rb_tree<Key, Val, KeyOfValue, Compare, Alloc> &x, const _Rb_tree<Key, Val, KeyOfValue, Compare, Alloc> &y)",
        ],
        "cbrtf32x": ["_Float32x", "(_Float32x x)"],
        "is_character_file": ["bool", "(const path &p, error_code &ec)"],
        "mbrtoc32": [
            "size_t",
            "(char32_t *__restrict pc32, const char *__restrict s, size_t n, mbstate_t *__restrict p)",
        ],
        "pow": [
            "std::complex<typename __gnu_cxx::__promote_2<Tp, Up>::__type>",
            "(const std::complex<Tp> &x, const std::complex<Up> &y)",
        ],
        "erfc": ["float", "(float x)"],
        "fmaxf64x": ["_Float64x", "(_Float64x x, _Float64x y)"],
        "lrintf64x": ["long", "(_Float64x x)"],
        "minmax_element": ["pair<FIter, FIter>", "(FIter, FIter, Compare)"],
        "nanf": ["float", "(const char *tagb)"],
        "lcong48": ["void", "(unsigned short *param)"],
        "operator new[]": [
            "void *",
            "(std::size_t, std::align_val_t, const std::nothrow_t &)",
        ],
        "truncf": ["float", "(float x)"],
        "scalbn": ["float", "(float x, int ex)"],
        "arg": ["typename __gnu_cxx::__promote<Tp>::__type", "(Tp x)"],
        "operator<": [
            "_Expr<_BinClos<__less, std::_Constant, std::_ValArray, Tp, Tp>, typename __fun<__less, Tp>::result_type>",
            "(const typename valarray<Tp>::value_type &t, const valarray<Tp> &v)",
        ],
        "nextafter": ["long double", "(long double x, long double y)"],
        "swap_ranges": [
            "ForwardIterator2",
            "(ForwardIterator1 first1, ForwardIterator1 last1, ForwardIterator2 first2)",
        ],
        "operator==": [
            "bool",
            "(const vector<Tp, Alloc> &x, const vector<Tp, Alloc> &y)",
        ],
        "operator<<": [
            "_Expr<_BinClos<__shift_left, std::_Constant, std::_ValArray, Tp, Tp>, typename __fun<__shift_left, Tp>::result_type>",
            "(const typename valarray<Tp>::value_type &t, const valarray<Tp> &v)",
        ],
        "log10": ["long double", "(long double x)"],
        "pthread_create": [
            "int",
            "(pthread_t *__restrict newthread, const pthread_attr_t *__restrict attr, void *(*start_routine)(void *), void *__restrict arg)",
        ],
        "operator==": [
            "_Expr<_BinClos<struct std::__equal_to, std::_Expr, std::_Expr, Dom1, Dom2>, typename __fun<struct std::__equal_to, typename Dom1::value_type>::result_type>",
            "(const _Expr<Dom1, typename Dom1::value_type> &v, const _Expr<Dom2, typename Dom2::value_type> &w)",
        ],
        "operator<<": [
            "std::basic_ostream<Ch, Tr> &",
            "(std::basic_ostream<Ch, Tr> &os, const __shared_ptr<Tp, Lp> &p)",
        ],
        "strcasecmp": ["int", "(const char *s1, const char *s2)"],
        "fdimf32": ["_Float32", "(_Float32 x, _Float32 y)"],
        "dynamic_pointer_cast": [
            "shared_ptr<Tp>",
            "<typename Tp>(const shared_ptr<Up> &r)",
        ],
        "inserter": [
            "insert_iterator<Container>",
            "(Container &x, typename Container::iterator i)",
        ],
        "operator<<": [
            "std::basic_ostream<CharT, Traits> &",
            "(std::basic_ostream<CharT, Traits> &os, const chi_squared_distribution<RealType> &x)",
        ],
        "size": ["decltype(cont.size())", "(const Container &cont)"],
        "getopt_long_only": [
            "int",
            "(int argc, char *const *argv, const char *shortopts, const struct option *longopts, int *longind)",
        ],
        "operator==": [
            "_Expr<_BinClos<struct std::__equal_to, std::_Expr, std::_Constant, Dom, typename Dom::value_type>, typename __fun<struct std::__equal_to, typename Dom::value_type>::result_type>",
            "(const _Expr<Dom, typename Dom::value_type> &v, const typename Dom::value_type &t)",
        ],
        "sph_legendref": ["float", "(unsigned int l, unsigned int m, float theta)"],
        "fetestexceptflag": ["int", "(const fexcept_t *flagp, int excepts)"],
        "forward": [
            "Tp &&",
            "<typename Tp>(typename std::remove_reference<Tp>::type &t)",
        ],
        "setpayloadsigf64": ["int", "(_Float64 *x, _Float64 payload)"],
        "count": [
            "typename iterator_traits<IIter>::difference_type",
            "(IIter, IIter, const Tp &)",
        ],
        "fcvt": [
            "char *",
            "(double value, int ndigit, int *__restrict decpt, int *__restrict sign)",
        ],
        "operator>=": [
            "bool",
            "(const multiset<Key, Compare, Alloc> &x, const multiset<Key, Compare, Alloc> &y)",
        ],
        "strtof32x_l": [
            "_Float32x",
            "(const char *__restrict nptr, char **__restrict endptr, locale_t loc)",
        ],
        "operator>=": [
            "bool",
            "(const sub_match<Bi_iter> &lhs, const __sub_match_string<Bi_iter, Ch_traits, Ch_alloc> &rhs)",
        ],
        "remainderf32": ["_Float32", "(_Float32 x, _Float32 y)"],
        "inplace_merge": ["void", "(BIter, BIter, BIter, Compare)"],
        "wcstoull": [
            "unsigned long long",
            "(const wchar_t *__restrict nptr, wchar_t **__restrict endptr, int base)",
        ],
        "setbuf": ["void", "(FILE *__restrict stream, char *__restrict buf)"],
        "get": ["Tp &", "(pair<Up, Tp> &p)"],
        "wcswcs": ["wchar_t *", "(const wchar_t *haystack, const wchar_t *needle)"],
        "minmax": ["pair<const Tp &, const Tp &>", "(const Tp &, const Tp &, Compare)"],
        "j1f": ["float", "(float)"],
        "lroundf64": ["long", "(_Float64 x)"],
        "log2": ["long double", "(long double x)"],
        "atanhf64": ["_Float64", "(_Float64 x)"],
        "pthread_rwlockattr_getkind_np": [
            "int",
            "(const pthread_rwlockattr_t *__restrict attr, int *__restrict pref)",
        ],
        "dngettext": [
            "char *",
            "(const char *domainname, const char *msgid1, const char *msgid2, unsigned long n)",
        ],
        "operator<": [
            "__optional_lt_t<Up, Tp>",
            "(const Up &lhs, const optional<Tp> &rhs)",
        ],
        "fesetexceptflag": ["int", "(const fexcept_t *flagp, int excepts)"],
        "operator==": [
            "bool",
            "(const basic_string<CharT, Traits, Alloc> &lhs, const CharT *rhs)",
        ],
        "wctomb": ["int", "(char *s, wchar_t wchar)"],
        "isascii": ["int", "(int c)"],
        "find_if_not": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, ForwardIterator>",
            "(ExecutionPolicy &&exec, ForwardIterator first, ForwardIterator last, Predicate pred)",
        ],
        "inclusive_scan": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, ForwardIterator2>",
            "(ExecutionPolicy &&exec, ForwardIterator1 first, ForwardIterator1 last, ForwardIterator2 result)",
        ],
        "operator!=": [
            "bool",
            "(const vector<Tp, Alloc> &x, const vector<Tp, Alloc> &y)",
        ],
        "operator!=": [
            "_Expr<_BinClos<struct std::__not_equal_to, std::_Constant, std::_Expr, typename Dom::value_type, Dom>, typename __fun<struct std::__not_equal_to, typename Dom::value_type>::result_type>",
            "(const typename Dom::value_type &t, const _Expr<Dom, typename Dom::value_type> &v)",
        ],
        "ellint_1": [
            "typename __gnu_cxx::__promote_2<Tp, Tpp>::__type",
            "(Tp k, Tpp phi)",
        ],
        "operator<<": [
            "std::basic_ostream<CharT, Traits> &",
            "(std::basic_ostream<CharT, Traits> &os, const std::independent_bits_engine<RandomNumberEngine, w, UIntType> &x)",
        ],
        "y0f64x": ["_Float64x", "(_Float64x)"],
        "isgreaterequal": ["bool", "(double x, double y)"],
        "unique": ["FIter", "(FIter, FIter)"],
        "strchr": ["const char *", "(const char *s, int c)"],
        "operator==": ["bool", "(nullptr_t, const __shared_ptr<Tp, Lp> &a)"],
        "floorf64x": ["_Float64x", "(_Float64x x)"],
        "move_if_noexcept": [
            "typename conditional<__move_if_noexcept_cond<Tp>::value, const Tp &, Tp &&>::type",
            "(Tp &x)",
        ],
        "ilogb": ["int", "(long double x)"],
        "operator>=": [
            "bool",
            "(basic_string_view<CharT, Traits> x, __type_identity_t<basic_string_view<CharT, Traits>> y)",
        ],
        "operator==": [
            "_Expr<_BinClos<struct std::__equal_to, std::_ValArray, std::_Expr, typename Dom::value_type, Dom>, typename __fun<struct std::__equal_to, typename Dom::value_type>::result_type>",
            "(const valarray<typename Dom::value_type> &v, const _Expr<Dom, typename Dom::value_type> &e)",
        ],
        "ynf32x": ["_Float32x", "(int, _Float32x)"],
        "powf32x": ["_Float32x", "(_Float32x x, _Float32x y)"],
        "operator&=": ["const _Ios_Iostate &", "(_Ios_Iostate &a, _Ios_Iostate b)"],
        "operator*": ["complex<Tp>", "(const Tp &x, const complex<Tp> &y)"],
        "operator<<": [
            "std::basic_ostream<CharT, Traits> &",
            "(std::basic_ostream<CharT, Traits> &os, const fisher_f_distribution<RealType> &x)",
        ],
        "resize_file": ["void", "(const path &p, uintmax_t size, error_code &ec)"],
        "swap": [
            "void",
            "(_Rb_tree<Key, Val, KeyOfValue, Compare, Alloc> &x, _Rb_tree<Key, Val, KeyOfValue, Compare, Alloc> &y)",
        ],
        "operator&&": [
            "_Expr<_BinClos<__logical_and, std::_ValArray, std::_Constant, Tp, Tp>, typename __fun<__logical_and, Tp>::result_type>",
            "(const valarray<Tp> &v, const typename valarray<Tp>::value_type &t)",
        ],
        "toupper": ["int", "(int c)"],
        "set_difference": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, ForwardIterator>",
            "(ExecutionPolicy &&exec, ForwardIterator1 first1, ForwardIterator1 last1, ForwardIterator2 first2, ForwardIterator2 last2, ForwardIterator result)",
        ],
        "vfwprintf": [
            "int",
            "(__FILE *__restrict s, const wchar_t *__restrict format, __va_list_tag *arg)",
        ],
        "log2f64": ["_Float64", "(_Float64 x)"],
        "max": ["const Tp &", "(const Tp &a, const Tp &b, Compare comp)"],
        "operator&=": ["const _Ios_Fmtflags &", "(_Ios_Fmtflags &a, _Ios_Fmtflags b)"],
        "sincos": ["void", "(double x, double *sinx, double *cosx)"],
        "ufromfpf32x": ["__uintmax_t", "(_Float32x x, int round, unsigned int width)"],
        "operator>>": [
            "std::basic_istream<CharT, Traits> &",
            "(std::basic_istream<CharT, Traits> &is, linear_congruential_engine<UIntType, a, c, m> &lcr)",
        ],
        "atan2": [
            "_Expr<_BinClos<struct std::_Atan2, std::_Constant, std::_Expr, typename Dom::value_type, Dom>, typename Dom::value_type>",
            "(const typename Dom::value_type &t, const _Expr<Dom, typename Dom::value_type> &e)",
        ],
        "operator>": ["bool", "(const queue<Tp, Seq> &x, const queue<Tp, Seq> &y)"],
        "llogbf64": ["long", "(_Float64 x)"],
        "nextafter": ["double", "(double x, double y)"],
        "totalorder": ["int", "(const double *x, const double *y)"],
        "remainderl": ["long double", "(long double x, long double y)"],
        "unsetenv": ["int", "(const char *name)"],
        "strcpy": ["char *", "(char *__restrict dest, const char *__restrict src)"],
        "expm1": ["double", "(double x)"],
        "find_end": ["FIter1", "(FIter1, FIter1, FIter2, FIter2, BinaryPredicate)"],
        "strrchr": ["const char *", "(const char *s, int c)"],
        "operator<<": [
            "basic_ostream<CharT, Traits> &",
            "(basic_ostream<CharT, Traits> &os, _Setfill<CharT> f)",
        ],
        "acos": ["float", "(float x)"],
        "operator^": [
            "_Expr<_BinClos<__bitwise_xor, std::_Constant, std::_ValArray, Tp, Tp>, typename __fun<__bitwise_xor, Tp>::result_type>",
            "(const typename valarray<Tp>::value_type &t, const valarray<Tp> &v)",
        ],
        "operator==": [
            "bool",
            "(const directory_iterator &lhs, const directory_iterator &rhs)",
        ],
        "operator>>": [
            "std::basic_istream<CharT, Traits> &",
            "(std::basic_istream<CharT, Traits> &is, piecewise_constant_distribution<RealType> &x)",
        ],
        "operator^": [
            "_Expr<_BinClos<struct std::__bitwise_xor, std::_Expr, std::_Constant, Dom, typename Dom::value_type>, typename __fun<struct std::__bitwise_xor, typename Dom::value_type>::result_type>",
            "(const _Expr<Dom, typename Dom::value_type> &v, const typename Dom::value_type &t)",
        ],
        "operator<<": [
            "std::basic_ostream<CharT, Traits> &",
            "(std::basic_ostream<CharT, Traits> &os, const gamma_distribution<RealType> &x)",
        ],
        "erfcf64x": ["_Float64x", "(_Float64x)"],
        "operator" "ms": ["chrono::milliseconds", "<char Digits>()"],
        "operator!=": [
            "bool",
            "(const basic_string<CharT, Traits, Alloc> &lhs, const CharT *rhs)",
        ],
        "operator*": ["complex<Tp>", "(const complex<Tp> &x, const complex<Tp> &y)"],
        "atomic_compare_exchange_strong_explicit": [
            "bool",
            "(__shared_ptr<Tp, Lp> *p, __shared_ptr<Tp, Lp> *v, __shared_ptr<Tp, Lp> w, memory_order, memory_order)",
        ],
        "floor": ["long double", "(long double x)"],
        "adjacent_find": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, ForwardIterator>",
            "(ExecutionPolicy &&exec, ForwardIterator first, ForwardIterator last)",
        ],
        "operator!=": ["bool", "(nullptr_t, const __shared_ptr<Tp, Lp> &a)"],
        "cuserid": ["char *", "(char *s)"],
        "alphasort": ["int", "(const struct dirent **e1, const struct dirent **e2)"],
        "strspn": ["size_t", "(const char *s, const char *accept)"],
        "operator~": ["perm_options", "(perm_options x)"],
        "operator-": ["complex<Tp>", "(const Tp &x, const complex<Tp> &y)"],
        "operator|": ["_Ios_Iostate", "(_Ios_Iostate a, _Ios_Iostate b)"],
        "operator<<": [
            "basic_ostream<char, Traits> &",
            "(basic_ostream<char, Traits> &out, unsigned char c)",
        ],
        "strcoll": ["int", "(const char *s1, const char *s2)"],
        "operator==": [
            "bool",
            "(const move_iterator<Iterator> &x, const move_iterator<Iterator> &y)",
        ],
        "adjacent_difference": [
            "OutputIterator",
            "(InputIterator first, InputIterator last, OutputIterator result, BinaryOperation binary_op)",
        ],
        "nextafter": [
            "typename __gnu_cxx::__promote_2<Tp, Up>::__type",
            "(Tp x, Up y)",
        ],
        "remquof64": ["_Float64", "(_Float64 x, _Float64 y, int *quo)"],
        "operator^": ["bitset<Nb>", "(const bitset<Nb> &x, const bitset<Nb> &y)"],
        "isgreater": ["bool", "(long double x, long double y)"],
        "vfscanf": [
            "int",
            "(FILE *__restrict s, const char *__restrict format, __va_list_tag *arg)",
        ],
        "to_wstring": ["wstring", "(long long val)"],
        "operator!=": [
            "_Expr<_BinClos<__not_equal_to, std::_ValArray, std::_Constant, Tp, Tp>, typename __fun<__not_equal_to, Tp>::result_type>",
            "(const valarray<Tp> &v, const typename valarray<Tp>::value_type &t)",
        ],
        "rint": [
            "typename __gnu_cxx::__enable_if<__is_integer<Tp>::__value, double>::__type",
            "(Tp x)",
        ],
        "fminmagf64x": ["_Float64x", "(_Float64x x, _Float64x y)"],
        "roundevenl": ["long double", "(long double x)"],
        "strtoul_l": [
            "unsigned long",
            "(const char *__restrict nptr, char **__restrict endptr, int base, locale_t loc)",
        ],
        "fgetc": ["int", "(FILE *stream)"],
        "sinf64x": ["_Float64x", "(_Float64x x)"],
        "wcstoll": [
            "long long",
            "(const wchar_t *__restrict nptr, wchar_t **__restrict endptr, int base)",
        ],
        "operator==": ["bool", "(const param_type &p1, const param_type &p2)"],
        "operator>=": [
            "_Expr<_BinClos<struct std::__greater_equal, std::_Expr, std::_Constant, Dom, typename Dom::value_type>, typename __fun<struct std::__greater_equal, typename Dom::value_type>::result_type>",
            "(const _Expr<Dom, typename Dom::value_type> &v, const typename Dom::value_type &t)",
        ],
        "regex_replace": [
            "Out_iter",
            "(Out_iter out, Bi_iter first, Bi_iter last, const basic_regex<Ch_type, Rx_traits> &e, const Ch_type *fmt, regex_constants::match_flag_type flags = regex_constants::match_default)",
        ],
        "operator>>": [
            "std::basic_istream<CharT, Traits> &",
            "(std::basic_istream<CharT, Traits> &, std::uniform_int_distribution<IntType> &)",
        ],
        "clearerr": ["void", "(FILE *stream)"],
        "ldexpl": ["long double", "(long double x, int exponent)"],
        "operator!=": [
            "bool",
            "(const std::discrete_distribution<IntType> &d1, const std::discrete_distribution<IntType> &d2)",
        ],
        "abs": ["long double", "(long double x)"],
        "logbf32": ["_Float32", "(_Float32 x)"],
        "operator>=": [
            "bool",
            "(const map<Key, Tp, Compare, Alloc> &x, const map<Key, Tp, Compare, Alloc> &y)",
        ],
        "operator!=": [
            "bool",
            "(const directory_iterator &lhs, const directory_iterator &rhs)",
        ],
        "operator-": ["complex<Tp>", "(const complex<Tp> &x, const complex<Tp> &y)"],
        "sigaddset": ["int", "(sigset_t *set, int signo)"],
        "operator^=": [
            "syntax_option_type &",
            "(syntax_option_type &a, syntax_option_type b)",
        ],
        "operator&": ["match_flag_type", "(match_flag_type a, match_flag_type b)"],
        "atomic_compare_exchange_weak_explicit": [
            "bool",
            "(atomic<ITp> *a, __atomic_val_t<ITp> *i1, __atomic_val_t<ITp> i2, memory_order m1, memory_order m2)",
        ],
        "mismatch": [
            "pair<InputIterator1, InputIterator2>",
            "(InputIterator1 first1, InputIterator1 last1, InputIterator2 first2, InputIterator2 last2, BinaryPredicate binary_pred)",
        ],
        "to_wstring": ["wstring", "(unsigned int val)"],
        "uselocale": ["locale_t", "(locale_t dataset)"],
        "operator&": ["_Ios_Fmtflags", "(_Ios_Fmtflags a, _Ios_Fmtflags b)"],
        "lgamma": ["float", "(float x)"],
        "fmaxmagl": ["long double", "(long double x, long double y)"],
        "adjacent_difference": [
            "OutputIterator",
            "(InputIterator first, InputIterator last, OutputIterator result)",
        ],
        "mismatch": [
            "pair<InputIterator1, InputIterator2>",
            "(InputIterator1 first1, InputIterator1 last1, InputIterator2 first2, BinaryPredicate binary_pred)",
        ],
        "stof": ["float", "(const wstring &str, size_t *idx = 0)"],
        "null_memory_resource": ["memory_resource *", "()"],
        "operator<=": [
            "_Expr<_BinClos<struct std::__less_equal, std::_Expr, std::_Expr, Dom1, Dom2>, typename __fun<struct std::__less_equal, typename Dom1::value_type>::result_type>",
            "(const _Expr<Dom1, typename Dom1::value_type> &v, const _Expr<Dom2, typename Dom2::value_type> &w)",
        ],
        "mbsnrtowcs": [
            "size_t",
            "(wchar_t *__restrict dst, const char **__restrict src, size_t nmc, size_t len, mbstate_t *__restrict ps)",
        ],
        "pthread_attr_setschedparam": [
            "int",
            "(pthread_attr_t *__restrict attr, const struct sched_param *__restrict param)",
        ],
        "isgreaterequal": [
            "typename __gnu_cxx::__enable_if<(__is_arithmetic<Tp>::__value && __is_arithmetic<Up>::__value), bool>::__type",
            "(Tp x, Up y)",
        ],
        "fwide": ["int", "(__FILE *fp, int mode)"],
        "ilogbf64x": ["int", "(_Float64x x)"],
        "powf64x": ["_Float64x", "(_Float64x x, _Float64x y)"],
        "operator<": ["bool", "(const path &lhs, const path &rhs)"],
        "merge": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, ForwardIterator>",
            "(ExecutionPolicy &&exec, ForwardIterator1 first1, ForwardIterator1 last1, ForwardIterator2 first2, ForwardIterator2 last2, ForwardIterator d_first)",
        ],
        "to_chars": [
            "to_chars_result",
            "(char *first, char *last, unsigned long long value, int base)",
        ],
        "operator!=": [
            "bool",
            "(const move_iterator<Iterator> &x, const move_iterator<Iterator> &y)",
        ],
        "atan": ["double", "(double x)"],
        "wcpncpy": [
            "wchar_t *",
            "(wchar_t *__restrict dest, const wchar_t *__restrict src, size_t n)",
        ],
        "operator>=": [
            "bool",
            "(const basic_string<CharT, Traits, Alloc> &lhs, const basic_string<CharT, Traits, Alloc> &rhs)",
        ],
        "pthread_condattr_destroy": ["int", "(pthread_condattr_t *attr)"],
        "sched_setparam": ["int", "(__pid_t pid, const struct sched_param *param)"],
        "current_path": ["void", "(const path &p)"],
        "atomic_thread_fence": ["void", "(memory_order m)"],
        "mbrtoc16": [
            "size_t",
            "(char16_t *__restrict pc16, const char *__restrict s, size_t n, mbstate_t *__restrict p)",
        ],
        "equal_range": ["pair<FIter, FIter>", "(FIter, FIter, const Tp &)"],
        "operator>=": ["bool", "(const stack<Tp, Seq> &x, const stack<Tp, Seq> &y)"],
        "operator!=": [
            "bool",
            "(const std::mersenne_twister_engine<UIntType, w, n, m, r, a, u, d, s, b, t, c, l, f> &lhs, const std::mersenne_twister_engine<UIntType, w, n, m, r, a, u, d, s, b, t, c, l, f> &rhs)",
        ],
        "operator+": [
            "basic_string<CharT, Traits, Alloc>",
            "(const basic_string<CharT, Traits, Alloc> &lhs, const CharT *rhs)",
        ],
        "getpayloadf32": ["_Float32", "(const _Float32 *x)"],
        "operator!=": ["bool", "(const param_type &p1, const param_type &p2)"],
        "sigqueue": ["int", "(__pid_t pid, int sig, const union sigval val)"],
        "replace_if": ["void", "(FIter, FIter, Predicate, const Tp &)"],
        "operator==": [
            "bool",
            "(const reverse_iterator<Iterator> &x, const reverse_iterator<Iterator> &y)",
        ],
        "operator==": [
            "bool",
            "(const __sub_match_string<Bi_iter, Ch_traits, Ch_alloc> &lhs, const sub_match<Bi_iter> &rhs)",
        ],
        "random_shuffle": ["void", "(RAIter, RAIter, Generator &&)"],
        "equal": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, bool>",
            "(ExecutionPolicy &&exec, ForwardIterator1 first1, ForwardIterator1 last1, ForwardIterator2 first2, ForwardIterator2 last2)",
        ],
        "operator>>": [
            "std::basic_istream<CharT, Traits> &",
            "(std::basic_istream<CharT, Traits> &is, std::extreme_value_distribution<RealType> &x)",
        ],
        "operator&=": [
            "directory_options &",
            "(directory_options &x, directory_options y)",
        ],
        "memchr": ["const void *", "(const void *s, int c, size_t n)"],
        "truncf32": ["_Float32", "(_Float32 x)"],
        "significand": ["double", "(double x)"],
        "nexttoward": [
            "typename __gnu_cxx::__enable_if<__is_integer<Tp>::__value, double>::__type",
            "(Tp x, long double y)",
        ],
        "ldiv": ["ldiv_t", "(long numer, long denom)"],
        "pthread_cond_wait": [
            "int",
            "(pthread_cond_t *__restrict cond, pthread_mutex_t *__restrict mutex)",
        ],
        "exp2f32": ["_Float32", "(_Float32 x)"],
        "cbrt": ["float", "(float x)"],
        "hypot": ["long double", "(long double x, long double y, long double z)"],
        "sincosf64": ["void", "(_Float64 x, _Float64 *sinx, _Float64 *cosx)"],
        "fminf32": ["_Float32", "(_Float32 x, _Float32 y)"],
        "hard_link_count": ["uintmax_t", "(const path &, error_code &)"],
        "operator" "i": ["std::complex<double>", "(long double num)"],
        "operator^": [
            "_Expr<_BinClos<struct std::__bitwise_xor, std::_Expr, std::_Expr, Dom1, Dom2>, typename __fun<struct std::__bitwise_xor, typename Dom1::value_type>::result_type>",
            "(const _Expr<Dom1, typename Dom1::value_type> &v, const _Expr<Dom2, typename Dom2::value_type> &w)",
        ],
        "operator-": [
            "_Expr<_BinClos<struct std::__minus, std::_Expr, std::_Constant, Dom, typename Dom::value_type>, typename __fun<struct std::__minus, typename Dom::value_type>::result_type>",
            "(const _Expr<Dom, typename Dom::value_type> &v, const typename Dom::value_type &t)",
        ],
        "equivalent": ["bool", "(const path &p1, const path &p2, error_code &ec)"],
        "fmaf": ["float", "(float x, float y, float z)"],
        "to_chars": [
            "to_chars_result",
            "(char *first, char *last, __int128 value, int base)",
        ],
        "atanf": ["float", "(float x)"],
        "is_permutation": [
            "bool",
            "(ForwardIterator1 first1, ForwardIterator1 last1, ForwardIterator2 first2)",
        ],
        "logbf64x": ["_Float64x", "(_Float64x x)"],
        "ellint_3l": [
            "long double",
            "(long double k, long double nu, long double phi)",
        ],
        "fwrite": [
            "size_t",
            "(const void *__restrict ptr, size_t size, size_t n, FILE *__restrict s)",
        ],
        "floor": ["double", "(double x)"],
        "pthread_condattr_setpshared": [
            "int",
            "(pthread_condattr_t *attr, int pshared)",
        ],
        "operator<=": ["bool", "(const path &lhs, const path &rhs)"],
        "operator>=": ["bool", "(const Tp &x, const Tp &y)"],
        "operator^": ["copy_options", "(copy_options x, copy_options y)"],
        "sph_neumannf": ["float", "(unsigned int n, float x)"],
        "f32xsubf64": ["_Float32x", "(_Float64 x, _Float64 y)"],
        "operator<=": [
            "_Expr<_BinClos<__less_equal, std::_ValArray, std::_Constant, Tp, Tp>, typename __fun<__less_equal, Tp>::result_type>",
            "(const valarray<Tp> &v, const typename valarray<Tp>::value_type &t)",
        ],
        "copy_n": ["OIter", "(IIter, Size, OIter)"],
        "real": ["typename __gnu_cxx::__promote<Tp>::__type", "(Tp x)"],
        "remainderf64x": ["_Float64x", "(_Float64x x, _Float64x y)"],
        "unitbuf": ["ios_base &", "(ios_base &base)"],
        "exists": ["bool", "(const path &p, error_code &ec)"],
        "gammal": ["long double", "(long double)"],
        "operator>>": [
            "basic_istream<CharT, Traits> &",
            "(basic_istream<CharT, Traits> &is, _Resetiosflags f)",
        ],
        "operator!=": [
            "bool",
            "(const reverse_iterator<Iterator> &x, const reverse_iterator<Iterator> &y)",
        ],
        "operator new[]": ["void *", "(std::size_t)"],
        "acos": ["std::complex<Tp>", "(const std::complex<Tp> &)"],
        "operator<": [
            "__optional_lt_t<Tp, Up>",
            "(const optional<Tp> &lhs, const Up &rhs)",
        ],
        "operator!=": [
            "bool",
            "(const __sub_match_string<Bi_iter, Ch_traits, Ch_alloc> &lhs, const sub_match<Bi_iter> &rhs)",
        ],
        "operator&": [
            "_Expr<_BinClos<__bitwise_and, std::_Constant, std::_ValArray, Tp, Tp>, typename __fun<__bitwise_and, Tp>::result_type>",
            "(const typename valarray<Tp>::value_type &t, const valarray<Tp> &v)",
        ],
        "llrintl": ["long long", "(long double x)"],
        "betaf": ["float", "(float a, float b)"],
        "nearbyintf": ["float", "(float x)"],
        "set_difference": ["OIter", "(IIter1, IIter1, IIter2, IIter2, OIter, Compare)"],
        "obstack_vprintf": [
            "int",
            "(struct obstack *__restrict obstack, const char *__restrict format, __va_list_tag *args)",
        ],
        "swap": [
            "void",
            "(basic_ostringstream<CharT, Traits, Allocator> &x, basic_ostringstream<CharT, Traits, Allocator> &y)",
        ],
        "pthread_exit": ["void", "(void *retval)"],
        "operator!=": [
            "__optional_ne_t<Up, Tp>",
            "(const Up &lhs, const optional<Tp> &rhs)",
        ],
        "acosl": ["long double", "(long double x)"],
        "fabs": ["float", "(float x)"],
        "operator&": [
            "directory_options",
            "(directory_options x, directory_options y)",
        ],
        "fputws": ["int", "(const wchar_t *__restrict ws, __FILE *__restrict stream)"],
        "get_money": ["_Get_money<MoneyT>", "(MoneyT &mon, bool intl = false)"],
        "search_n": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, ForwardIterator>",
            "(ExecutionPolicy &&exec, ForwardIterator first, ForwardIterator last, Size count, const Tp &value, BinaryPredicate pred)",
        ],
        "swap": [
            "typename enable_if<std::__array_traits<Tp, Nm>::_Is_swappable::value>::type",
            "(array<Tp, Nm> &one, array<Tp, Nm> &two)",
        ],
        "pow": ["complex<Tp>", "(const complex<Tp> &, int)"],
        "islower_l": ["int", "(int, locale_t)"],
        "swap": [
            "void",
            "(unordered_map<Key, Tp, Hash, Pred, Alloc> &x, unordered_map<Key, Tp, Hash, Pred, Alloc> &y)",
        ],
        "operator+": [
            "_Expr<_BinClos<struct std::__plus, std::_Expr, std::_Expr, Dom1, Dom2>, typename __fun<struct std::__plus, typename Dom1::value_type>::result_type>",
            "(const _Expr<Dom1, typename Dom1::value_type> &v, const _Expr<Dom2, typename Dom2::value_type> &w)",
        ],
        "min": ["Tp", "(initializer_list<Tp>)"],
        "operator>": [
            "bool",
            "(const _Rb_tree<Key, Val, KeyOfValue, Compare, Alloc> &x, const _Rb_tree<Key, Val, KeyOfValue, Compare, Alloc> &y)",
        ],
        "acosf64": ["_Float64", "(_Float64 x)"],
        "pthread_attr_getguardsize": [
            "int",
            "(const pthread_attr_t *attr, size_t *guardsize)",
        ],
        "operator==": [
            "bool",
            "(const poisson_distribution<IntType> &d1, const poisson_distribution<IntType> &d2)",
        ],
        "is_regular_file": ["bool", "(file_status)"],
        "timespec_get": ["int", "(struct timespec *ts, int base)"],
        "floor": [
            "typename __gnu_cxx::__enable_if<__is_integer<Tp>::__value, double>::__type",
            "(Tp x)",
        ],
        "minmax": ["pair<Tp, Tp>", "(initializer_list<Tp>)"],
        "operator!=": [
            "bool",
            "(const std::fisher_f_distribution<RealType> &d1, const std::fisher_f_distribution<RealType> &d2)",
        ],
        "end": ["const Tp *", "(initializer_list<Tp> ils)"],
        "operator<": ["bool", "(const shared_ptr<Tp> &a, const shared_ptr<Up> &b)"],
        "operator&": ["chars_format", "(chars_format lhs, chars_format rhs)"],
        "coshf64": ["_Float64", "(_Float64 x)"],
        "operator<<": [
            "std::basic_ostream<CharT, Traits> &",
            "(std::basic_ostream<CharT, Traits> &os, const piecewise_constant_distribution<RealType> &x)",
        ],
        "nearbyintl": ["long double", "(long double x)"],
        "pthread_attr_getstack": [
            "int",
            "(const pthread_attr_t *__restrict attr, void **__restrict stackaddr, size_t *__restrict stacksize)",
        ],
        "operator>>": [
            "std::basic_istream<CharT, Traits> &",
            "(std::basic_istream<CharT, Traits> &is, discrete_distribution<IntType> &x)",
        ],
        "j0l": ["long double", "(long double)"],
        "operator>=": [
            "bool",
            "(const time_point<Clock, Dur1> &lhs, const time_point<Clock, Dur2> &rhs)",
        ],
        "atomic_load_explicit": ["ITp", "(const atomic<ITp> *a, memory_order m)"],
        "operator>>": [
            "basic_istream<CharT, Traits> &",
            "(basic_istream<CharT, Traits> &is, _Setiosflags f)",
        ],
        "modfl": ["long double", "(long double x, long double *iptr)"],
        "abs": ["long", "(long i)"],
        "log1pf64": ["_Float64", "(_Float64 x)"],
        "difftime": ["double", "(time_t time1, time_t time0)"],
        "operator>>": [
            "std::basic_istream<CharT, Traits> &",
            "(std::basic_istream<CharT, Traits> &is, poisson_distribution<IntType> &x)",
        ],
        "fromfpf32": ["__intmax_t", "(_Float32 x, int round, unsigned int width)"],
        "make_error_condition": ["error_condition", "(future_errc errc)"],
        "open_wmemstream": ["__FILE *", "(wchar_t **bufloc, size_t *sizeloc)"],
        "isinf": ["bool", "(long double x)"],
        "setbuffer": [
            "void",
            "(FILE *__restrict stream, char *__restrict buf, size_t size)",
        ],
        "signbit": ["bool", "(long double x)"],
        "operator+": [
            "_Expr<_BinClos<struct std::__plus, std::_ValArray, std::_Expr, typename Dom::value_type, Dom>, typename __fun<struct std::__plus, typename Dom::value_type>::result_type>",
            "(const valarray<typename Dom::value_type> &v, const _Expr<Dom, typename Dom::value_type> &e)",
        ],
        "j0f64x": ["_Float64x", "(_Float64x)"],
        "is_sorted_until": ["FIter", "(FIter, FIter)"],
        "nextdown": ["double", "(double x)"],
        "absolute": ["path", "(const path &p, error_code &ec)"],
        "operator%": [
            "typename common_type<duration<Rep1, Period1>, duration<Rep2, Period2>>::type",
            "(const duration<Rep1, Period1> &lhs, const duration<Rep2, Period2> &rhs)",
        ],
        "get": ["const Tp &&", "(const pair<Tp, Up> &&p)"],
        "y0l": ["long double", "(long double)"],
        "readdir": ["struct dirent *", "(DIR *dirp)"],
        "c16rtomb": [
            "size_t",
            "(char *__restrict s, char16_t c16, mbstate_t *__restrict ps)",
        ],
        "includes": ["bool", "(IIter1, IIter1, IIter2, IIter2)"],
        "modf": ["float", "(float x, float *iptr)"],
        "is_sorted_until": ["FIter", "(FIter, FIter, Compare)"],
        "to_string": ["string", "(unsigned long val)"],
        "wcsspn": ["size_t", "(const wchar_t *wcs, const wchar_t *accept)"],
        "is_block_file": ["bool", "(const path &p, error_code &ec)"],
        "wcslen": ["size_t", "(const wchar_t *s)"],
        "pthread_yield": ["int", "()"],
        "operator!=": [
            "bool",
            "(const std::linear_congruential_engine<UIntType, a, c, m> &lhs, const std::linear_congruential_engine<UIntType, a, c, m> &rhs)",
        ],
        "mbsrtowcs": [
            "size_t",
            "(wchar_t *__restrict dst, const char **__restrict src, size_t len, mbstate_t *__restrict ps)",
        ],
        "move": ["typename std::remove_reference<Tp>::type &&", "(Tp &&t)"],
        "operator<=": ["bool", "(const shared_ptr<Tp> &a, const shared_ptr<Up> &b)"],
        "ufromfpxf32x": ["__uintmax_t", "(_Float32x x, int round, unsigned int width)"],
        "find_if": ["IIter", "(IIter, IIter, Predicate)"],
        "fmin": ["float", "(float x, float y)"],
        "is_heap": ["bool", "(RAIter, RAIter)"],
        "ungetc": ["int", "(int c, FILE *stream)"],
        "log1pf64x": ["_Float64x", "(_Float64x x)"],
        "wcstoimax": [
            "intmax_t",
            "(const wchar_t *__restrict nptr, wchar_t **__restrict endptr, int base)",
        ],
        "operator new[]": ["void *", "(std::size_t, void *p)"],
        "basename": ["const char *", "(const char *filename)"],
        "operator"
        "sv": ["basic_string_view<char16_t>", "(const char16_t *str, size_t len)"],
        "showbase": ["ios_base &", "(ios_base &base)"],
        "ceil": [
            "__enable_if_is_duration<ToDur>",
            "<typename ToDur>(const duration<Rep, Period> &d)",
        ],
        "create_directory": ["bool", "(const path &p, error_code &ec)"],
        "operator<=": ["bool", "(const pair<T1, T2> &x, const pair<T1, T2> &y)"],
        "operator!=": [
            "_Expr<_BinClos<struct std::__not_equal_to, std::_Expr, std::_Constant, Dom, typename Dom::value_type>, typename __fun<struct std::__not_equal_to, typename Dom::value_type>::result_type>",
            "(const _Expr<Dom, typename Dom::value_type> &v, const typename Dom::value_type &t)",
        ],
        "isnanf": ["int", "(float value)"],
        "atof": ["double", "(const char *nptr)"],
        "pthread_rwlock_destroy": ["int", "(pthread_rwlock_t *rwlock)"],
        "pthread_rwlock_timedwrlock": [
            "int",
            "(pthread_rwlock_t *__restrict rwlock, const struct timespec *__restrict abstime)",
        ],
        "remove": ["FIter", "(FIter, FIter, const Tp &)"],
        "scalbn": ["double", "(double x, int n)"],
        "imaxdiv": ["imaxdiv_t", "(intmax_t numer, intmax_t denom)"],
        "operator" "us": ["chrono::microseconds", "<char Digits>()"],
        "operator|": ["copy_options", "(copy_options x, copy_options y)"],
        "status": ["file_status", "(const path &)"],
        "fdiml": ["long double", "(long double x, long double y)"],
        "cosh": [
            "_Expr<_UnClos<struct std::_Cosh, std::_Expr, Dom>, typename Dom::value_type>",
            "(const _Expr<Dom, typename Dom::value_type> &e)",
        ],
        "wcstouq": [
            "unsigned long long",
            "(const wchar_t *__restrict nptr, wchar_t **__restrict endptr, int base)",
        ],
        "yn": ["double", "(int, double)"],
        "fgetwc": ["wint_t", "(__FILE *stream)"],
        "logbf": ["float", "(float x)"],
        "operator*": [
            "_Expr<_BinClos<struct std::__multiplies, std::_Expr, std::_Constant, Dom, typename Dom::value_type>, typename __fun<struct std::__multiplies, typename Dom::value_type>::result_type>",
            "(const _Expr<Dom, typename Dom::value_type> &v, const typename Dom::value_type &t)",
        ],
        "operator+": ["complex<Tp>", "(const Tp &x, const complex<Tp> &y)"],
        "operator>>": [
            "_Expr<_BinClos<__shift_right, std::_Constant, std::_ValArray, Tp, Tp>, typename __fun<__shift_right, Tp>::result_type>",
            "(const typename valarray<Tp>::value_type &t, const valarray<Tp> &v)",
        ],
        "wcsncat": [
            "wchar_t *",
            "(wchar_t *__restrict dest, const wchar_t *__restrict src, size_t n)",
        ],
        "operator<<": [
            "std::basic_ostream<CharT, Traits> &",
            "(std::basic_ostream<CharT, Traits> &os, const negative_binomial_distribution<IntType> &x)",
        ],
        "pthread_rwlockattr_setkind_np": [
            "int",
            "(pthread_rwlockattr_t *attr, int pref)",
        ],
        "rbegin": ["decltype(cont.rbegin())", "(Container &cont)"],
        "pow": [
            "_Expr<_BinClos<struct std::_Pow, std::_Expr, std::_ValArray, Dom, typename Dom::value_type>, typename Dom::value_type>",
            "(const _Expr<Dom, typename Dom::value_type> &e, const valarray<typename Dom::value_type> &v)",
        ],
        "operator||": [
            "_Expr<_BinClos<struct std::__logical_or, std::_Expr, std::_Constant, Dom, typename Dom::value_type>, typename __fun<struct std::__logical_or, typename Dom::value_type>::result_type>",
            "(const _Expr<Dom, typename Dom::value_type> &v, const typename Dom::value_type &t)",
        ],
        "operator==": [
            "bool",
            "(const forward_list<Tp, Alloc> &lx, const forward_list<Tp, Alloc> &ly)",
        ],
        "sort": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, void>",
            "(ExecutionPolicy &&exec, RandomAccessIterator first, RandomAccessIterator last)",
        ],
        "swap": ["void", "(bool &x, _Bit_reference y)"],
        "operator&": ["_Ios_Iostate", "(_Ios_Iostate a, _Ios_Iostate b)"],
        "rend": ["decltype(cont.rend())", "(Container &cont)"],
        "atan2f64": ["_Float64", "(_Float64 y, _Float64 x)"],
        "operator==": [
            "bool",
            "(const bernoulli_distribution &d1, const bernoulli_distribution &d2)",
        ],
        "swap": [
            "void",
            "(basic_string<CharT, Traits, Alloc> &lhs, basic_string<CharT, Traits, Alloc> &rhs)",
        ],
        "operator<<": [
            "std::basic_ostream<CharT, Traits> &",
            "(std::basic_ostream<CharT, Traits> &os, const binomial_distribution<IntType> &x)",
        ],
        "fminmag": ["double", "(double x, double y)"],
        "timer_settime": [
            "int",
            "(timer_t timerid, int flags, const struct itimerspec *__restrict value, struct itimerspec *__restrict ovalue)",
        ],
        "is_directory": ["bool", "(const path &p)"],
        "not_fn": ["auto", "(Fn &&fn)"],
        "fmodf32": ["_Float32", "(_Float32 x, _Float32 y)"],
        "operator>": ["bool", "(nullptr_t, const unique_ptr<Tp, Dp> &x)"],
        "tanhl": ["long double", "(long double x)"],
        "reverse": ["void", "(BIter, BIter)"],
        "pthread_mutex_getprioceiling": [
            "int",
            "(const pthread_mutex_t *__restrict mutex, int *__restrict prioceiling)",
        ],
        "log1pl": ["long double", "(long double x)"],
        "operator+": ["complex<Tp>", "(const complex<Tp> &x, const complex<Tp> &y)"],
        "isalpha_l": ["int", "(int, locale_t)"],
        "random_shuffle": ["void", "(RAIter, RAIter)"],
        "max": ["const Tp &", "(const Tp &a, const Tp &b)"],
        "operator<<": [
            "basic_ostream<char, Traits> &",
            "(basic_ostream<char, Traits> &out, const char *s)",
        ],
        "swap": [
            "void",
            "(unordered_multiset<Value, Hash, Pred, Alloc> &x, unordered_multiset<Value, Hash, Pred, Alloc> &y)",
        ],
        "strchrnul": ["const char *", "(const char *s, int c)"],
        "inclusive_scan": [
            "OutputIterator",
            "(InputIterator first, InputIterator last, OutputIterator result, BinaryOperation binary_op, Tp init)",
        ],
        "asinf64x": ["_Float64x", "(_Float64x x)"],
        "y1f64": ["_Float64", "(_Float64)"],
        "wcstof32": [
            "_Float32",
            "(const wchar_t *__restrict nptr, wchar_t **__restrict endptr)",
        ],
        "swap": [
            "typename enable_if<__and_<__is_swappable<Sequence>, __is_swappable<Compare>>::value>::type",
            "(priority_queue<Tp, Sequence, Compare> &x, priority_queue<Tp, Sequence, Compare> &y)",
        ],
        "operator<=": [
            "bool",
            "(const __shared_ptr<Tp1, Lp> &a, const __shared_ptr<Tp2, Lp> &b)",
        ],
        "operator/": [
            "_Expr<_BinClos<struct std::__divides, std::_Expr, std::_ValArray, Dom, typename Dom::value_type>, typename __fun<struct std::__divides, typename Dom::value_type>::result_type>",
            "(const _Expr<Dom, typename Dom::value_type> &e, const valarray<typename Dom::value_type> &v)",
        ],
        "operator==": ["bool", "(const queue<Tp, Seq> &x, const queue<Tp, Seq> &y)"],
        "assoc_laguerre": [
            "typename __gnu_cxx::__promote<Tp>::__type",
            "(unsigned int n, unsigned int m, Tp x)",
        ],
        "_tolower": ["int", "(int)"],
        "is_sorted": ["bool", "(FIter, FIter)"],
        "ctermid": ["char *", "(char *s)"],
        "rethrow_exception": ["void", "(exception_ptr)"],
        "fmaxl": ["long double", "(long double x, long double y)"],
        "fdimf32x": ["_Float32x", "(_Float32x x, _Float32x y)"],
        "operator<": [
            "bool",
            "(const CharT *lhs, const basic_string<CharT, Traits, Alloc> &rhs)",
        ],
        "stold": ["long double", "(const string &str, size_t *idx = 0)"],
        "pthread_mutex_timedlock": [
            "int",
            "(pthread_mutex_t *__restrict mutex, const struct timespec *__restrict abstime)",
        ],
        "transform": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, ForwardIterator>",
            "(ExecutionPolicy &&exec, ForwardIterator1 first1, ForwardIterator1 last1, ForwardIterator2 first2, ForwardIterator result, BinaryOperation op)",
        ],
        "operator==": [
            "bool",
            "(const fisher_f_distribution<RealType> &d1, const fisher_f_distribution<RealType> &d2)",
        ],
        "set_union": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, ForwardIterator>",
            "(ExecutionPolicy &&exec, ForwardIterator1 first1, ForwardIterator1 last1, ForwardIterator2 first2, ForwardIterator2 last2, ForwardIterator result)",
        ],
        "distance": [
            "typename iterator_traits<InputIterator>::difference_type",
            "(InputIterator first, InputIterator last)",
        ],
        "operator!=": [
            "bool",
            "(const forward_list<Tp, Alloc> &lx, const forward_list<Tp, Alloc> &ly)",
        ],
        "ellint_2": [
            "typename __gnu_cxx::__promote_2<Tp, Tpp>::__type",
            "(Tp k, Tpp phi)",
        ],
        "operator>=": [
            "bool",
            "(const _Bit_iterator_base &x, const _Bit_iterator_base &y)",
        ],
        "is_sorted": ["bool", "(FIter, FIter, Compare)"],
        "operator<": [
            "_Expr<_BinClos<struct std::__less, std::_Expr, std::_ValArray, Dom, typename Dom::value_type>, typename __fun<struct std::__less, typename Dom::value_type>::result_type>",
            "(const _Expr<Dom, typename Dom::value_type> &e, const valarray<typename Dom::value_type> &v)",
        ],
        "regex_match": [
            "bool",
            "(const Ch_type *s, const basic_regex<Ch_type, Rx_traits> &re, regex_constants::match_flag_type f = regex_constants::match_default)",
        ],
        "remainder": ["double", "(double x, double y)"],
        "swap": [
            "__enable_if_t<__is_swappable<Tp>::value>",
            "(Tp (&a)[Nm], Tp (&b)[Nm])",
        ],
        "wctob": ["int", "(wint_t c)"],
        "inclusive_scan": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, ForwardIterator2>",
            "(ExecutionPolicy &&exec, ForwardIterator1 first, ForwardIterator1 last, ForwardIterator2 result, BinaryOperation binary_op, Tp init)",
        ],
        "operator>=": [
            "bool",
            "(const duration<Rep1, Period1> &lhs, const duration<Rep2, Period2> &rhs)",
        ],
        "tempnam": ["char *", "(const char *dir, const char *pfx)"],
        "logbf32x": ["_Float32x", "(_Float32x x)"],
        "isless": ["bool", "(float x, float y)"],
        "operator==": [
            "bool",
            "(const unordered_map<Key, Tp, Hash, Pred, Alloc> &x, const unordered_map<Key, Tp, Hash, Pred, Alloc> &y)",
        ],
        "fedisableexcept": ["int", "(int excepts)"],
        "hypot": ["typename __gnu_cxx::__promote_2<Tp, Up>::__type", "(Tp x, Up y)"],
        "search_n": ["FIter", "(FIter, FIter, Size, const Tp &, BinaryPredicate)"],
        "is_directory": ["bool", "(file_status s)"],
        "defaultfloat": ["ios_base &", "(ios_base &base)"],
        "remove": ["int", "(const char *filename)"],
        "for_each_n": ["InputIterator", "(InputIterator first, Size n, Function f)"],
        "exp2f64x": ["_Float64x", "(_Float64x x)"],
        "swap": [
            "typename enable_if<__is_swappable<Seq>::value>::type",
            "(queue<Tp, Seq> &x, queue<Tp, Seq> &y)",
        ],
        "partial_sort_copy": ["RAIter", "(IIter, IIter, RAIter, RAIter, Compare)"],
        "atomic_compare_exchange_weak": [
            "bool",
            "(atomic<ITp> *a, __atomic_val_t<ITp> *i1, __atomic_val_t<ITp> i2)",
        ],
        "catopen": ["nl_catd", "(const char *cat_name, int flag)"],
        "stol": ["long", "(const string &str, size_t *idx = 0, int base = 10)"],
        "fma": ["double", "(double x, double y, double z)"],
        "cyl_neumann": [
            "typename __gnu_cxx::__promote_2<Tpnu, Tp>::__type",
            "(Tpnu nu, Tp x)",
        ],
        "ispunct": ["bool", "(CharT, const locale &)"],
        "operator|": [
            "_Expr<_BinClos<struct std::__bitwise_or, std::_ValArray, std::_Expr, typename Dom::value_type, Dom>, typename __fun<struct std::__bitwise_or, typename Dom::value_type>::result_type>",
            "(const valarray<typename Dom::value_type> &v, const _Expr<Dom, typename Dom::value_type> &e)",
        ],
        "operator==": ["bool", "(nullptr_t, const shared_ptr<Tp> &a)"],
        "hypot": ["double", "(double x, double y, double z)"],
        "lgammaf_r": ["float", "(float, int *signgamp)"],
        "operator&=": [
            "syntax_option_type &",
            "(syntax_option_type &a, syntax_option_type b)",
        ],
        "pthread_rwlock_trywrlock": ["int", "(pthread_rwlock_t *rwlock)"],
        "operator!=": ["bool", "(const queue<Tp, Seq> &x, const queue<Tp, Seq> &y)"],
        "roundevenf64x": ["_Float64x", "(_Float64x x)"],
        "operator+": [
            "move_iterator<Iterator>",
            "(typename move_iterator<Iterator>::difference_type n, const move_iterator<Iterator> &x)",
        ],
        "y0f32x": ["_Float32x", "(_Float32x)"],
        "sinh": ["long double", "(long double x)"],
        "sigpause": ["int", "(int sig)"],
        "sleep_for": ["void", "(const chrono::duration<Rep, Period> &rtime)"],
        "operator<=": [
            "bool",
            "(const CharT *lhs, const basic_string<CharT, Traits, Alloc> &rhs)",
        ],
        "operator==": [
            "bool",
            "(const extreme_value_distribution<RealType> &d1, const extreme_value_distribution<RealType> &d2)",
        ],
        "strtol_l": [
            "long",
            "(const char *__restrict nptr, char **__restrict endptr, int base, locale_t loc)",
        ],
        "sqrt": ["long double", "(long double x)"],
        "binary_search": ["bool", "(FIter, FIter, const Tp &)"],
        "operator>=": ["bool", "(monostate, monostate)"],
        "operator==": [
            "bool",
            "(const linear_congruential_engine<UIntType, a, c, m> &lhs, const linear_congruential_engine<UIntType, a, c, m> &rhs)",
        ],
        "operator>": ["bool", "(const path &lhs, const path &rhs)"],
        "renameat": ["int", "(int oldfd, const char *old, int newfd, const char *new)"],
        "lrintf": ["long", "(float x)"],
        "cosl": ["long double", "(long double x)"],
        "iswupper_l": ["int", "(wint_t wc, locale_t locale)"],
        "legendref": ["float", "(unsigned int l, float x)"],
        "atomic_is_lock_free": ["bool", "(const __shared_ptr<Tp, Lp> *p)"],
        "operator!=": [
            "bool",
            "(const unordered_map<Key, Tp, Hash, Pred, Alloc> &x, const unordered_map<Key, Tp, Hash, Pred, Alloc> &y)",
        ],
        "vwprintf": ["int", "(const wchar_t *__restrict format, __va_list_tag *arg)"],
        "ldexp": ["long double", "(long double x, int exp)"],
        "isdigit": ["bool", "(CharT, const locale &)"],
        "remquo": ["float", "(float x, float y, int *pquo)"],
        "operator+": [
            "basic_string<CharT, Traits, Alloc>",
            "(const basic_string<CharT, Traits, Alloc> &lhs, CharT rhs)",
        ],
        "begin": ["decltype(cont.begin())", "(Container &cont)"],
        "scalblnf32": ["_Float32", "(_Float32 x, long n)"],
        "terminate": ["void", "()"],
        "hypotl": ["long double", "(long double x, long double y)"],
        "generate": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, void>",
            "(ExecutionPolicy &&exec, ForwardIterator first, ForwardIterator last, Generator g)",
        ],
        "symlink_status": ["file_status", "(const path &)"],
        "setbase": ["_Setbase", "(int base)"],
        "tanhf32x": ["_Float32x", "(_Float32x x)"],
        "totalorderf": ["int", "(const float *x, const float *y)"],
        "operator!=": ["bool", "(nullptr_t, const shared_ptr<Tp> &a)"],
        "_longjmp": ["void", "(struct __jmp_buf_tag *env, int val)"],
        "sched_get_priority_min": ["int", "(int algorithm)"],
        "inclusive_scan": [
            "OutputIterator",
            "(InputIterator first, InputIterator last, OutputIterator result)",
        ],
        "_setjmp": ["int", "(struct __jmp_buf_tag *env)"],
        "wcstok": [
            "wchar_t *",
            "(wchar_t *__restrict s, const wchar_t *__restrict delim, wchar_t **__restrict ptr)",
        ],
        "has_facet": ["bool", "<typename Facet>(const locale &)"],
        "operator!=": [
            "bool",
            "(const std::binomial_distribution<IntType> &d1, const std::binomial_distribution<IntType> &d2)",
        ],
        "scalblnf64": ["_Float64", "(_Float64 x, long n)"],
        "getpayloadf64": ["_Float64", "(const _Float64 *x)"],
        "getline": [
            "basic_istream<CharT, Traits> &",
            "(basic_istream<CharT, Traits> &&is, basic_string<CharT, Traits, Alloc> &str)",
        ],
        "swap": [
            "void",
            "(basic_filebuf<CharT, Traits> &x, basic_filebuf<CharT, Traits> &y)",
        ],
        "current_exception": ["exception_ptr", "()"],
        "getpayloadf": ["float", "(const float *x)"],
        "copy_symlink": [
            "void",
            "(const path &existing_symlink, const path &new_symlink, error_code &ec)",
        ],
        "vdprintf": ["int", "(int fd, const char *__restrict fmt, __va_list_tag *arg)"],
        "comp_ellint_2l": ["long double", "(long double k)"],
        "operator<=": [
            "_Expr<_BinClos<struct std::__less_equal, std::_ValArray, std::_Expr, typename Dom::value_type, Dom>, typename __fun<struct std::__less_equal, typename Dom::value_type>::result_type>",
            "(const valarray<typename Dom::value_type> &v, const _Expr<Dom, typename Dom::value_type> &e)",
        ],
        "pop_heap": ["void", "(RAIter, RAIter)"],
        "setpayloadf64x": ["int", "(_Float64x *x, _Float64x payload)"],
        "operator<": [
            "_Expr<_BinClos<struct std::__less, std::_Expr, std::_Constant, Dom, typename Dom::value_type>, typename __fun<struct std::__less, typename Dom::value_type>::result_type>",
            "(const _Expr<Dom, typename Dom::value_type> &v, const typename Dom::value_type &t)",
        ],
        "mismatch": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, std::pair<ForwardIterator1, ForwardIterator2>>",
            "(ExecutionPolicy &&exec, ForwardIterator1 first1, ForwardIterator1 last1, ForwardIterator2 first2)",
        ],
        "setpayloadsigf32": ["int", "(_Float32 *x, _Float32 payload)"],
        "issignaling": ["int", "(double val)"],
        "tgammaf32": ["_Float32", "(_Float32)"],
        "strsep": [
            "char *",
            "(char **__restrict stringp, const char *__restrict delim)",
        ],
        "temp_directory_path": ["path", "()"],
        "_toupper": ["int", "(int)"],
        "stable_sort": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, void>",
            "(ExecutionPolicy &&exec, RandomAccessIterator first, RandomAccessIterator last)",
        ],
        "j0": ["double", "(double)"],
        "operator==": [
            "bool",
            "(const recursive_directory_iterator &lhs, const recursive_directory_iterator &rhs)",
        ],
        "getdirentries": [
            "__ssize_t",
            "(int fd, char *__restrict buf, size_t nbytes, __off_t *__restrict basep)",
        ],
        "operator<<": [
            "basic_ostream<CharT, Traits> &",
            "(basic_ostream<CharT, Traits> &os, _Setw f)",
        ],
        "frexpf32": ["_Float32", "(_Float32 x, int *exponent)"],
        "strftime_l": [
            "size_t",
            "(char *__restrict s, size_t maxsize, const char *__restrict format, const struct tm *__restrict tp, locale_t loc)",
        ],
        "copy_file": [
            "bool",
            "(const path &from, const path &to, copy_options option)",
        ],
        "sigreturn": ["int", "(struct sigcontext *scp)"],
        "next": [
            "InputIterator",
            "(InputIterator x, typename iterator_traits<InputIterator>::difference_type n = 1)",
        ],
        "get": ["Tp &&", "(pair<Up, Tp> &&p)"],
        "reduce": ["Tp", "(InputIterator first, InputIterator last, Tp init)"],
        "operator!=": [
            "bool",
            "(const std::negative_binomial_distribution<IntType> &d1, const std::negative_binomial_distribution<IntType> &d2)",
        ],
        "wcsnlen": ["size_t", "(const wchar_t *s, size_t maxlen)"],
        "lexicographical_compare": [
            "bool",
            "(II1 first1, II1 last1, II2 first2, II2 last2)",
        ],
        "operator+": ["const_iterator", "(difference_type n, const const_iterator &x)"],
        "atomic_fetch_and_explicit": [
            "ITp",
            "(volatile __atomic_base<ITp> *a, __atomic_val_t<ITp> i, memory_order m)",
        ],
        "strfromf32x": [
            "int",
            "(char *dest, size_t size, const char *format, _Float32x f)",
        ],
        "fgets": ["char *", "(char *__restrict s, int n, FILE *__restrict stream)"],
        "operator new": ["void *", "(std::size_t, const std::nothrow_t &)"],
        "pthread_setaffinity_np": [
            "int",
            "(pthread_t th, size_t cpusetsize, const cpu_set_t *cpuset)",
        ],
        "cosh": ["float", "(float x)"],
        "copysign": ["long double", "(long double x, long double y)"],
        "asin": ["std::complex<Tp>", "(const std::complex<Tp> &)"],
        "nanf64x": ["_Float64x", "(const char *tagb)"],
        "mbtowc": [
            "int",
            "(wchar_t *__restrict pwc, const char *__restrict s, size_t n)",
        ],
        "tanh": ["double", "(double x)"],
        "operator==": [
            "bool",
            "(const _Self &x, const _Deque_iterator<Tp, RefR, PtrR> &y)",
        ],
        "operator delete[]": ["void", "(void *, std::align_val_t)"],
        "operator==": ["bool", "(thread::id x, thread::id y)"],
        "operator<<": [
            "_Expr<_BinClos<__shift_left, std::_ValArray, std::_ValArray, Tp, Tp>, typename __fun<__shift_left, Tp>::result_type>",
            "(const valarray<Tp> &v, const valarray<Tp> &w)",
        ],
        "trunc": ["double", "(double x)"],
        "operator/": ["complex<Tp>", "(const Tp &x, const complex<Tp> &y)"],
        "basename": ["char *", "(char *filename)"],
        "cos": ["double", "(double x)"],
        "operator<": [
            "bool",
            "(const sub_match<Bi_iter> &lhs, const typename iterator_traits<Bi_iter>::value_type *rhs)",
        ],
        "operator%": [
            "_Expr<_BinClos<struct std::__modulus, std::_Expr, std::_ValArray, Dom, typename Dom::value_type>, typename __fun<struct std::__modulus, typename Dom::value_type>::result_type>",
            "(const _Expr<Dom, typename Dom::value_type> &e, const valarray<typename Dom::value_type> &v)",
        ],
        "erf": ["double", "(double)"],
        "scalb": ["double", "(double x, double n)"],
        "operator!=": [
            "bool",
            "(const recursive_directory_iterator &lhs, const recursive_directory_iterator &rhs)",
        ],
        "round": ["double", "(double x)"],
        "sqrt": [
            "_Expr<_UnClos<struct std::_Sqrt, std::_ValArray, Tp>, Tp>",
            "(const valarray<Tp> &v)",
        ],
        "temp_directory_path": ["path", "(error_code &ec)"],
        "max": ["Tp", "(initializer_list<Tp>, Compare)"],
        "erand48_r": [
            "int",
            "(unsigned short *xsubi, struct drand48_data *__restrict buffer, double *__restrict result)",
        ],
        "partition": ["BIter", "(BIter, BIter, Predicate)"],
        "regex_search": [
            "bool",
            "(Bi_iter s, Bi_iter e, match_results<Bi_iter, Alloc> &m, const basic_regex<Ch_type, Rx_traits> &re, regex_constants::match_flag_type flags = regex_constants::match_default)",
        ],
        "operator/": [
            "_Expr<_BinClos<struct std::__divides, std::_ValArray, std::_Expr, typename Dom::value_type, Dom>, typename __fun<struct std::__divides, typename Dom::value_type>::result_type>",
            "(const valarray<typename Dom::value_type> &v, const _Expr<Dom, typename Dom::value_type> &e)",
        ],
        "cyl_neumannf": ["float", "(float nu, float x)"],
        "set_union": ["OIter", "(IIter1, IIter1, IIter2, IIter2, OIter, Compare)"],
        "expm1f": ["float", "(float x)"],
        "pop_heap": ["void", "(RAIter, RAIter, Compare)"],
        "pthread_rwlock_rdlock": ["int", "(pthread_rwlock_t *rwlock)"],
        "operator==": [
            "bool",
            "(const __shared_count<Lp> &a, const __shared_count<Lp> &b)",
        ],
        "iswprint": ["int", "(wint_t wc)"],
        "tmpnam": ["char *", "(char *s)"],
        "f32subf32x": ["_Float32", "(_Float32x x, _Float32x y)"],
        "operator/": ["complex<Tp>", "(const complex<Tp> &x, const complex<Tp> &y)"],
        "fminmagf64": ["_Float64", "(_Float64 x, _Float64 y)"],
        "isinf": [
            "typename __gnu_cxx::__enable_if<__is_integer<Tp>::__value, bool>::__type",
            "(Tp x)",
        ],
        "signbit": [
            "typename __gnu_cxx::__enable_if<__is_integer<Tp>::__value, bool>::__type",
            "(Tp x)",
        ],
        "fmaxmagf32": ["_Float32", "(_Float32 x, _Float32 y)"],
        "nexttoward": ["double", "(double x, long double y)"],
        "atomic_fetch_sub": ["ITp", "(atomic<ITp> *a, __atomic_diff_t<ITp> i)"],
        "operator!=": [
            "bool",
            "(const _Self &x, const _Deque_iterator<Tp, RefR, PtrR> &y)",
        ],
        "pthread_rwlock_unlock": ["int", "(pthread_rwlock_t *rwlock)"],
        "cbrtf": ["float", "(float x)"],
        "atan2": ["typename __gnu_cxx::__promote_2<Tp, Up>::__type", "(Tp y, Up x)"],
        "operator!=": ["bool", "(thread::id x, thread::id y)"],
        "ldexp": ["double", "(double x, int exponent)"],
        "stoul": [
            "unsigned long",
            "(const string &str, size_t *idx = 0, int base = 10)",
        ],
        "wctype_l": ["wctype_t", "(const char *property, locale_t locale)"],
        "operator<=": [
            "bool",
            "(const sub_match<Bi_iter> &lhs, const typename iterator_traits<Bi_iter>::value_type *rhs)",
        ],
        "llrint": ["long long", "(double x)"],
        "random_r": [
            "int",
            "(struct random_data *__restrict buf, int32_t *__restrict result)",
        ],
        "uppercase": ["ios_base &", "(ios_base &base)"],
        "operator&": ["copy_options", "(copy_options x, copy_options y)"],
        "operator>": [
            "__optional_gt_t<Tp, Up>",
            "(const optional<Tp> &lhs, const Up &rhs)",
        ],
        "operator==": [
            "bool",
            "(const error_condition &lhs, const error_condition &rhs)",
        ],
        "llroundf64": ["long long", "(_Float64 x)"],
        "dcngettext": [
            "char *",
            "(const char *domainname, const char *msgid1, const char *msgid2, unsigned long n, int category)",
        ],
        "ddivl": ["double", "(long double x, long double y)"],
        "mkstemp": ["int", "(char *template)"],
        "lldiv": ["lldiv_t", "(long long numer, long long denom)"],
        "cyl_bessel_k": [
            "typename __gnu_cxx::__promote_2<Tpnu, Tp>::__type",
            "(Tpnu nu, Tp x)",
        ],
        "atomic_flag_test_and_set_explicit": [
            "bool",
            "(volatile atomic_flag *a, memory_order m)",
        ],
        "rintf64": ["_Float64", "(_Float64 x)"],
        "operator==": [
            "bool",
            "(const student_t_distribution<RealType> &d1, const student_t_distribution<RealType> &d2)",
        ],
        "uninitialized_default_construct": [
            "void",
            "(ForwardIterator first, ForwardIterator last)",
        ],
        "operator<": [
            "bool",
            "(const vector<Tp, Alloc> &x, const vector<Tp, Alloc> &y)",
        ],
        "is_character_file": ["bool", "(const path &p)"],
        "operator<<": [
            "std::basic_ostream<CharT, Traits> &",
            "(std::basic_ostream<CharT, Traits> &os, const bitset<Nb> &x)",
        ],
        "pthread_attr_setaffinity_np": [
            "int",
            "(pthread_attr_t *attr, size_t cpusetsize, const cpu_set_t *cpuset)",
        ],
        "endl": [
            "basic_ostream<CharT, Traits> &",
            "(basic_ostream<CharT, Traits> &os)",
        ],
        "operator>=": ["bool", "(const __shared_ptr<Tp, Lp> &a, nullptr_t)"],
        "fsetpos64": ["int", "(FILE *stream, const fpos64_t *pos)"],
        "operator&": ["memory_order", "(memory_order m, __memory_order_modifier mod)"],
        "mkstemp64": ["int", "(char *template)"],
        "sinhf32": ["_Float32", "(_Float32 x)"],
        "strfromd": ["int", "(char *dest, size_t size, const char *format, double f)"],
        "rewind": ["void", "(FILE *stream)"],
        "trunc": [
            "typename __gnu_cxx::__enable_if<__is_integer<Tp>::__value, double>::__type",
            "(Tp x)",
        ],
        "cos": [
            "typename __gnu_cxx::__enable_if<__is_integer<Tp>::__value, double>::__type",
            "(Tp x)",
        ],
        "resetiosflags": ["_Resetiosflags", "(ios_base::fmtflags mask)"],
        "fread_unlocked": [
            "size_t",
            "(void *__restrict ptr, size_t size, size_t n, FILE *__restrict stream)",
        ],
        "tanf64": ["_Float64", "(_Float64 x)"],
        "operator>=": [
            "_Expr<_BinClos<__greater_equal, std::_ValArray, std::_Constant, Tp, Tp>, typename __fun<__greater_equal, Tp>::result_type>",
            "(const valarray<Tp> &v, const typename valarray<Tp>::value_type &t)",
        ],
        "strsignal": ["char *", "(int sig)"],
        "atomic_fetch_or": ["ITp", "(__atomic_base<ITp> *a, __atomic_val_t<ITp> i)"],
        "roundevenf32x": ["_Float32x", "(_Float32x x)"],
        "regex_match": [
            "bool",
            "(const basic_string<Ch_type, Ch_traits, Ch_alloc> &&, match_results<typename basic_string<Ch_type, Ch_traits, Ch_alloc>::const_iterator, Alloc> &, const basic_regex<Ch_type, Rx_traits> &, regex_constants::match_flag_type = regex_constants::match_default)",
        ],
        "rintf32": ["_Float32", "(_Float32 x)"],
        "sinhf": ["float", "(float x)"],
        "to_chars": [
            "to_chars_result",
            "(char *first, char *last, long long value, int base)",
        ],
        "wcstof64x_l": [
            "_Float64x",
            "(const wchar_t *__restrict nptr, wchar_t **__restrict endptr, locale_t loc)",
        ],
        "pthread_setattr_default_np": ["int", "(const pthread_attr_t *attr)"],
        "operator!=": [
            "bool",
            "(const error_condition &lhs, const error_condition &rhs)",
        ],
        "partial_sort": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, void>",
            "(ExecutionPolicy &&exec, RandomAccessIterator first, RandomAccessIterator middle, RandomAccessIterator last)",
        ],
        "getline": [
            "basic_istream<CharT, Traits> &",
            "(basic_istream<CharT, Traits> &is, basic_string<CharT, Traits, Alloc> &str, CharT delim)",
        ],
        "adjacent_find": ["FIter", "(FIter, FIter)"],
        "operator<": [
            "bool",
            "(const basic_string<CharT, Traits, Alloc> &lhs, const CharT *rhs)",
        ],
        "ceilf64": ["_Float64", "(_Float64 x)"],
        "_obstack_newchunk": ["void", "(struct obstack *, int)"],
        "fminmagf": ["float", "(float x, float y)"],
        "operator<": ["bool", "(const deque<Tp, Alloc> &x, const deque<Tp, Alloc> &y)"],
        "for_each": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, void>",
            "(ExecutionPolicy &&exec, ForwardIterator first, ForwardIterator last, Function f)",
        ],
        "atomic_store_explicit": [
            "void",
            "(__shared_ptr<Tp, Lp> *p, __shared_ptr<Tp, Lp> r, memory_order)",
        ],
        "canonicalize_file_name": ["char *", "(const char *name)"],
        "freelocale": ["void", "(locale_t dataset)"],
        "operator>": [
            "bool",
            "(const __shared_ptr<Tp1, Lp> &a, const __shared_ptr<Tp2, Lp> &b)",
        ],
        "inner_product": [
            "Tp",
            "(InputIterator1 first1, InputIterator1 last1, InputIterator2 first2, Tp init, BinaryOperation1 binary_op1, BinaryOperation2 binary_op2)",
        ],
        "pthread_rwlockattr_init": ["int", "(pthread_rwlockattr_t *attr)"],
        "operator<=": [
            "bool",
            "(const vector<Tp, Alloc> &x, const vector<Tp, Alloc> &y)",
        ],
        "sinf": ["float", "(float x)"],
        "operator|=": ["const _Ios_Fmtflags &", "(_Ios_Fmtflags &a, _Ios_Fmtflags b)"],
        "strptime": [
            "char *",
            "(const char *__restrict s, const char *__restrict fmt, struct tm *tp)",
        ],
        "is_character_file": ["bool", "(file_status s)"],
        "swap": ["void", "(__shared_ptr<Tp, Lp> &a, __shared_ptr<Tp, Lp> &b)"],
        "strcat": ["char *", "(char *__restrict dest, const char *__restrict src)"],
        "acosh": ["double", "(double x)"],
        "pclose": ["int", "(FILE *stream)"],
        "operator<": ["bool", "(nullptr_t, const __shared_ptr<Tp, Lp> &a)"],
        "partition": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, ForwardIterator>",
            "(ExecutionPolicy &&exec, ForwardIterator first, ForwardIterator last, UnaryPredicate pred)",
        ],
        "cyl_neumannl": ["long double", "(long double nu, long double x)"],
        "remainderf": ["float", "(float x, float y)"],
        "isgreaterequal": ["bool", "(float x, float y)"],
        "swap": [
            "typename enable_if<__is_swappable<Seq>::value>::type",
            "(stack<Tp, Seq> &x, stack<Tp, Seq> &y)",
        ],
        "longjmp": ["void", "(struct __jmp_buf_tag *env, int val)"],
        "atomic_fetch_or": [
            "ITp",
            "(volatile __atomic_base<ITp> *a, __atomic_val_t<ITp> i)",
        ],
        "scalblnf32x": ["_Float32x", "(_Float32x x, long n)"],
        "find_first_of": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, ForwardIterator1>",
            "(ExecutionPolicy &&exec, ForwardIterator1 first, ForwardIterator1 last, ForwardIterator2 s_first, ForwardIterator2 s_last)",
        ],
        "f32xsubf64x": ["_Float32x", "(_Float64x x, _Float64x y)"],
        "pthread_mutexattr_destroy": ["int", "(pthread_mutexattr_t *attr)"],
        "operator+": [
            "basic_string<CharT, Traits, Alloc>",
            "(CharT lhs, const basic_string<CharT, Traits, Alloc> &rhs)",
        ],
        "operator||": [
            "_Expr<_BinClos<__logical_or, std::_ValArray, std::_Constant, Tp, Tp>, typename __fun<__logical_or, Tp>::result_type>",
            "(const valarray<Tp> &v, const typename valarray<Tp>::value_type &t)",
        ],
        "nexttoward": ["long double", "(long double x, long double y)"],
        "operator==": [
            "bool",
            "(const exponential_distribution<RealType> &d1, const exponential_distribution<RealType> &d2)",
        ],
        "seekdir": ["void", "(DIR *dirp, long pos)"],
        "unique": ["FIter", "(FIter, FIter, BinaryPredicate)"],
        "isgraph": ["int", "(int)"],
        "tan": ["long double", "(long double x)"],
        "set_difference": ["OIter", "(IIter1, IIter1, IIter2, IIter2, OIter)"],
        "atomic_flag_test_and_set": ["bool", "(volatile atomic_flag *a)"],
        "fmin": ["typename __gnu_cxx::__promote_2<Tp, Up>::__type", "(Tp x, Up y)"],
        "copy": [
            "typename __gnu_cxx::__enable_if<__is_char<CharT>::__value, ostreambuf_iterator<CharT>>::__type",
            "(istreambuf_iterator<CharT> first, istreambuf_iterator<CharT> last, ostreambuf_iterator<CharT> result)",
        ],
        "imag": ["typename __gnu_cxx::__promote<Tp>::__type", "(Tp)"],
        "isnan": [
            "typename __gnu_cxx::__enable_if<__is_integer<Tp>::__value, bool>::__type",
            "(Tp x)",
        ],
        "operator==": ["bool", "(nullptr_t, const unique_ptr<Tp, Dp> &x)"],
        "end": ["decltype(cont.end())", "(Container &cont)"],
        "ceil": [
            "enable_if_t<__is_duration<ToDur>::value, time_point<Clock, ToDur>>",
            "<typename ToDur>(const time_point<Clock, Dur> &tp)",
        ],
        "operator-": [
            "_Expr<_BinClos<__minus, std::_Constant, std::_ValArray, Tp, Tp>, typename __fun<__minus, Tp>::result_type>",
            "(const typename valarray<Tp>::value_type &t, const valarray<Tp> &v)",
        ],
        "strtouq": [
            "unsigned long long",
            "(const char *__restrict nptr, char **__restrict endptr, int base)",
        ],
        "sph_neumannl": ["long double", "(unsigned int n, long double x)"],
        "set_symmetric_difference": [
            "OIter",
            "(IIter1, IIter1, IIter2, IIter2, OIter)",
        ],
        "operator<=": [
            "bool",
            "(const basic_string<CharT, Traits, Alloc> &lhs, const CharT *rhs)",
        ],
        "operator+": ["_Self", "(difference_type n, const _Self &x)"],
        "putwc_unlocked": ["wint_t", "(wchar_t wc, __FILE *stream)"],
        "timegm": ["time_t", "(struct tm *tp)"],
        "getdirentries64": [
            "__ssize_t",
            "(int fd, char *__restrict buf, size_t nbytes, __off64_t *__restrict basep)",
        ],
        "atoll": ["long long", "(const char *nptr)"],
        "j1f64x": ["_Float64x", "(_Float64x)"],
        "atomic_is_lock_free": ["bool", "(const volatile atomic<ITp> *a)"],
        "f64divf64x": ["_Float64", "(_Float64x x, _Float64x y)"],
        "getdelim": [
            "__ssize_t",
            "(char **__restrict lineptr, size_t *__restrict n, int delimiter, FILE *__restrict stream)",
        ],
        "fseeko": ["int", "(FILE *stream, __off_t off, int whence)"],
        "operator<=": ["bool", "(nullptr_t, const __shared_ptr<Tp, Lp> &a)"],
        "fmodf": ["float", "(float x, float y)"],
        "fmaf32": ["_Float32", "(_Float32 x, _Float32 y, _Float32 z)"],
        "sigpending": ["int", "(sigset_t *set)"],
        "operator<": [
            "bool",
            "(const move_iterator<Iterator> &x, const move_iterator<Iterator> &y)",
        ],
        "nextdownl": ["long double", "(long double x)"],
        "left": ["ios_base &", "(ios_base &base)"],
        "operator==": ["bool", "(nullopt_t, const optional<Tp> &rhs)"],
        "strcasecmp_l": ["int", "(const char *s1, const char *s2, locale_t loc)"],
        "operator>": [
            "bool",
            "(const CharT *lhs, const basic_string<CharT, Traits, Alloc> &rhs)",
        ],
        "get": [
            "typename tuple_element<Int, std::pair<Tp1, Tp2>>::type &",
            "<std::size_t Int>(std::pair<Tp1, Tp2> &in)",
        ],
        "operator<<": [
            "basic_ostream<CharT, Traits> &",
            "(basic_ostream<CharT, Traits> &out, const CharT *s)",
        ],
        "log": [
            "_Expr<_UnClos<struct std::_Log, std::_Expr, Dom>, typename Dom::value_type>",
            "(const _Expr<Dom, typename Dom::value_type> &e)",
        ],
        "operator==": [
            "bool",
            "(const sub_match<Bi_iter> &lhs, const __sub_match_string<Bi_iter, Ch_traits, Ch_alloc> &rhs)",
        ],
        "setpayloadsigf64x": ["int", "(_Float64x *x, _Float64x payload)"],
        "nextafterf": ["float", "(float x, float y)"],
        "fmemopen": ["FILE *", "(void *s, size_t len, const char *modes)"],
        "pow": ["complex<Tp>", "(const complex<Tp> &, const complex<Tp> &)"],
        "memccpy": [
            "void *",
            "(void *__restrict dest, const void *__restrict src, int c, size_t n)",
        ],
        "setstate": ["char *", "(char *statebuf)"],
        "setprecision": ["_Setprecision", "(int n)"],
        "pthread_key_create": [
            "int",
            "(pthread_key_t *key, void (*destr_function)(void *))",
        ],
        "exp": ["complex<Tp>", "(const complex<Tp> &)"],
        "pthread_tryjoin_np": ["int", "(pthread_t th, void **thread_return)"],
        "status": ["file_status", "(const path &, error_code &)"],
        "free": ["void", "(void *ptr)"],
        "stol": ["long", "(const wstring &str, size_t *idx = 0, int base = 10)"],
        "fpclassify": ["int", "(double x)"],
        "perror": ["void", "(const char *s)"],
        "nanosleep": [
            "int",
            "(const struct timespec *requested_time, struct timespec *remaining)",
        ],
        "min_element": ["FIter", "(FIter, FIter)"],
        "pthread_attr_getschedpolicy": [
            "int",
            "(const pthread_attr_t *__restrict attr, int *__restrict policy)",
        ],
        "operator!=": ["bool", "(nullptr_t, const unique_ptr<Tp, Dp> &x)"],
        "floorf64": ["_Float64", "(_Float64 x)"],
        "get_default_resource": ["memory_resource *", "()"],
        "operator==": [
            "bool",
            "(basic_string_view<CharT, Traits> x, __type_identity_t<basic_string_view<CharT, Traits>> y)",
        ],
        "kill_dependency": ["Tp", "(Tp y)"],
        "ilogbl": ["int", "(long double x)"],
        "min_element": ["FIter", "(FIter, FIter, Compare)"],
        "last_write_time": [
            "void",
            "(const path &p, file_time_type new_time, error_code &ec)",
        ],
        "file_size": ["uintmax_t", "(const path &)"],
        "operator!=": ["bool", "(nullopt_t, const optional<Tp> &rhs)"],
        "ellint_2f": ["float", "(float k, float phi)"],
        "atanf64x": ["_Float64x", "(_Float64x x)"],
        "sigprocmask": [
            "int",
            "(int how, const sigset_t *__restrict set, sigset_t *__restrict oset)",
        ],
        "operator<=": [
            "bool",
            "(const move_iterator<Iterator> &x, const move_iterator<Iterator> &y)",
        ],
        "operator>=": [
            "bool",
            "(basic_string_view<CharT, Traits> x, basic_string_view<CharT, Traits> y)",
        ],
        "operator<<": [
            "_Expr<_BinClos<struct std::__shift_left, std::_Expr, std::_ValArray, Dom, typename Dom::value_type>, typename __fun<struct std::__shift_left, typename Dom::value_type>::result_type>",
            "(const _Expr<Dom, typename Dom::value_type> &e, const valarray<typename Dom::value_type> &v)",
        ],
        "rindex": ["char *", "(const char *s, int c)"],
        "operator!=": [
            "bool",
            "(const sub_match<Bi_iter> &lhs, const __sub_match_string<Bi_iter, Ch_traits, Ch_alloc> &rhs)",
        ],
        "scalbf": ["float", "(float x, float n)"],
        "atomic_store": ["void", "(shared_ptr<Tp> *p, shared_ptr<Tp> r)"],
        "scalbln": [
            "typename __gnu_cxx::__enable_if<__is_integer<Tp>::__value, double>::__type",
            "(Tp x, long ex)",
        ],
        "wctype": ["wctype_t", "(const char *property)"],
        "isprint_l": ["int", "(int, locale_t)"],
        "erf": [
            "typename __gnu_cxx::__enable_if<__is_integer<Tp>::__value, double>::__type",
            "(Tp x)",
        ],
        "remainder": ["float", "(float x, float y)"],
        "expf": ["float", "(float x)"],
        "proximate": ["path", "(const path &p, const path &base, error_code &ec)"],
        "operator>=": [
            "__optional_ge_t<Up, Tp>",
            "(const Up &lhs, const optional<Tp> &rhs)",
        ],
        "pthread_rwlock_timedrdlock": [
            "int",
            "(pthread_rwlock_t *__restrict rwlock, const struct timespec *__restrict abstime)",
        ],
        "exp": ["float", "(float x)"],
        "cosf64": ["_Float64", "(_Float64 x)"],
        "operator<": [
            "bool",
            "(const __sub_match_string<Bi_iter, Ch_traits, Ch_alloc> &lhs, const sub_match<Bi_iter> &rhs)",
        ],
        "islessequal": ["bool", "(float x, float y)"],
        "unshare": ["int", "(int flags)"],
        "operator-": [
            "typename common_type<Dur1, Dur2>::type",
            "(const time_point<Clock, Dur1> &lhs, const time_point<Clock, Dur2> &rhs)",
        ],
        "operator^=": ["copy_options &", "(copy_options &x, copy_options y)"],
        "pow": ["double", "(double x, double y)"],
        "vwscanf": ["int", "(const wchar_t *__restrict format, __va_list_tag *arg)"],
        "memcpy": [
            "void *",
            "(void *__restrict dest, const void *__restrict src, size_t n)",
        ],
        "fma": ["float", "(float x, float y, float z)"],
        "log10f32": ["_Float32", "(_Float32 x)"],
        "return_temporary_buffer": ["void", "(Tp *p)"],
        "towlower": ["wint_t", "(wint_t wc)"],
        "pthread_spin_destroy": ["int", "(pthread_spinlock_t *lock)"],
        "operator!=": [
            "bool",
            "(basic_string_view<CharT, Traits> x, __type_identity_t<basic_string_view<CharT, Traits>> y)",
        ],
        "iswalnum": ["int", "(wint_t wc)"],
        "atan": [
            "_Expr<_UnClos<struct std::_Atan, std::_Expr, Dom>, typename Dom::value_type>",
            "(const _Expr<Dom, typename Dom::value_type> &e)",
        ],
        "log10": ["double", "(double x)"],
        "sleep_until": ["void", "(const chrono::time_point<Clock, Duration> &atime)"],
        "operator>>": [
            "std::basic_istream<CharT, Traits> &",
            "(std::basic_istream<CharT, Traits> &is, negative_binomial_distribution<IntType> &x)",
        ],
        "log10f64x": ["_Float64x", "(_Float64x x)"],
        "tgamma": ["long double", "(long double x)"],
        "mbsinit": ["int", "(const mbstate_t *ps)"],
        "remquo": ["double", "(double x, double y, int *quo)"],
        "operator<": [
            "__optional_lt_t<Tp, Up>",
            "(const optional<Tp> &lhs, const optional<Up> &rhs)",
        ],
        "strfromf64x": [
            "int",
            "(char *dest, size_t size, const char *format, _Float64x f)",
        ],
        "boolalpha": ["ios_base &", "(ios_base &base)"],
        "tanh": ["long double", "(long double x)"],
        "fgetws_unlocked": [
            "wchar_t *",
            "(wchar_t *__restrict ws, int n, __FILE *__restrict stream)",
        ],
        "operator<<": [
            "std::basic_ostream<CharT, Traits> &",
            "(std::basic_ostream<CharT, Traits> &os, const linear_congruential_engine<UIntType, a, c, m> &lcr)",
        ],
        "sinf32x": ["_Float32x", "(_Float32x x)"],
        "operator" "il": ["std::complex<long double>", "(unsigned long long num)"],
        "stable_sort": ["void", "(RAIter, RAIter)"],
        "trunc": ["long double", "(long double x)"],
        "operator>=": [
            "bool",
            "(const move_iterator<IteratorL> &x, const move_iterator<IteratorR> &y)",
        ],
        "jnl": ["long double", "(int, long double)"],
        "operator==": [
            "_Expr<_BinClos<__equal_to, std::_ValArray, std::_ValArray, Tp, Tp>, typename __fun<__equal_to, Tp>::result_type>",
            "(const valarray<Tp> &v, const valarray<Tp> &w)",
        ],
        "accumulate": [
            "Tp",
            "(InputIterator first, InputIterator last, Tp init, BinaryOperation binary_op)",
        ],
        "operator-": [
            "_Expr<_BinClos<struct std::__minus, std::_ValArray, std::_Expr, typename Dom::value_type, Dom>, typename __fun<struct std::__minus, typename Dom::value_type>::result_type>",
            "(const valarray<typename Dom::value_type> &v, const _Expr<Dom, typename Dom::value_type> &e)",
        ],
        "totalordermag": ["int", "(const double *x, const double *y)"],
        "operator==": [
            "bool",
            "(const map<Key, Tp, Compare, Alloc> &x, const map<Key, Tp, Compare, Alloc> &y)",
        ],
        "operator<": [
            "_Expr<_BinClos<struct std::__less, std::_Constant, std::_Expr, typename Dom::value_type, Dom>, typename __fun<struct std::__less, typename Dom::value_type>::result_type>",
            "(const typename Dom::value_type &t, const _Expr<Dom, typename Dom::value_type> &v)",
        ],
        "make_heap": ["void", "(RAIter, RAIter, Compare)"],
        "operator<=": [
            "bool",
            "(const reverse_iterator<Iterator> &x, const reverse_iterator<Iterator> &y)",
        ],
        "getdate": ["struct tm *", "(const char *string)"],
        "operator<=": [
            "bool",
            "(const __sub_match_string<Bi_iter, Ch_traits, Ch_alloc> &lhs, const sub_match<Bi_iter> &rhs)",
        ],
        "strtoull_l": [
            "unsigned long long",
            "(const char *__restrict nptr, char **__restrict endptr, int base, locale_t loc)",
        ],
        "getopt_long": [
            "int",
            "(int argc, char *const *argv, const char *shortopts, const struct option *longopts, int *longind)",
        ],
        "operator>": ["bool", "(const optional<Tp> &lhs, nullopt_t)"],
        "pthread_mutex_trylock": ["int", "(pthread_mutex_t *mutex)"],
        "sincosf32": ["void", "(_Float32 x, _Float32 *sinx, _Float32 *cosx)"],
        "data": ["decltype(cont.data())", "(const Container &cont)"],
        "bind1st": ["binder1st<Operation>", "(const Operation &fn, const Tp &x)"],
        "comp_ellint_3f": ["float", "(float k, float nu)"],
        "wcstof32_l": [
            "_Float32",
            "(const wchar_t *__restrict nptr, wchar_t **__restrict endptr, locale_t loc)",
        ],
        "fminf32x": ["_Float32x", "(_Float32x x, _Float32x y)"],
        "partition_copy": [
            "pair<OIter1, OIter2>",
            "(IIter, IIter, OIter1, OIter2, Predicate)",
        ],
        "mem_fun": ["mem_fun_t<Ret, Tp>", "(Ret (Tp::*f)())"],
        "fromfpf": ["__intmax_t", "(float x, int round, unsigned int width)"],
        "remquo": ["long double", "(long double x, long double y, int *pquo)"],
        "stable_partition": ["BIter", "(BIter, BIter, Predicate)"],
        "operator==": [
            "bool",
            "(const basic_string<CharT, Traits, Alloc> &lhs, const basic_string<CharT, Traits, Alloc> &rhs)",
        ],
        "logl": ["long double", "(long double x)"],
        "destroy": ["void", "(ForwardIterator first, ForwardIterator last)"],
        "nextup": ["double", "(double x)"],
        "operator<<": [
            "std::basic_ostream<CharT, Traits> &",
            "(std::basic_ostream<CharT, Traits> &os, const piecewise_linear_distribution<RealType> &x)",
        ],
        "strcasestr": ["const char *", "(const char *haystack, const char *needle)"],
        "operator%": [
            "_Expr<_BinClos<struct std::__modulus, std::_Expr, std::_Expr, Dom1, Dom2>, typename __fun<struct std::__modulus, typename Dom1::value_type>::result_type>",
            "(const _Expr<Dom1, typename Dom1::value_type> &v, const _Expr<Dom2, typename Dom2::value_type> &w)",
        ],
        "strfromf": ["int", "(char *dest, size_t size, const char *format, float f)"],
        "iswlower_l": ["int", "(wint_t wc, locale_t locale)"],
        "strcoll_l": ["int", "(const char *s1, const char *s2, locale_t l)"],
        "search": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, ForwardIterator1>",
            "(ExecutionPolicy &&exec, ForwardIterator1 first, ForwardIterator1 last, ForwardIterator2 s_first, ForwardIterator2 s_last, BinaryPredicate pred)",
        ],
        "operator==": ["bool", "(const stack<Tp, Seq> &x, const stack<Tp, Seq> &y)"],
        "f32divf64": ["_Float32", "(_Float64 x, _Float64 y)"],
        "operator==": [
            "typename __gnu_cxx::__enable_if<__is_char<CharT>::__value, bool>::__type",
            "(const basic_string<CharT> &lhs, const basic_string<CharT> &rhs)",
        ],
        "operator<<": [
            "basic_ostream<CharT, Traits> &",
            "(basic_ostream<CharT, Traits> &os, const basic_string<CharT, Traits, Alloc> &str)",
        ],
        "srandom": ["void", "(unsigned int seed)"],
        "operator&": [
            "_Expr<_BinClos<struct std::__bitwise_and, std::_Expr, std::_ValArray, Dom, typename Dom::value_type>, typename __fun<struct std::__bitwise_and, typename Dom::value_type>::result_type>",
            "(const _Expr<Dom, typename Dom::value_type> &e, const valarray<typename Dom::value_type> &v)",
        ],
        "wcstof32x": [
            "_Float32x",
            "(const wchar_t *__restrict nptr, wchar_t **__restrict endptr)",
        ],
        "strncasecmp_l": [
            "int",
            "(const char *s1, const char *s2, size_t n, locale_t loc)",
        ],
        "getc": ["int", "(FILE *stream)"],
        "operator<<": [
            "std::basic_ostream<CharT, Traits> &",
            "(std::basic_ostream<CharT, Traits> &os, const normal_distribution<RealType> &x)",
        ],
        "uninitialized_fill": [
            "void",
            "(ForwardIterator first, ForwardIterator last, const Tp &x)",
        ],
        "symlink_status": ["file_status", "(const path &, error_code &)"],
        "pthread_mutex_unlock": ["int", "(pthread_mutex_t *mutex)"],
        "exp2": ["long double", "(long double x)"],
        "operator>": [
            "bool",
            "(const sub_match<Bi_iter> &lhs, const typename iterator_traits<Bi_iter>::value_type *rhs)",
        ],
        "operator!=": [
            "bool",
            "(const map<Key, Tp, Compare, Alloc> &x, const map<Key, Tp, Compare, Alloc> &y)",
        ],
        "log10": [
            "typename __gnu_cxx::__enable_if<__is_integer<Tp>::__value, double>::__type",
            "(Tp x)",
        ],
        "lrintf32": ["long", "(_Float32 x)"],
        "pthread_setcanceltype": ["int", "(int type, int *oldtype)"],
        "hex": ["ios_base &", "(ios_base &base)"],
        "isnormal": ["bool", "(float x)"],
        "laguerref": ["float", "(unsigned int n, float x)"],
        "isspace_l": ["int", "(int, locale_t)"],
        "operator!=": [
            "bool",
            "(const std::lognormal_distribution<RealType> &d1, const std::lognormal_distribution<RealType> &d2)",
        ],
        "pthread_getattr_np": ["int", "(pthread_t th, pthread_attr_t *attr)"],
        "atanhf32": ["_Float32", "(_Float32 x)"],
        "operator^": [
            "_Expr<_BinClos<__bitwise_xor, std::_ValArray, std::_Constant, Tp, Tp>, typename __fun<__bitwise_xor, Tp>::result_type>",
            "(const valarray<Tp> &v, const typename valarray<Tp>::value_type &t)",
        ],
        "lexicographical_compare": [
            "bool",
            "(II1 first1, II1 last1, II2 first2, II2 last2, Compare comp)",
        ],
        "as_const": ["add_const_t<Tp> &", "(Tp &t)"],
        "modff64": ["_Float64", "(_Float64 x, _Float64 *iptr)"],
        "operator|": ["chars_format", "(chars_format lhs, chars_format rhs)"],
        "sched_getparam": ["int", "(__pid_t pid, struct sched_param *param)"],
        "mem_fun_ref": ["const_mem_fun_ref_t<Ret, Tp>", "(Ret (Tp::*f)() const)"],
        "fromfpxf": ["__intmax_t", "(float x, int round, unsigned int width)"],
        "floor": [
            "enable_if_t<__is_duration<ToDur>::value, time_point<Clock, ToDur>>",
            "<typename ToDur>(const time_point<Clock, Dur> &tp)",
        ],
        "a64l": ["long", "(const char *s)"],
        "operator!=": [
            "bool",
            "(const basic_string<CharT, Traits, Alloc> &lhs, const basic_string<CharT, Traits, Alloc> &rhs)",
        ],
        "getline": [
            "basic_istream<CharT, Traits> &",
            "(basic_istream<CharT, Traits> &&is, basic_string<CharT, Traits, Alloc> &str, CharT delim)",
        ],
        "wcscoll": ["int", "(const wchar_t *s1, const wchar_t *s2)"],
        "as_const": ["void", "(const Tp &&)"],
        "operator>": [
            "bool",
            "(const multimap<Key, Tp, Compare, Alloc> &x, const multimap<Key, Tp, Compare, Alloc> &y)",
        ],
        "stoull": [
            "unsigned long long",
            "(const string &str, size_t *idx = 0, int base = 10)",
        ],
        "operator^": ["_Ios_Openmode", "(_Ios_Openmode a, _Ios_Openmode b)"],
        "atomic_fetch_sub_explicit": [
            "ITp",
            "(volatile atomic<ITp> *a, __atomic_diff_t<ITp> i, memory_order m)",
        ],
        "operator<<": [
            "std::basic_ostream<CharT, Traits> &",
            "(std::basic_ostream<CharT, Traits> &os, const mersenne_twister_engine<UIntType, w, n, m, r, a, u, d, s, b, t, c, l, f> &x)",
        ],
        "mem_fun_ref": [
            "const_mem_fun1_ref_t<Ret, Tp, Arg>",
            "(Ret (Tp::*f)(Arg) const)",
        ],
        "operator!=": ["bool", "(const stack<Tp, Seq> &x, const stack<Tp, Seq> &y)"],
        "ngettext": [
            "char *",
            "(const char *msgid1, const char *msgid2, unsigned long n)",
        ],
        "to_chars": [
            "to_chars_result",
            "(char *first, char *last, unsigned short value, int base)",
        ],
        "operator!=": [
            "bool",
            "(const std::shuffle_order_engine<RandomNumberEngine, k> &lhs, const std::shuffle_order_engine<RandomNumberEngine, k> &rhs)",
        ],
        "log1pf": ["float", "(float x)"],
        "operator new": [
            "void *",
            "(std::size_t, std::align_val_t, const std::nothrow_t &)",
        ],
        "select": [
            "int",
            "(int nfds, fd_set *__restrict readfds, fd_set *__restrict writefds, fd_set *__restrict exceptfds, struct timeval *__restrict timeout)",
        ],
        "fmaxmagf64": ["_Float64", "(_Float64 x, _Float64 y)"],
        "fmodl": ["long double", "(long double x, long double y)"],
        "operator|": [
            "_Expr<_BinClos<struct std::__bitwise_or, std::_Expr, std::_ValArray, Dom, typename Dom::value_type>, typename __fun<struct std::__bitwise_or, typename Dom::value_type>::result_type>",
            "(const _Expr<Dom, typename Dom::value_type> &e, const valarray<typename Dom::value_type> &v)",
        ],
        "operator" "s": ["chrono::seconds", "<char Digits>()"],
        "atomic_fetch_add_explicit": [
            "ITp",
            "(volatile atomic<ITp> *a, __atomic_diff_t<ITp> i, memory_order m)",
        ],
        "scalbn": [
            "typename __gnu_cxx::__enable_if<__is_integer<Tp>::__value, double>::__type",
            "(Tp x, int ex)",
        ],
        "next_permutation": ["bool", "(BIter, BIter, Compare)"],
        "fmax": ["long double", "(long double x, long double y)"],
        "fcloseall": ["int", "()"],
        "absolute": ["path", "(const path &p)"],
        "erfcf64": ["_Float64", "(_Float64)"],
        "cyl_bessel_i": [
            "typename __gnu_cxx::__promote_2<Tpnu, Tp>::__type",
            "(Tpnu nu, Tp x)",
        ],
        "space": ["space_info", "(const path &p)"],
        "pthread_cond_timedwait": [
            "int",
            "(pthread_cond_t *__restrict cond, pthread_mutex_t *__restrict mutex, const struct timespec *__restrict abstime)",
        ],
        "operator%": [
            "_Expr<_BinClos<struct std::__modulus, std::_ValArray, std::_Expr, typename Dom::value_type, Dom>, typename __fun<struct std::__modulus, typename Dom::value_type>::result_type>",
            "(const valarray<typename Dom::value_type> &v, const _Expr<Dom, typename Dom::value_type> &e)",
        ],
        "rintf32x": ["_Float32x", "(_Float32x x)"],
        "operator>=": [
            "bool",
            "(const set<Key, Compare, Alloc> &x, const set<Key, Compare, Alloc> &y)",
        ],
        "regex_match": [
            "bool",
            "(const basic_string<Ch_type, Ch_traits, Ch_alloc> &s, match_results<typename basic_string<Ch_type, Ch_traits, Ch_alloc>::const_iterator, Alloc> &m, const basic_regex<Ch_type, Rx_traits> &re, regex_constants::match_flag_type flags = regex_constants::match_default)",
        ],
        "operator!=": ["bool", "(const Tp &x, const Tp &y)"],
        "timer_getoverrun": ["int", "(timer_t timerid)"],
        "operator&&": [
            "_Expr<_BinClos<struct std::__logical_and, std::_Expr, std::_Constant, Dom, typename Dom::value_type>, typename __fun<struct std::__logical_and, typename Dom::value_type>::result_type>",
            "(const _Expr<Dom, typename Dom::value_type> &v, const typename Dom::value_type &t)",
        ],
        "nearbyint": ["float", "(float x)"],
        "transform": ["OIter", "(IIter, IIter, OIter, UnaryOperation)"],
        "operator>=": ["bool", "(const optional<Tp> &, nullopt_t)"],
        "pthread_attr_setstack": [
            "int",
            "(pthread_attr_t *attr, void *stackaddr, size_t stacksize)",
        ],
        "strstr": ["const char *", "(const char *haystack, const char *needle)"],
        "swap_ranges": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, ForwardIterator2>",
            "(ExecutionPolicy &&exec, ForwardIterator1 first1, ForwardIterator1 last1, ForwardIterator2 first2)",
        ],
        "comp_ellint_1": ["typename __gnu_cxx::__promote<Tp>::__type", "(Tp k)"],
        "beta": ["typename __gnu_cxx::__promote_2<Tpa, Tpb>::__type", "(Tpa a, Tpb b)"],
        "asinh": ["long double", "(long double x)"],
        "ffsl": ["int", "(long l)"],
        "operator&=": ["byte &", "(byte &l, byte r)"],
        "wcschrnul": ["wchar_t *", "(const wchar_t *s, wchar_t wc)"],
        "prev_permutation": ["bool", "(BIter, BIter, Compare)"],
        "create_directory": ["bool", "(const path &p)"],
        "dysize": ["int", "(int year)"],
        "mkstemps": ["int", "(char *template, int suffixlen)"],
        "is_sorted": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, bool>",
            "(ExecutionPolicy &&exec, ForwardIterator first, ForwardIterator last)",
        ],
        "hypotf": ["float", "(float x, float y)"],
        "exp2": ["double", "(double x)"],
        "sigstack": ["int", "(struct sigstack *ss, struct sigstack *oss)"],
        "reduce": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, Tp>",
            "(ExecutionPolicy &&exec, ForwardIterator first, ForwardIterator last, Tp init)",
        ],
        "operator>": [
            "_Expr<_BinClos<__greater, std::_ValArray, std::_ValArray, Tp, Tp>, typename __fun<__greater, Tp>::result_type>",
            "(const valarray<Tp> &v, const valarray<Tp> &w)",
        ],
        "operator||": [
            "_Expr<_BinClos<struct std::__logical_or, std::_Expr, std::_Expr, Dom1, Dom2>, typename __fun<struct std::__logical_or, typename Dom1::value_type>::result_type>",
            "(const _Expr<Dom1, typename Dom1::value_type> &v, const _Expr<Dom2, typename Dom2::value_type> &w)",
        ],
        "uninitialized_copy": [
            "ForwardIterator",
            "(InputIterator first, InputIterator last, ForwardIterator result)",
        ],
        "wcstol_l": [
            "long",
            "(const wchar_t *__restrict nptr, wchar_t **__restrict endptr, int base, locale_t loc)",
        ],
        "asin": [
            "_Expr<_UnClos<struct std::_Asin, std::_ValArray, Tp>, Tp>",
            "(const valarray<Tp> &v)",
        ],
        "modff32x": ["_Float32x", "(_Float32x x, _Float32x *iptr)"],
        "operator>": ["bool", "(const deque<Tp, Alloc> &x, const deque<Tp, Alloc> &y)"],
        "qsort": [
            "void",
            "(void *base, size_t nmemb, size_t size, __compar_fn_t compar)",
        ],
        "atan2f": ["float", "(float y, float x)"],
        "tzset": ["void", "()"],
        "copysign": ["double", "(double x, double y)"],
        "ferror_unlocked": ["int", "(FILE *stream)"],
        "operator<": [
            "bool",
            "(const forward_list<Tp, Alloc> &lx, const forward_list<Tp, Alloc> &ly)",
        ],
        "fminmagl": ["long double", "(long double x, long double y)"],
        "operator==": [
            "bool",
            "(const polymorphic_allocator<Tp1> &a, const polymorphic_allocator<Tp2> &b)",
        ],
        "erfcf32": ["_Float32", "(_Float32)"],
        "cosf": ["float", "(float x)"],
        "operator>": ["bool", "(nullptr_t, const __shared_ptr<Tp, Lp> &a)"],
        "is_block_file": ["bool", "(file_status s)"],
        "canonical": ["path", "(const path &p, error_code &ec)"],
        "roundeven": ["double", "(double x)"],
        "remove_if": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, ForwardIterator>",
            "(ExecutionPolicy &&exec, ForwardIterator first, ForwardIterator last, UnaryPredicate pred)",
        ],
        "operator|": [
            "_Expr<_BinClos<__bitwise_or, std::_ValArray, std::_Constant, Tp, Tp>, typename __fun<__bitwise_or, Tp>::result_type>",
            "(const valarray<Tp> &v, const typename valarray<Tp>::value_type &t)",
        ],
        "ungetwc": ["wint_t", "(wint_t wc, __FILE *stream)"],
        "cref": ["void", "(const Tp &&)"],
        "operator<<": [
            "basic_ostream<CharT, Traits> &",
            "(basic_ostream<CharT, Traits> &out, char c)",
        ],
        "atomic_fetch_and": ["ITp", "(__atomic_base<ITp> *a, __atomic_val_t<ITp> i)"],
        "operator>=": ["bool", "(const unique_ptr<Tp, Dp> &x, nullptr_t)"],
        "fgetws": [
            "wchar_t *",
            "(wchar_t *__restrict ws, int n, __FILE *__restrict stream)",
        ],
        "clock_nanosleep": [
            "int",
            "(clockid_t clock_id, int flags, const struct timespec *req, struct timespec *rem)",
        ],
        "log1pf32x": ["_Float32x", "(_Float32x x)"],
        "wmemchr": ["wchar_t *", "(wchar_t *p, wchar_t c, size_t n)"],
        "erfcl": ["long double", "(long double)"],
        "dirfd": ["int", "(DIR *dirp)"],
        "operator==": [
            "bool",
            "(const weibull_distribution<RealType> &d1, const weibull_distribution<RealType> &d2)",
        ],
        "srandom_r": ["int", "(unsigned int seed, struct random_data *buf)"],
        "operator*": [
            "_Expr<_BinClos<struct std::__multiplies, std::_Constant, std::_Expr, typename Dom::value_type, Dom>, typename __fun<struct std::__multiplies, typename Dom::value_type>::result_type>",
            "(const typename Dom::value_type &t, const _Expr<Dom, typename Dom::value_type> &v)",
        ],
        "ynf64": ["_Float64", "(int, _Float64)"],
        "operator<<": [
            "_Expr<_BinClos<struct std::__shift_left, std::_Expr, std::_Constant, Dom, typename Dom::value_type>, typename __fun<struct std::__shift_left, typename Dom::value_type>::result_type>",
            "(const _Expr<Dom, typename Dom::value_type> &v, const typename Dom::value_type &t)",
        ],
        "fputs": ["int", "(const char *__restrict s, FILE *__restrict stream)"],
        "sincosf": ["void", "(float x, float *sinx, float *cosx)"],
        "permissions": [
            "void",
            "(const path &p, perms prms, perm_options opts = perm_options::replace)",
        ],
        "strchr": ["char *", "(char *s, int c)"],
        "operator+": [
            "basic_string<CharT, Traits, Alloc>",
            "(const basic_string<CharT, Traits, Alloc> &lhs, basic_string<CharT, Traits, Alloc> &&rhs)",
        ],
        "operator<": ["bool", "(const queue<Tp, Seq> &x, const queue<Tp, Seq> &y)"],
        "f32subf64": ["_Float32", "(_Float64 x, _Float64 y)"],
        "pthread_sigqueue": [
            "int",
            "(pthread_t threadid, int signo, const union sigval value)",
        ],
        "operator^=": ["byte &", "(byte &l, byte r)"],
        "operator>>": [
            "basic_istream<char, Traits> &",
            "(basic_istream<char, Traits> &in, unsigned char &c)",
        ],
        "operator>=": [
            "_Expr<_BinClos<struct std::__greater_equal, std::_Expr, std::_Expr, Dom1, Dom2>, typename __fun<struct std::__greater_equal, typename Dom1::value_type>::result_type>",
            "(const _Expr<Dom1, typename Dom1::value_type> &v, const _Expr<Dom2, typename Dom2::value_type> &w)",
        ],
        "fmax": ["typename __gnu_cxx::__promote_2<Tp, Up>::__type", "(Tp x, Up y)"],
        "fopen": [
            "FILE *",
            "(const char *__restrict filename, const char *__restrict modes)",
        ],
        "replace_copy": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, ForwardIterator2>",
            "(ExecutionPolicy &&exec, ForwardIterator1 first, ForwardIterator1 last, ForwardIterator2 result, const Tp &old_value, const Tp &new_value)",
        ],
        "totalordermagf64x": ["int", "(const _Float64x *x, const _Float64x *y)"],
        "align": ["void *", "(size_t align, size_t size, void *&ptr, size_t &space)"],
        "f32divf32x": ["_Float32", "(_Float32x x, _Float32x y)"],
        "max": ["Tp", "(initializer_list<Tp>)"],
        "vasprintf": [
            "int",
            "(char **__restrict ptr, const char *__restrict f, __va_list_tag *arg)",
        ],
        "fromfpf64": ["__intmax_t", "(_Float64 x, int round, unsigned int width)"],
        "putc": ["int", "(int c, FILE *stream)"],
        "operator!=": [
            "bool",
            "(const polymorphic_allocator<Tp1> &a, const polymorphic_allocator<Tp2> &b)",
        ],
        "qfcvt_r": [
            "int",
            "(long double value, int ndigit, int *__restrict decpt, int *__restrict sign, char *__restrict buf, size_t len)",
        ],
        "to_string": ["string", "(unsigned int val)"],
        "operator<=": [
            "bool",
            "(const forward_list<Tp, Alloc> &lx, const forward_list<Tp, Alloc> &ly)",
        ],
        "_obstack_begin": [
            "int",
            "(struct obstack *, int, int, void *(*)(long), void (*)(void *))",
        ],
        "getdate_r": [
            "int",
            "(const char *__restrict string, struct tm *__restrict resbufp)",
        ],
        "operator<<": [
            "basic_ostream<CharT, Traits> &",
            "(basic_ostream<CharT, Traits> &os, basic_string_view<CharT, Traits> str)",
        ],
        "logbf64": ["_Float64", "(_Float64 x)"],
        "operator>": [
            "bool",
            "(const move_iterator<Iterator> &x, const move_iterator<Iterator> &y)",
        ],
        "set_union": ["OIter", "(IIter1, IIter1, IIter2, IIter2, OIter)"],
        "atomic_fetch_and": [
            "ITp",
            "(volatile __atomic_base<ITp> *a, __atomic_val_t<ITp> i)",
        ],
        "y0f64": ["_Float64", "(_Float64)"],
        "exp2": [
            "typename __gnu_cxx::__enable_if<__is_integer<Tp>::__value, double>::__type",
            "(Tp x)",
        ],
        "strfromf64": [
            "int",
            "(char *dest, size_t size, const char *format, _Float64 f)",
        ],
        "sigisemptyset": ["int", "(const sigset_t *set)"],
        "stpcpy": ["char *", "(char *__restrict dest, const char *__restrict src)"],
        "upper_bound": ["FIter", "(FIter, FIter, const Tp &, Compare)"],
        "strrchr": ["char *", "(char *s, int c)"],
        "atomic_load": ["ITp", "(const volatile atomic<ITp> *a)"],
        "isdigit_l": ["int", "(int, locale_t)"],
        "isless": ["bool", "(double x, double y)"],
        "scalbnf": ["float", "(float x, int n)"],
        "acos": [
            "_Expr<_UnClos<struct std::_Acos, std::_Expr, Dom>, typename Dom::value_type>",
            "(const _Expr<Dom, typename Dom::value_type> &e)",
        ],
        "mismatch": [
            "pair<InputIterator1, InputIterator2>",
            "(InputIterator1 first1, InputIterator1 last1, InputIterator2 first2, InputIterator2 last2)",
        ],
        "get_deleter": ["Del *", "<typename Del>(const shared_ptr<Tp> &p)"],
        "gsignal": ["int", "(int sig)"],
        "fabsf64x": ["_Float64x", "(_Float64x x)"],
        "operator<": ["bool", "(nullptr_t, const shared_ptr<Tp> &a)"],
        "operator>=": [
            "bool",
            "(__type_identity_t<basic_string_view<CharT, Traits>> x, basic_string_view<CharT, Traits> y)",
        ],
        "sched_get_priority_max": ["int", "(int algorithm)"],
        "operator+": [
            "_Expr<_BinClos<__plus, std::_Constant, std::_ValArray, Tp, Tp>, typename __fun<__plus, Tp>::result_type>",
            "(const typename valarray<Tp>::value_type &t, const valarray<Tp> &v)",
        ],
        "find_if": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, ForwardIterator>",
            "(ExecutionPolicy &&exec, ForwardIterator first, ForwardIterator last, Predicate pred)",
        ],
        "operator<=": ["bool", "(const queue<Tp, Seq> &x, const queue<Tp, Seq> &y)"],
        "strerror": ["char *", "(int errnum)"],
        "duration_cast": [
            "__enable_if_is_duration<ToDur>",
            "<typename ToDur>(const duration<Rep, Period> &d)",
        ],
        "c32rtomb": [
            "size_t",
            "(char *__restrict s, char32_t c32, mbstate_t *__restrict ps)",
        ],
        "cyl_bessel_kl": ["long double", "(long double nu, long double x)"],
        "feholdexcept": ["int", "(fenv_t *envp)"],
        "fmaxmagf": ["float", "(float x, float y)"],
        "nextupf32": ["_Float32", "(_Float32 x)"],
        "transform_exclusive_scan": [
            "OutputIterator",
            "(InputIterator first, InputIterator last, OutputIterator result, Tp init, BinaryOperation binary_op, UnaryOperation unary_op)",
        ],
        "bsearch": [
            "void *",
            "(const void *key, const void *base, size_t nmemb, size_t size, __compar_fn_t compar)",
        ],
        "lrintf64": ["long", "(_Float64 x)"],
        "comp_ellint_2": ["typename __gnu_cxx::__promote<Tp>::__type", "(Tp k)"],
        "wcsftime_l": [
            "size_t",
            "(wchar_t *__restrict s, size_t maxsize, const wchar_t *__restrict format, const struct tm *__restrict tp, locale_t loc)",
        ],
        "set_terminate": ["terminate_handler", "(terminate_handler)"],
        "y0f32": ["_Float32", "(_Float32)"],
        "fmaxmag": ["double", "(double x, double y)"],
        "transform_reduce": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, Tp>",
            "(ExecutionPolicy &&exec, ForwardIterator1 first1, ForwardIterator1 last1, ForwardIterator2 first2, Tp init, BinaryOperation1 binary_op1, BinaryOperation2 binary_op2)",
        ],
        "to_chars": [
            "to_chars_result",
            "(char *first, char *last, unsigned __int128 value, int base)",
        ],
        "erff": ["float", "(float)"],
        "operator>=": ["bool", "(const array<Tp, Nm> &one, const array<Tp, Nm> &two)"],
        "operator+": [
            "basic_string<CharT, Traits, Alloc>",
            "(const CharT *lhs, basic_string<CharT, Traits, Alloc> &&rhs)",
        ],
        "pthread_getspecific": ["void *", "(pthread_key_t key)"],
        "wmempcpy": [
            "wchar_t *",
            "(wchar_t *__restrict s1, const wchar_t *__restrict s2, size_t n)",
        ],
        "rintf": ["float", "(float x)"],
        "nextafterf64x": ["_Float64x", "(_Float64x x, _Float64x y)"],
        "tgammaf64": ["_Float64", "(_Float64)"],
        "operator>=": ["bool", "(const shared_ptr<Tp> &a, nullptr_t)"],
        "sqrt": ["complex<Tp>", "(const complex<Tp> &)"],
        "copy_if": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, ForwardIterator2>",
            "(ExecutionPolicy &&exec, ForwardIterator1 first, ForwardIterator1 last, ForwardIterator2 result, Predicate pred)",
        ],
        "dcgettext": [
            "char *",
            "(const char *domainname, const char *msgid, int category)",
        ],
        "operator~": ["_Ios_Iostate", "(_Ios_Iostate a)"],
        "truncf64": ["_Float64", "(_Float64 x)"],
        "remquof32": ["_Float32", "(_Float32 x, _Float32 y, int *quo)"],
        "internal": ["ios_base &", "(ios_base &base)"],
        "operator<=": ["bool", "(nullptr_t, const shared_ptr<Tp> &a)"],
        "operator/": [
            "typename common_type<Rep1, Rep2>::type",
            "(const duration<Rep1, Period1> &lhs, const duration<Rep2, Period2> &rhs)",
        ],
        "fadd": ["float", "(double x, double y)"],
        "strtof64x_l": [
            "_Float64x",
            "(const char *__restrict nptr, char **__restrict endptr, locale_t loc)",
        ],
        "reverse_copy": ["OIter", "(BIter, BIter, OIter)"],
        "destroy_at": ["void", "(Tp *location)"],
        "labs": ["long", "(long x)"],
        "memset": ["void *", "(void *s, int c, size_t n)"],
        "operator^=": [
            "directory_options &",
            "(directory_options &x, directory_options y)",
        ],
        "operator&": [
            "_Expr<_BinClos<struct std::__bitwise_and, std::_Expr, std::_Expr, Dom1, Dom2>, typename __fun<struct std::__bitwise_and, typename Dom1::value_type>::result_type>",
            "(const _Expr<Dom1, typename Dom1::value_type> &v, const _Expr<Dom2, typename Dom2::value_type> &w)",
        ],
        "make_error_code": ["error_code", "(errc)"],
        "log2f32x": ["_Float32x", "(_Float32x x)"],
        "swap": [
            "_Require<__not_<__is_tuple_like<Tp>>, is_move_constructible<Tp>, is_move_assignable<Tp>>",
            "(Tp &, Tp &)",
        ],
        "erfc": ["double", "(double)"],
        "ufromfpx": ["__uintmax_t", "(double x, int round, unsigned int width)"],
        "ynf64x": ["_Float64x", "(int, _Float64x)"],
        "addressof": ["const Tp *", "(const Tp &&)"],
        "ufromfpf32": ["__uintmax_t", "(_Float32 x, int round, unsigned int width)"],
        "next_permutation": ["bool", "(BIter, BIter)"],
        "cos": [
            "_Expr<_UnClos<struct std::_Cos, std::_ValArray, Tp>, Tp>",
            "(const valarray<Tp> &v)",
        ],
        "fma": [
            "typename __gnu_cxx::__promote_3<Tp, Up, Vp>::__type",
            "(Tp x, Up y, Vp z)",
        ],
        "operator==": [
            "bool",
            "(const duration<Rep1, Period1> &lhs, const duration<Rep2, Period2> &rhs)",
        ],
        "partial_sort": ["void", "(RAIter, RAIter, RAIter)"],
        "hypot": [
            "typename __gnu_cxx::__promote_3<Tp, Up, Vp>::__type",
            "(Tp x, Up y, Vp z)",
        ],
        "fmodf32x": ["_Float32x", "(_Float32x x, _Float32x y)"],
        "wcscat": [
            "wchar_t *",
            "(wchar_t *__restrict dest, const wchar_t *__restrict src)",
        ],
        "operator^": ["byte", "(byte l, byte r)"],
        "fileno": ["int", "(FILE *stream)"],
        "operator|": ["bitset<Nb>", "(const bitset<Nb> &x, const bitset<Nb> &y)"],
        "logbl": ["long double", "(long double x)"],
        "mbstowcs": [
            "size_t",
            "(wchar_t *__restrict pwcs, const char *__restrict s, size_t n)",
        ],
        "operator==": [
            "bool",
            "(const cauchy_distribution<RealType> &d1, const cauchy_distribution<RealType> &d2)",
        ],
        "iostream_category": ["const error_category &", "()"],
        "norm": ["typename __gnu_cxx::__promote<Tp>::__type", "(Tp x)"],
        "abs": ["float", "(float x)"],
        "ellint_3": [
            "typename __gnu_cxx::__promote_3<Tp, Tpn, Tpp>::__type",
            "(Tp k, Tpn nu, Tpp phi)",
        ],
        "at_quick_exit": ["int", "(void (*func)())"],
        "operator>>": [
            "std::basic_istream<CharT, Traits> &",
            "(std::basic_istream<CharT, Traits> &is, path &p)",
        ],
        "ceil": ["long double", "(long double x)"],
        "operator==": ["bool", "(const error_code &lhs, const error_condition &rhs)"],
        "fputc": ["int", "(int c, FILE *stream)"],
        "operator==": ["bool", "(const optional<Tp> &lhs, nullopt_t)"],
        "file_size": ["uintmax_t", "(const path &, error_code &)"],
        "operator!=": [
            "bool",
            "(const _Bit_iterator_base &x, const _Bit_iterator_base &y)",
        ],
        "swap": [
            "void",
            "(basic_stringstream<CharT, Traits, Allocator> &x, basic_stringstream<CharT, Traits, Allocator> &y)",
        ],
        "replace_if": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, void>",
            "(ExecutionPolicy &&exec, ForwardIterator first, ForwardIterator last, UnaryPredicate pred, const Tp &new_value)",
        ],
        "prev_permutation": ["bool", "(BIter, BIter)"],
        "operator<": [
            "bool",
            "(const _Self &x, const _Deque_iterator<Tp, RefR, PtrR> &y)",
        ],
        "operator+": [
            "basic_string<CharT, Traits, Alloc>",
            "(const CharT *lhs, const basic_string<CharT, Traits, Alloc> &rhs)",
        ],
        "operator^=": ["chars_format &", "(chars_format &lhs, chars_format rhs)"],
        "tmpnam_r": ["char *", "(char *s)"],
        "operator<": ["bool", "(thread::id x, thread::id y)"],
        "sqrtf64x": ["_Float64x", "(_Float64x x)"],
        "count_if": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, typename iterator_traits<ForwardIterator>::difference_type>",
            "(ExecutionPolicy &&exec, ForwardIterator first, ForwardIterator last, Predicate pred)",
        ],
        "tanf32x": ["_Float32x", "(_Float32x x)"],
        "operator!=": [
            "bool",
            "(const duration<Rep1, Period1> &lhs, const duration<Rep2, Period2> &rhs)",
        ],
        "is_other": ["bool", "(const path &p, error_code &ec)"],
        "destroy_n": ["ForwardIterator", "(ForwardIterator first, Size count)"],
        "qecvt": [
            "char *",
            "(long double value, int ndigit, int *__restrict decpt, int *__restrict sign)",
        ],
        "operator^": [
            "_Expr<_BinClos<struct std::__bitwise_xor, std::_Constant, std::_Expr, typename Dom::value_type, Dom>, typename __fun<struct std::__bitwise_xor, typename Dom::value_type>::result_type>",
            "(const typename Dom::value_type &t, const _Expr<Dom, typename Dom::value_type> &v)",
        ],
        "tanh": [
            "_Expr<_UnClos<struct std::_Tanh, std::_Expr, Dom>, typename Dom::value_type>",
            "(const _Expr<Dom, typename Dom::value_type> &e)",
        ],
        "strfroml": [
            "int",
            "(char *dest, size_t size, const char *format, long double f)",
        ],
        "pthread_cond_broadcast": ["int", "(pthread_cond_t *cond)"],
        "remainderf32x": ["_Float32x", "(_Float32x x, _Float32x y)"],
        "operator+": [
            "reverse_iterator<Iterator>",
            "(typename reverse_iterator<Iterator>::difference_type n, const reverse_iterator<Iterator> &x)",
        ],
        "operator^=": ["perms &", "(perms &x, perms y)"],
        "operator<<": [
            "std::basic_ostream<CharT, Traits> &",
            "(std::basic_ostream<CharT, Traits> &os, const subtract_with_carry_engine<UIntType, w, s, r> &x)",
        ],
        "pthread_attr_getaffinity_np": [
            "int",
            "(const pthread_attr_t *attr, size_t cpusetsize, cpu_set_t *cpuset)",
        ],
        "ptr_fun": ["pointer_to_unary_function<Arg, Result>", "(Result (*x)(Arg))"],
        "erand48": ["double", "(unsigned short *xsubi)"],
        "jrand48_r": [
            "int",
            "(unsigned short *xsubi, struct drand48_data *__restrict buffer, long *__restrict result)",
        ],
        "wcstoul_l": [
            "unsigned long",
            "(const wchar_t *__restrict nptr, wchar_t **__restrict endptr, int base, locale_t loc)",
        ],
        "killpg": ["int", "(__pid_t pgrp, int sig)"],
        "pow": [
            "std::complex<typename __gnu_cxx::__promote_2<Tp, Up>::__type>",
            "(const Tp &x, const std::complex<Up> &y)",
        ],
        "truncf64x": ["_Float64x", "(_Float64x x)"],
        "declare_no_pointers": ["void", "(char *, size_t)"],
        "sigaltstack": [
            "int",
            "(const stack_t *__restrict ss, stack_t *__restrict oss)",
        ],
        "swap": ["void", "(shared_lock<Mutex> &x, shared_lock<Mutex> &y)"],
        "replace_copy": ["OIter", "(IIter, IIter, OIter, const Tp &, const Tp &)"],
        "localtime_r": [
            "struct tm *",
            "(const time_t *__restrict timer, struct tm *__restrict tp)",
        ],
        "operator<": [
            "bool",
            "(const unique_ptr<Tp, Dp> &x, const unique_ptr<Up, Ep> &y)",
        ],
        "ptr_fun": [
            "pointer_to_binary_function<Arg1, Arg2, Result>",
            "(Result (*x)(Arg1, Arg2))",
        ],
        "canonicalize": ["int", "(double *cx, const double *x)"],
        "operator"
        "sv": ["basic_string_view<char32_t>", "(const char32_t *str, size_t len)"],
        "operator>=": [
            "bool",
            "(const typename iterator_traits<Bi_iter>::value_type *lhs, const sub_match<Bi_iter> &rhs)",
        ],
        "operator!=": ["bool", "(const error_code &lhs, const error_condition &rhs)"],
        "to_chars": [
            "to_chars_result",
            "(char *first, char *last, long value, int base)",
        ],
        "operator!=": ["bool", "(const optional<Tp> &lhs, nullopt_t)"],
        "iswblank": ["int", "(wint_t wc)"],
        "operator<<": [
            "basic_ostream<CharT, Traits> &",
            "(basic_ostream<CharT, Traits> &out, const char *s)",
        ],
        "rbegin": ["reverse_iterator<const Tp *>", "(initializer_list<Tp> il)"],
        "operator>": [
            "__optional_gt_t<Tp, Up>",
            "(const optional<Tp> &lhs, const optional<Up> &rhs)",
        ],
        "clock": ["clock_t", "()"],
        "atomic_store_explicit": [
            "void",
            "(shared_ptr<Tp> *p, shared_ptr<Tp> r, memory_order)",
        ],
        "const_pointer_cast": [
            "shared_ptr<Tp>",
            "<typename Tp>(const shared_ptr<Up> &r)",
        ],
        "hypot": ["long double", "(long double x, long double y)"],
        "to_wstring": ["wstring", "(float val)"],
        "operator==": ["bool", "(const error_code &lhs, const error_code &rhs)"],
        "versionsort": ["int", "(const struct dirent **e1, const struct dirent **e2)"],
        "operator<=": [
            "bool",
            "(const _Self &x, const _Deque_iterator<Tp, RefR, PtrR> &y)",
        ],
        "setenv": ["int", "(const char *name, const char *value, int replace)"],
        "gcvt": ["char *", "(double value, int ndigit, char *buf)"],
        "operator<=": ["bool", "(thread::id x, thread::id y)"],
        "pow": [
            "std::complex<typename __gnu_cxx::__promote_2<Tp, Up>::__type>",
            "(const std::complex<Tp> &x, const Up &y)",
        ],
        "operator>": [
            "_Expr<_BinClos<struct std::__greater, std::_ValArray, std::_Expr, typename Dom::value_type, Dom>, typename __fun<struct std::__greater, typename Dom::value_type>::result_type>",
            "(const valarray<typename Dom::value_type> &v, const _Expr<Dom, typename Dom::value_type> &e)",
        ],
        "fmaxf32": ["_Float32", "(_Float32 x, _Float32 y)"],
        "ends": [
            "basic_ostream<CharT, Traits> &",
            "(basic_ostream<CharT, Traits> &os)",
        ],
        "lexicographical_compare": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, bool>",
            "(ExecutionPolicy &&exec, ForwardIterator1 first1, ForwardIterator1 last1, ForwardIterator2 first2, ForwardIterator2 last2)",
        ],
        "atomic_compare_exchange_weak": [
            "bool",
            "(__shared_ptr<Tp, Lp> *p, __shared_ptr<Tp, Lp> *v, __shared_ptr<Tp, Lp> w)",
        ],
        "pthread_getname_np": [
            "int",
            "(pthread_t target_thread, char *buf, size_t buflen)",
        ],
        "operator<": [
            "_Expr<_BinClos<struct std::__less, std::_ValArray, std::_Expr, typename Dom::value_type, Dom>, typename __fun<struct std::__less, typename Dom::value_type>::result_type>",
            "(const valarray<typename Dom::value_type> &v, const _Expr<Dom, typename Dom::value_type> &e)",
        ],
        "lrint": ["long", "(float x)"],
        "to_wstring": ["wstring", "(int val)"],
        "operator==": [
            "bool",
            "(const multimap<Key, Tp, Compare, Alloc> &x, const multimap<Key, Tp, Compare, Alloc> &y)",
        ],
        "operator<": [
            "bool",
            "(const error_condition &lhs, const error_condition &rhs)",
        ],
        "canonicalizef64x": ["int", "(_Float64x *cx, const _Float64x *x)"],
        "operator>>": [
            "_Expr<_BinClos<struct std::__shift_right, std::_Constant, std::_Expr, typename Dom::value_type, Dom>, typename __fun<struct std::__shift_right, typename Dom::value_type>::result_type>",
            "(const typename Dom::value_type &t, const _Expr<Dom, typename Dom::value_type> &v)",
        ],
        "llrintf": ["long long", "(float x)"],
        "sin": ["float", "(float x)"],
        "nanf32x": ["_Float32x", "(const char *tagb)"],
        "abs": ["long long", "(long long x)"],
        "stod": ["double", "(const string &str, size_t *idx = 0)"],
        "expm1": ["long double", "(long double x)"],
        "operator new": ["void *", "(std::size_t, void *p)"],
        "isxdigit": ["int", "(int)"],
        "grantpt": ["int", "(int fd)"],
        "operator>=": ["bool", "(const list<Tp, Alloc> &x, const list<Tp, Alloc> &y)"],
        "coshl": ["long double", "(long double x)"],
        "fgetpos64": ["int", "(FILE *__restrict stream, fpos64_t *__restrict pos)"],
        "nextafterf32": ["_Float32", "(_Float32 x, _Float32 y)"],
        "fdopen": ["FILE *", "(int fd, const char *modes)"],
        "pthread_barrier_wait": ["int", "(pthread_barrier_t *barrier)"],
        "lgammaf32x": ["_Float32x", "(_Float32x)"],
        "totalorderf64": ["int", "(const _Float64 *x, const _Float64 *y)"],
        "asin": ["long double", "(long double x)"],
        "operator+": [
            "_Expr<_BinClos<struct std::__plus, std::_Expr, std::_ValArray, Dom, typename Dom::value_type>, typename __fun<struct std::__plus, typename Dom::value_type>::result_type>",
            "(const _Expr<Dom, typename Dom::value_type> &e, const valarray<typename Dom::value_type> &v)",
        ],
        "wcstof64x": [
            "_Float64x",
            "(const wchar_t *__restrict nptr, wchar_t **__restrict endptr)",
        ],
        "hypotf32x": ["_Float32x", "(_Float32x x, _Float32x y)"],
        "sinh": ["double", "(double x)"],
        "isnormal": ["bool", "(long double x)"],
        "operator!=": ["bool", "(const error_code &lhs, const error_code &rhs)"],
        "getchar": ["int", "()"],
        "equal": [
            "bool",
            "(IIter1 first1, IIter1 last1, IIter2 first2, IIter2 last2, BinaryPredicate binary_pred)",
        ],
        "min": ["const Tp &", "(const Tp &a, const Tp &b, Compare comp)"],
        "stoi": ["int", "(const wstring &str, size_t *idx = 0, int base = 10)"],
        "toupper": ["CharT", "(CharT, const locale &)"],
        "lgamma": ["double", "(double)"],
        "transform_reduce": [
            "Tp",
            "(InputIterator first, InputIterator last, Tp init, BinaryOperation binary_op, UnaryOperation unary_op)",
        ],
        "operator!=": [
            "bool",
            "(const multimap<Key, Tp, Compare, Alloc> &x, const multimap<Key, Tp, Compare, Alloc> &y)",
        ],
        "generate_n": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, ForwardIterator>",
            "(ExecutionPolicy &&exec, ForwardIterator first, Size count, Generator g)",
        ],
        "erff64x": ["_Float64x", "(_Float64x)"],
        "operator<<": [
            "basic_ostream<Ch_type, Ch_traits> &",
            "(basic_ostream<Ch_type, Ch_traits> &os, const sub_match<Bi_iter> &m)",
        ],
        "any_of": ["bool", "(IIter, IIter, Predicate)"],
        "atomic_fetch_and_explicit": [
            "ITp",
            "(__atomic_base<ITp> *a, __atomic_val_t<ITp> i, memory_order m)",
        ],
        "atomic_flag_clear": ["void", "(volatile atomic_flag *a)"],
        "operator"
        "us": ["chrono::duration<long double, micro>", "(long double usecs)"],
        "operator|": ["byte", "(byte l, byte r)"],
        "operator-": ["iterator", "(const iterator &x, difference_type n)"],
        "isinf": ["bool", "(double x)"],
        "make_error_condition": ["error_condition", "(io_errc e)"],
        "signbit": ["bool", "(double x)"],
        "random": ["long", "()"],
        "remove_copy": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, ForwardIterator2>",
            "(ExecutionPolicy &&exec, ForwardIterator1 first, ForwardIterator1 last, ForwardIterator2 result, const Tp &value)",
        ],
        "operator!=": [
            "bool",
            "(const istream_iterator<Tp, CharT, Traits, Dist> &x, const istream_iterator<Tp, CharT, Traits, Dist> &y)",
        ],
        "current_path": ["path", "(error_code &ec)"],
        "dec": ["ios_base &", "(ios_base &base)"],
        "erff32x": ["_Float32x", "(_Float32x)"],
        "gcd": ["common_type_t<Mn, Nn>", "(Mn m, Nn n)"],
        "j0f32x": ["_Float32x", "(_Float32x)"],
        "seed48_r": ["int", "(unsigned short *seed16v, struct drand48_data *buffer)"],
        "lcm": ["common_type_t<Mn, Nn>", "(Mn m, Nn n)"],
        "uninitialized_default_construct": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, void>",
            "(ExecutionPolicy &&exec, ForwardIterator first, ForwardIterator last)",
        ],
        "sighold": ["int", "(int sig)"],
        "erf": ["float", "(float x)"],
        "explicit_bzero": ["void", "(void *s, size_t n)"],
        "timer_create": [
            "int",
            "(clockid_t clock_id, struct sigevent *__restrict evp, timer_t *__restrict timerid)",
        ],
        "fdopendir": ["DIR *", "(int fd)"],
        "none_of": ["bool", "(IIter, IIter, Predicate)"],
        "roundf64": ["_Float64", "(_Float64 x)"],
        "cbegin": ["decltype(std::begin(cont))", "(const Container &cont)"],
        "operator!=": [
            "_Expr<_BinClos<struct std::__not_equal_to, std::_Expr, std::_Expr, Dom1, Dom2>, typename __fun<struct std::__not_equal_to, typename Dom1::value_type>::result_type>",
            "(const _Expr<Dom1, typename Dom1::value_type> &v, const _Expr<Dom2, typename Dom2::value_type> &w)",
        ],
        "fdim": ["double", "(double x, double y)"],
        "log": ["float", "(float x)"],
        "operator>": [
            "_Expr<_BinClos<struct std::__greater, std::_Expr, std::_Constant, Dom, typename Dom::value_type>, typename __fun<struct std::__greater, typename Dom::value_type>::result_type>",
            "(const _Expr<Dom, typename Dom::value_type> &v, const typename Dom::value_type &t)",
        ],
        "move": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, ForwardIterator2>",
            "(ExecutionPolicy &&exec, ForwardIterator1 first, ForwardIterator1 last, ForwardIterator2 d_first)",
        ],
        "tolower": ["CharT", "(CharT, const locale &)"],
        "adjacent_find": ["FIter", "(FIter, FIter, BinaryPredicate)"],
        "sincosf32x": ["void", "(_Float32x x, _Float32x *sinx, _Float32x *cosx)"],
        "pow": [
            "_Expr<_BinClos<struct std::_Pow, std::_Expr, std::_Constant, Dom, typename Dom::value_type>, typename Dom::value_type>",
            "(const _Expr<Dom, typename Dom::value_type> &e, const typename Dom::value_type &t)",
        ],
        "operator>": [
            "bool",
            "(const forward_list<Tp, Alloc> &lx, const forward_list<Tp, Alloc> &ly)",
        ],
        "operator==": [
            "bool",
            "(const deque<Tp, Alloc> &x, const deque<Tp, Alloc> &y)",
        ],
        "newlocale": [
            "locale_t",
            "(int category_mask, const char *locale, locale_t base)",
        ],
        "operator==": ["bool", "(const fpos<StateT> &lhs, const fpos<StateT> &rhs)"],
        "operator<<": [
            "basic_ostream<CharT, Traits> &",
            "(basic_ostream<CharT, Traits> &os, _Setiosflags f)",
        ],
        "operator+": [
            "basic_string<CharT, Traits, Alloc>",
            "(basic_string<CharT, Traits, Alloc> &&lhs, basic_string<CharT, Traits, Alloc> &&rhs)",
        ],
        "strftime": [
            "size_t",
            "(char *__restrict s, size_t maxsize, const char *__restrict format, const struct tm *__restrict tp)",
        ],
        "wcstold_l": [
            "long double",
            "(const wchar_t *__restrict nptr, wchar_t **__restrict endptr, locale_t loc)",
        ],
        "atan": ["long double", "(long double x)"],
        "y1l": ["long double", "(long double)"],
        "showpos": ["ios_base &", "(ios_base &base)"],
        "f32xdivf64x": ["_Float32x", "(_Float64x x, _Float64x y)"],
        "atomic_fetch_or_explicit": [
            "ITp",
            "(volatile __atomic_base<ITp> *a, __atomic_val_t<ITp> i, memory_order m)",
        ],
        "operator%": [
            "_Expr<_BinClos<__modulus, std::_ValArray, std::_ValArray, Tp, Tp>, typename __fun<__modulus, Tp>::result_type>",
            "(const valarray<Tp> &v, const valarray<Tp> &w)",
        ],
        "tanh": [
            "typename __gnu_cxx::__enable_if<__is_integer<Tp>::__value, double>::__type",
            "(Tp x)",
        ],
        "operator<": ["bool", "(nullptr_t, const unique_ptr<Tp, Dp> &x)"],
        "oct": ["ios_base &", "(ios_base &base)"],
        "find_end": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, ForwardIterator1>",
            "(ExecutionPolicy &&exec, ForwardIterator1 first, ForwardIterator1 last, ForwardIterator2 s_first, ForwardIterator2 s_last)",
        ],
        "pthread_testcancel": ["void", "()"],
        "lgammaf64_r": ["_Float64", "(_Float64, int *signgamp)"],
        "sinh": [
            "typename __gnu_cxx::__enable_if<__is_integer<Tp>::__value, double>::__type",
            "(Tp x)",
        ],
        "operator==": ["bool", "(const __shared_ptr<Tp, Lp> &a, nullptr_t)"],
        "operator|": [
            "_Expr<_BinClos<struct std::__bitwise_or, std::_Expr, std::_Constant, Dom, typename Dom::value_type>, typename __fun<struct std::__bitwise_or, typename Dom::value_type>::result_type>",
            "(const _Expr<Dom, typename Dom::value_type> &v, const typename Dom::value_type &t)",
        ],
        "y1": ["double", "(double)"],
        "floorf32": ["_Float32", "(_Float32 x)"],
        "lrint": ["long", "(double x)"],
        "notify_all_at_thread_exit": [
            "void",
            "(condition_variable &, unique_lock<mutex>)",
        ],
        "sqrt": [
            "typename __gnu_cxx::__enable_if<__is_integer<Tp>::__value, double>::__type",
            "(Tp x)",
        ],
        "atanh": ["float", "(float x)"],
        "logb": [
            "typename __gnu_cxx::__enable_if<__is_integer<Tp>::__value, double>::__type",
            "(Tp x)",
        ],
        "operator<": ["bool", "(nullopt_t, const optional<Tp> &rhs)"],
        "operator==": [
            "bool",
            "(const piecewise_linear_distribution<RealType> &d1, const piecewise_linear_distribution<RealType> &d2)",
        ],
        "operator>>": [
            "_Expr<_BinClos<__shift_right, std::_ValArray, std::_Constant, Tp, Tp>, typename __fun<__shift_right, Tp>::result_type>",
            "(const valarray<Tp> &v, const typename valarray<Tp>::value_type &t)",
        ],
        "operator<": [
            "bool",
            "(const sub_match<Bi_iter> &lhs, const __sub_match_string<Bi_iter, Ch_traits, Ch_alloc> &rhs)",
        ],
        "swap": ["void", "(vector<Tp, Alloc> &x, vector<Tp, Alloc> &y)"],
        "operator<": [
            "bool",
            "(const multiset<Key, Compare, Alloc> &x, const multiset<Key, Compare, Alloc> &y)",
        ],
        "operator!=": [
            "bool",
            "(const deque<Tp, Alloc> &x, const deque<Tp, Alloc> &y)",
        ],
        "hypotf32": ["_Float32", "(_Float32 x, _Float32 y)"],
        "operator||": [
            "_Expr<_BinClos<struct std::__logical_or, std::_Constant, std::_Expr, typename Dom::value_type, Dom>, typename __fun<struct std::__logical_or, typename Dom::value_type>::result_type>",
            "(const typename Dom::value_type &t, const _Expr<Dom, typename Dom::value_type> &v)",
        ],
        "uninitialized_move": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, ForwardIterator>",
            "(ExecutionPolicy &&exec, InputIterator first, InputIterator last, ForwardIterator result)",
        ],
        "operator!=": ["bool", "(const fpos<StateT> &lhs, const fpos<StateT> &rhs)"],
        "rawmemchr": ["const void *", "(const void *s, int c)"],
        "towlower_l": ["wint_t", "(wint_t wc, locale_t locale)"],
        "tolower": ["int", "(int c)"],
        "putwchar_unlocked": ["wint_t", "(wchar_t wc)"],
        "wcstof": [
            "float",
            "(const wchar_t *__restrict nptr, wchar_t **__restrict endptr)",
        ],
        "log1p": [
            "typename __gnu_cxx::__enable_if<__is_integer<Tp>::__value, double>::__type",
            "(Tp x)",
        ],
        "pthread_attr_getinheritsched": [
            "int",
            "(const pthread_attr_t *__restrict attr, int *__restrict inherit)",
        ],
        "y0": ["double", "(double)"],
        "operator|": ["_Ios_Fmtflags", "(_Ios_Fmtflags a, _Ios_Fmtflags b)"],
        "ufromfpxf64x": ["__uintmax_t", "(_Float64x x, int round, unsigned int width)"],
        "operator<<": [
            "_Expr<_BinClos<struct std::__shift_left, std::_ValArray, std::_Expr, typename Dom::value_type, Dom>, typename __fun<struct std::__shift_left, typename Dom::value_type>::result_type>",
            "(const valarray<typename Dom::value_type> &v, const _Expr<Dom, typename Dom::value_type> &e)",
        ],
        "throw_with_nested": ["void", "(Tp &&t)"],
        "operator~": ["match_flag_type", "(match_flag_type a)"],
        "operator<=": ["bool", "(nullptr_t, const unique_ptr<Tp, Dp> &x)"],
        "operator!=": ["bool", "(const __shared_ptr<Tp, Lp> &a, nullptr_t)"],
        "ref": ["reference_wrapper<Tp>", "(reference_wrapper<Tp> t)"],
        "make_from_tuple": ["Tp", "<typename Tp>(Tuple &&t)"],
        "wcsncasecmp_l": [
            "int",
            "(const wchar_t *s1, const wchar_t *s2, size_t n, locale_t loc)",
        ],
        "nounitbuf": ["ios_base &", "(ios_base &base)"],
        "operator>": ["bool", "(nullptr_t, const shared_ptr<Tp> &a)"],
        "putchar_unlocked": ["int", "(int c)"],
        "operator<": [
            "bool",
            "(basic_string_view<CharT, Traits> x, __type_identity_t<basic_string_view<CharT, Traits>> y)",
        ],
        "pthread_once": [
            "int",
            "(pthread_once_t *once_control, void (*init_routine)())",
        ],
        "lround": [
            "typename __gnu_cxx::__enable_if<__is_integer<Tp>::__value, long>::__type",
            "(Tp x)",
        ],
        "operator|=": ["const _Ios_Openmode &", "(_Ios_Openmode &a, _Ios_Openmode b)"],
        "fmod": ["long double", "(long double x, long double y)"],
        "operator&": [
            "_Expr<_BinClos<struct std::__bitwise_and, std::_ValArray, std::_Expr, typename Dom::value_type, Dom>, typename __fun<struct std::__bitwise_and, typename Dom::value_type>::result_type>",
            "(const valarray<typename Dom::value_type> &v, const _Expr<Dom, typename Dom::value_type> &e)",
        ],
        "exclusive_scan": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, ForwardIterator2>",
            "(ExecutionPolicy &&exec, ForwardIterator1 first, ForwardIterator1 last, ForwardIterator2 result, Tp init)",
        ],
        "is_symlink": ["bool", "(file_status)"],
        "strtok_r": [
            "char *",
            "(char *__restrict s, const char *__restrict delim, char **__restrict save_ptr)",
        ],
        "operator<=": [
            "bool",
            "(const sub_match<Bi_iter> &lhs, const __sub_match_string<Bi_iter, Ch_traits, Ch_alloc> &rhs)",
        ],
        "equal": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, bool>",
            "(ExecutionPolicy &&exec, ForwardIterator1 first1, ForwardIterator1 last1, ForwardIterator2 first2, ForwardIterator2 last2, BinaryPredicate p)",
        ],
        "coshf32x": ["_Float32x", "(_Float32x x)"],
        "operator~": ["directory_options", "(directory_options x)"],
        "nextupl": ["long double", "(long double x)"],
        "operator==": [
            "bool",
            "(const binomial_distribution<IntType> &d1, const binomial_distribution<IntType> &d2)",
        ],
        "nextafter": ["float", "(float x, float y)"],
        "atanhf64x": ["_Float64x", "(_Float64x x)"],
        "atomic_flag_test_and_set_explicit": [
            "bool",
            "(atomic_flag *a, memory_order m)",
        ],
        "nearbyintf32x": ["_Float32x", "(_Float32x x)"],
        "wcswidth": ["int", "(const wchar_t *s, size_t n)"],
        "rename": ["void", "(const path &from, const path &to)"],
        "setpayloadsigf32x": ["int", "(_Float32x *x, _Float32x payload)"],
        "pthread_attr_init": ["int", "(pthread_attr_t *attr)"],
        "islessequal": ["bool", "(double x, double y)"],
        "wcsncpy": [
            "wchar_t *",
            "(wchar_t *__restrict dest, const wchar_t *__restrict src, size_t n)",
        ],
        "fabs": ["long double", "(long double x)"],
        "swap": ["void", "(deque<Tp, Alloc> &x, deque<Tp, Alloc> &y)"],
        "fflush_unlocked": ["int", "(FILE *stream)"],
        "operator<<": [
            "basic_ostream<CharT, Traits> &",
            "(basic_ostream<CharT, Traits> &os, const complex<Tp> &x)",
        ],
        "hermitef": ["float", "(unsigned int n, float x)"],
        "operator" "il": ["std::complex<long double>", "(long double num)"],
        "pthread_rwlock_clockwrlock": [
            "int",
            "(pthread_rwlock_t *__restrict rwlock, clockid_t clockid, const struct timespec *__restrict abstime)",
        ],
        "sched_getcpu": ["int", "()"],
        "operator<=": [
            "bool",
            "(basic_string_view<CharT, Traits> x, __type_identity_t<basic_string_view<CharT, Traits>> y)",
        ],
        "operator~": ["perms", "(perms x)"],
        "swap": [
            "typename enable_if<__is_swappable<Dp>::value>::type",
            "(unique_ptr<Tp, Dp> &x, unique_ptr<Tp, Dp> &y)",
        ],
        "operator<<": [
            "std::basic_ostream<CharT, Traits> &",
            "(std::basic_ostream<CharT, Traits> &, const std::uniform_int_distribution<IntType> &)",
        ],
        "set_intersection": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, ForwardIterator>",
            "(ExecutionPolicy &&exec, ForwardIterator1 first1, ForwardIterator1 last1, ForwardIterator2 first2, ForwardIterator2 last2, ForwardIterator result)",
        ],
        "iswalpha_l": ["int", "(wint_t wc, locale_t locale)"],
        "operator&=": ["copy_options &", "(copy_options &x, copy_options y)"],
        "operator<=": [
            "_Expr<_BinClos<struct std::__less_equal, std::_Expr, std::_ValArray, Dom, typename Dom::value_type>, typename __fun<struct std::__less_equal, typename Dom::value_type>::result_type>",
            "(const _Expr<Dom, typename Dom::value_type> &e, const valarray<typename Dom::value_type> &v)",
        ],
        "llrintf64x": ["long long", "(_Float64x x)"],
        "operator&=": ["perm_options &", "(perm_options &x, perm_options y)"],
        "fminmagf32": ["_Float32", "(_Float32 x, _Float32 y)"],
        "equal": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, bool>",
            "(ExecutionPolicy &&exec, ForwardIterator1 first1, ForwardIterator1 last1, ForwardIterator2 first2)",
        ],
        "lgamma_r": ["double", "(double, int *signgamp)"],
        "fmodf64": ["_Float64", "(_Float64 x, _Float64 y)"],
        "iswpunct_l": ["int", "(wint_t wc, locale_t locale)"],
        "operator*": [
            "duration<__common_rep_t<Rep1, Rep2>, Period>",
            "(const duration<Rep1, Period> &d, const Rep2 &s)",
        ],
        "fdimf64x": ["_Float64x", "(_Float64x x, _Float64x y)"],
        "acosh": [
            "typename __gnu_cxx::__enable_if<__is_integer<Tp>::__value, double>::__type",
            "(Tp x)",
        ],
        "future_category": ["const error_category &", "()"],
        "lroundf": ["long", "(float x)"],
        "feof_unlocked": ["int", "(FILE *stream)"],
        "min_element": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, ForwardIterator>",
            "(ExecutionPolicy &&exec, ForwardIterator first, ForwardIterator last, Compare comp)",
        ],
        "create_symlink": [
            "void",
            "(const path &to, const path &new_symlink, error_code &ec)",
        ],
        "operator<": [
            "bool",
            "(const map<Key, Tp, Compare, Alloc> &x, const map<Key, Tp, Compare, Alloc> &y)",
        ],
        "fixed": ["ios_base &", "(ios_base &base)"],
        "flockfile": ["void", "(FILE *stream)"],
        "atanhf": ["float", "(float x)"],
        "operator<<": [
            "std::basic_ostream<CharT, Traits> &",
            "(std::basic_ostream<CharT, Traits> &os, const poisson_distribution<IntType> &x)",
        ],
        "sqrtl": ["long double", "(long double x)"],
        "strtod_l": [
            "double",
            "(const char *__restrict nptr, char **__restrict endptr, locale_t loc)",
        ],
        "ftello": ["__off_t", "(FILE *stream)"],
        "iseqsig": ["int", "(T1 x, T2 y)"],
        "pthread_attr_getschedparam": [
            "int",
            "(const pthread_attr_t *__restrict attr, struct sched_param *__restrict param)",
        ],
        "iswctype": ["int", "(wint_t wc, wctype_t desc)"],
        "swap": [
            "typename enable_if<__and_<__is_swappable<T1>, __is_swappable<T2>>::value>::type",
            "(pair<T1, T2> &x, pair<T1, T2> &y)",
        ],
        "readdir64_r": [
            "int",
            "(DIR *__restrict dirp, struct dirent64 *__restrict entry, struct dirent64 **__restrict result)",
        ],
        "flush": [
            "basic_ostream<CharT, Traits> &",
            "(basic_ostream<CharT, Traits> &os)",
        ],
        "tanhf": ["float", "(float x)"],
        "fill": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, void>",
            "(ExecutionPolicy &&exec, ForwardIterator first, ForwardIterator last, const Tp &value)",
        ],
        "fesetmode": ["int", "(const femode_t *modep)"],
        "not1": ["unary_negate<Predicate>", "(const Predicate &pred)"],
        "truncf32x": ["_Float32x", "(_Float32x x)"],
        "stold": ["long double", "(const wstring &str, size_t *idx = 0)"],
        "assoc_laguerref": ["float", "(unsigned int n, unsigned int m, float x)"],
        "mempcpy": [
            "void *",
            "(void *__restrict dest, const void *__restrict src, size_t n)",
        ],
        "atanh": ["std::complex<Tp>", "(const std::complex<Tp> &)"],
        "const_pointer_cast": [
            "__shared_ptr<Tp, Lp>",
            "<typename Tp>(const __shared_ptr<Tp1, Lp> &r)",
        ],
        "drand48": ["double", "()"],
        "iter_swap": ["void", "(ForwardIterator1 a, ForwardIterator2 b)"],
        "strtof_l": [
            "float",
            "(const char *__restrict nptr, char **__restrict endptr, locale_t loc)",
        ],
        "operator&&": [
            "_Expr<_BinClos<struct std::__logical_and, std::_ValArray, std::_Expr, typename Dom::value_type, Dom>, typename __fun<struct std::__logical_and, typename Dom::value_type>::result_type>",
            "(const valarray<typename Dom::value_type> &v, const _Expr<Dom, typename Dom::value_type> &e)",
        ],
        "operator<": [
            "bool",
            "(const basic_string<CharT, Traits, Alloc> &lhs, const basic_string<CharT, Traits, Alloc> &rhs)",
        ],
        "sched_setaffinity": [
            "int",
            "(__pid_t pid, size_t cpusetsize, const cpu_set_t *cpuset)",
        ],
        "asinf64": ["_Float64", "(_Float64 x)"],
        "proximate": ["path", "(const path &p, const path &base = current_path())"],
        "operator<": ["bool", "(const stack<Tp, Seq> &x, const stack<Tp, Seq> &y)"],
        "fmin": ["long double", "(long double x, long double y)"],
        "lgamma": [
            "typename __gnu_cxx::__enable_if<__is_integer<Tp>::__value, double>::__type",
            "(Tp x)",
        ],
        "operator>": [
            "bool",
            "(const _Self &x, const _Deque_iterator<Tp, RefR, PtrR> &y)",
        ],
        "ilogb": [
            "typename __gnu_cxx::__enable_if<__is_integer<Tp>::__value, int>::__type",
            "(Tp x)",
        ],
        "pthread_mutex_consistent": ["int", "(pthread_mutex_t *mutex)"],
        "fmod": ["typename __gnu_cxx::__promote_2<Tp, Up>::__type", "(Tp x, Up y)"],
        "operator>": ["bool", "(thread::id x, thread::id y)"],
        "ellint_1l": ["long double", "(long double k, long double phi)"],
        "setpayloadf64": ["int", "(_Float64 *x, _Float64 payload)"],
        "setpayloadf32x": ["int", "(_Float32x *x, _Float32x payload)"],
        "operator-": [
            "_Expr<_BinClos<__minus, std::_ValArray, std::_ValArray, Tp, Tp>, typename __fun<__minus, Tp>::result_type>",
            "(const valarray<Tp> &v, const valarray<Tp> &w)",
        ],
        "floor": [
            "__enable_if_is_duration<ToDur>",
            "<typename ToDur>(const duration<Rep, Period> &d)",
        ],
        "apply": ["decltype(auto)", "(Fn &&f, Tuple &&t)"],
        "tan": ["double", "(double x)"],
        "operator<=": [
            "bool",
            "(const map<Key, Tp, Compare, Alloc> &x, const map<Key, Tp, Compare, Alloc> &y)",
        ],
        "cbrtl": ["long double", "(long double x)"],
        "operator==": [
            "bool",
            "(const unordered_multiset<Value, Hash, Pred, Alloc> &x, const unordered_multiset<Value, Hash, Pred, Alloc> &y)",
        ],
        "div": ["div_t", "(int numer, int denom)"],
        "cosf64x": ["_Float64x", "(_Float64x x)"],
        "ufromfpf64x": ["__uintmax_t", "(_Float64x x, int round, unsigned int width)"],
        "operator+": ["_Self", "(const _Self &x, difference_type n)"],
        "status_known": ["bool", "(file_status)"],
        "operator>": [
            "_Expr<_BinClos<__greater, std::_Constant, std::_ValArray, Tp, Tp>, typename __fun<__greater, Tp>::result_type>",
            "(const typename valarray<Tp>::value_type &t, const valarray<Tp> &v)",
        ],
        "dgettext": ["char *", "(const char *domainname, const char *msgid)"],
        "totalorderf64x": ["int", "(const _Float64x *x, const _Float64x *y)"],
        "to_chars": [
            "to_chars_result",
            "(char *first, char *last, char value, int base)",
        ],
        "roundf": ["float", "(float x)"],
        "iswgraph_l": ["int", "(wint_t wc, locale_t locale)"],
        "fabs": ["double", "(double x)"],
        "vfwscanf": [
            "int",
            "(__FILE *__restrict s, const wchar_t *__restrict format, __va_list_tag *arg)",
        ],
        "iswalnum_l": ["int", "(wint_t wc, locale_t locale)"],
        "relative": ["path", "(const path &p, error_code &ec)"],
        "reinterpret_pointer_cast": [
            "__shared_ptr<Tp, Lp>",
            "<typename Tp>(const __shared_ptr<Tp1, Lp> &r)",
        ],
        "rint": ["float", "(float x)"],
        "operator>": [
            "bool",
            "(const unique_ptr<Tp, Dp> &x, const unique_ptr<Up, Ep> &y)",
        ],
        "totalorderl": ["int", "(const long double *x, const long double *y)"],
        "lrintf32x": ["long", "(_Float32x x)"],
        "atan2": [
            "_Expr<_BinClos<struct std::_Atan2, std::_Expr, std::_ValArray, Dom, typename Dom::value_type>, typename Dom::value_type>",
            "(const _Expr<Dom, typename Dom::value_type> &e, const valarray<typename Dom::value_type> &v)",
        ],
        "get": ["const Tp &", "<std::size_t Int>(const array<Tp, Nm> &arr)"],
        "fseek": ["int", "(FILE *stream, long off, int whence)"],
        "operator<=": [
            "bool",
            "(const basic_string<CharT, Traits, Alloc> &lhs, const basic_string<CharT, Traits, Alloc> &rhs)",
        ],
        "launder": ["void", "(const volatile void *)"],
        "fopencookie": [
            "FILE *",
            "(void *__restrict magic_cookie, const char *__restrict modes, cookie_io_functions_t io_funcs)",
        ],
        "operator"
        "sv": ["basic_string_view<wchar_t>", "(const wchar_t *str, size_t len)"],
        "llroundf": ["long long", "(float x)"],
        "operator>=": ["bool", "(const pair<T1, T2> &x, const pair<T1, T2> &y)"],
        "pthread_attr_setstacksize": [
            "int",
            "(pthread_attr_t *attr, size_t stacksize)",
        ],
        "iswxdigit": ["int", "(wint_t wc)"],
        "make_error_code": ["error_code", "(future_errc errc)"],
        "llabs": ["long long", "(long long x)"],
        "round": [
            "enable_if_t<__and_<__is_duration<ToDur>, __not_<treat_as_floating_point<typename ToDur::rep>>>::value, ToDur>",
            "<typename ToDur>(const duration<Rep, Period> &d)",
        ],
        "operator==": [
            "bool",
            "(const move_iterator<IteratorL> &x, const move_iterator<IteratorR> &y)",
        ],
        "operator<=": ["bool", "(const stack<Tp, Seq> &x, const stack<Tp, Seq> &y)"],
        "operator*": [
            "_Expr<_BinClos<__multiplies, std::_Constant, std::_ValArray, Tp, Tp>, typename __fun<__multiplies, Tp>::result_type>",
            "(const typename valarray<Tp>::value_type &t, const valarray<Tp> &v)",
        ],
        "fesetexcept": ["int", "(int excepts)"],
        "transform_inclusive_scan": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, ForwardIterator2>",
            "(ExecutionPolicy &&exec, ForwardIterator1 first, ForwardIterator1 last, ForwardIterator2 result, BinaryOperation binary_op, UnaryOperation unary_op)",
        ],
        "addressof": ["Tp *", "(Tp &r)"],
        "operator|": ["perm_options", "(perm_options x, perm_options y)"],
        "none_of": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, bool>",
            "(ExecutionPolicy &&exec, ForwardIterator first, ForwardIterator last, Predicate pred)",
        ],
        "erfc": ["long double", "(long double x)"],
        "faddl": ["float", "(long double x, long double y)"],
        "bcmp": ["int", "(const void *s1, const void *s2, size_t n)"],
        "atomic_is_lock_free": ["bool", "(const atomic<ITp> *a)"],
        "nextdownf64x": ["_Float64x", "(_Float64x x)"],
        "begin": ["Tp *", "(valarray<Tp> &)"],
        "strlen": ["size_t", "(const char *s)"],
        "operator>=": [
            "bool",
            "(const reverse_iterator<IteratorL> &x, const reverse_iterator<IteratorR> &y)",
        ],
        "operator!=": [
            "bool",
            "(const unordered_multiset<Value, Hash, Pred, Alloc> &x, const unordered_multiset<Value, Hash, Pred, Alloc> &y)",
        ],
        "sincosf64x": ["void", "(_Float64x x, _Float64x *sinx, _Float64x *cosx)"],
        "operator|=": ["const _Ios_Iostate &", "(_Ios_Iostate &a, _Ios_Iostate b)"],
        "operator~": ["syntax_option_type", "(syntax_option_type a)"],
        "operator&": ["byte", "(byte l, byte r)"],
        "use_facet": ["const Facet &", "<typename Facet>(const locale &)"],
        "llogbf32": ["long", "(_Float32 x)"],
        "qgcvt": ["char *", "(long double value, int ndigit, char *buf)"],
        "sigrelse": ["int", "(int sig)"],
        "posix_memalign": ["int", "(void **memptr, size_t alignment, size_t size)"],
        "ynf": ["float", "(int, float)"],
        "sin": ["complex<Tp>", "(const complex<Tp> &)"],
        "scalbnf64x": ["_Float64x", "(_Float64x x, int n)"],
        "nanf64": ["_Float64", "(const char *tagb)"],
        "fputwc": ["wint_t", "(wchar_t wc, __FILE *stream)"],
        "llogbl": ["long", "(long double x)"],
        "operator==": [
            "bool",
            "(const chi_squared_distribution<RealType> &d1, const chi_squared_distribution<RealType> &d2)",
        ],
        "operator!=": [
            "bool",
            "(const std::poisson_distribution<IntType> &d1, const std::poisson_distribution<IntType> &d2)",
        ],
        "atomic_store_explicit": [
            "void",
            "(atomic<ITp> *a, __atomic_val_t<ITp> i, memory_order m)",
        ],
        "canonicalizef64": ["int", "(_Float64 *cx, const _Float64 *x)"],
        "pthread_condattr_setclock": [
            "int",
            "(pthread_condattr_t *attr, __clockid_t clock_id)",
        ],
        "operator<<": [
            "std::basic_ostream<CharT, Traits> &",
            "(std::basic_ostream<CharT, Traits> &, const std::uniform_real_distribution<RealType> &)",
        ],
        "iscanonical": ["int", "(float val)"],
        "sched_yield": ["int", "()"],
        "ufromfpl": ["__uintmax_t", "(long double x, int round, unsigned int width)"],
        "operator<=": ["bool", "(const Tp &x, const Tp &y)"],
        "tan": [
            "typename __gnu_cxx::__enable_if<__is_integer<Tp>::__value, double>::__type",
            "(Tp x)",
        ],
        "make_unique": ["typename _MakeUniq<Tp>::__array", "<typename Tp>(size_t num)"],
        "operator>>": [
            "std::basic_istream<CharT, Traits> &",
            "(std::basic_istream<CharT, Traits> &is, subtract_with_carry_engine<UIntType, w, s, r> &x)",
        ],
        "operator/": ["path", "(const path &lhs, const path &rhs)"],
        "create_directories": ["bool", "(const path &p)"],
        "get": ["Tp &&", "<std::size_t Int>(array<Tp, Nm> &&arr)"],
        "operator!=": [
            "bool",
            "(const move_iterator<IteratorL> &x, const move_iterator<IteratorR> &y)",
        ],
        "nth_element": ["void", "(RAIter, RAIter, RAIter, Compare)"],
        "transform_inclusive_scan": [
            "OutputIterator",
            "(InputIterator first, InputIterator last, OutputIterator result, BinaryOperation binary_op, UnaryOperation unary_op)",
        ],
        "u8path": ["path", "(const Source &source)"],
        "pthread_spin_trylock": ["int", "(pthread_spinlock_t *lock)"],
        "crbegin": ["decltype(std::rbegin(cont))", "(const Container &cont)"],
        "ufromfp": ["__uintmax_t", "(double x, int round, unsigned int width)"],
        "fabs": [
            "typename __gnu_cxx::__enable_if<__is_integer<Tp>::__value, double>::__type",
            "(Tp x)",
        ],
        "tgkill": ["int", "(__pid_t tgid, __pid_t tid, int signal)"],
        "fegetround": ["int", "()"],
        "fegetexcept": ["int", "()"],
        "uninitialized_value_construct": [
            "void",
            "(ForwardIterator first, ForwardIterator last)",
        ],
        "iswprint_l": ["int", "(wint_t wc, locale_t locale)"],
        "strtof32": [
            "_Float32",
            "(const char *__restrict nptr, char **__restrict endptr)",
        ],
        "operator^": ["_Ios_Fmtflags", "(_Ios_Fmtflags a, _Ios_Fmtflags b)"],
        "totalordermagl": ["int", "(const long double *x, const long double *y)"],
        "exp10f64x": ["_Float64x", "(_Float64x x)"],
        "setiosflags": ["_Setiosflags", "(ios_base::fmtflags mask)"],
        "swap": [
            "void",
            "(basic_ofstream<CharT, Traits> &x, basic_ofstream<CharT, Traits> &y)",
        ],
        "set_intersection": [
            "OIter",
            "(IIter1, IIter1, IIter2, IIter2, OIter, Compare)",
        ],
        "getsubopt": [
            "int",
            "(char **__restrict optionp, char *const *__restrict tokens, char **__restrict valuep)",
        ],
        "lrint": ["long", "(long double x)"],
        "pow": ["long double", "(long double x, long double y)"],
        "operator<<": [
            "basic_ostream<char, Traits> &",
            "(basic_ostream<char, Traits> &out, const unsigned char *s)",
        ],
        "fdimf64": ["_Float64", "(_Float64 x, _Float64 y)"],
        "strncmp": ["int", "(const char *s1, const char *s2, size_t n)"],
        "erfcf32x": ["_Float32x", "(_Float32x)"],
        "lroundf32": ["long", "(_Float32 x)"],
        "exp": [
            "_Expr<_UnClos<struct std::_Exp, std::_Expr, Dom>, typename Dom::value_type>",
            "(const _Expr<Dom, typename Dom::value_type> &e)",
        ],
        "ceilf": ["float", "(float x)"],
        "obstack_free": ["void", "(struct obstack *, void *)"],
        "scandirat": [
            "int",
            "(int dfd, const char *__restrict dir, struct dirent ***__restrict namelist, int (*selector)(const struct dirent *), int (*cmp)(const struct dirent **, const struct dirent **))",
        ],
        "transform_inclusive_scan": [
            "OutputIterator",
            "(InputIterator first, InputIterator last, OutputIterator result, BinaryOperation binary_op, UnaryOperation unary_op, Tp init)",
        ],
        "operator==": [
            "bool",
            "(const lognormal_distribution<RealType> &d1, const lognormal_distribution<RealType> &d2)",
        ],
        "fmul": ["float", "(double x, double y)"],
        "sin": ["double", "(double x)"],
        "operator!=": [
            "bool",
            "(const std::chi_squared_distribution<RealType> &d1, const std::chi_squared_distribution<RealType> &d2)",
        ],
        "wctrans_l": ["wctrans_t", "(const char *property, locale_t locale)"],
        "fminf64x": ["_Float64x", "(_Float64x x, _Float64x y)"],
        "clearerr_unlocked": ["void", "(FILE *stream)"],
        "max_element": ["FIter", "(FIter, FIter)"],
        "srand48": ["void", "(long seedval)"],
        "fminmagf32x": ["_Float32x", "(_Float32x x, _Float32x y)"],
        "atomic_compare_exchange_strong": [
            "bool",
            "(volatile atomic<ITp> *a, __atomic_val_t<ITp> *i1, __atomic_val_t<ITp> i2)",
        ],
        "pthread_attr_setinheritsched": ["int", "(pthread_attr_t *attr, int inherit)"],
        "swap": [
            "enable_if_t<is_move_constructible_v<Tp> && is_swappable_v<Tp>>",
            "(optional<Tp> &lhs, optional<Tp> &rhs)",
        ],
        "create_hard_link": ["void", "(const path &to, const path &new_hard_link)"],
        "lgammaf32": ["_Float32", "(_Float32)"],
        "to_wstring": ["wstring", "(unsigned long long val)"],
        "nextupf64x": ["_Float64x", "(_Float64x x)"],
        "atan2": ["double", "(double y, double x)"],
        "rintf64x": ["_Float64x", "(_Float64x x)"],
        "operator>>": [
            "basic_istream<char, Traits> &",
            "(basic_istream<char, Traits> &in, signed char *s)",
        ],
        "acos": ["long double", "(long double x)"],
        "max_element": ["FIter", "(FIter, FIter, Compare)"],
        "initstate_r": [
            "int",
            "(unsigned int seed, char *__restrict statebuf, size_t statelen, struct random_data *__restrict buf)",
        ],
        "frexp": ["float", "(float x, int *exp)"],
        "pthread_attr_destroy": ["int", "(pthread_attr_t *attr)"],
        "iswlower": ["int", "(wint_t wc)"],
        "asinf32": ["_Float32", "(_Float32 x)"],
        "dremf": ["float", "(float x, float y)"],
        "iswcntrl": ["int", "(wint_t wc)"],
        "operator==": [
            "bool",
            "(const set<Key, Compare, Alloc> &x, const set<Key, Compare, Alloc> &y)",
        ],
        "pthread_mutexattr_setprioceiling": [
            "int",
            "(pthread_mutexattr_t *attr, int prioceiling)",
        ],
        "nextafterf64": ["_Float64", "(_Float64 x, _Float64 y)"],
        "duplocale": ["locale_t", "(locale_t dataset)"],
        "is_heap": ["bool", "(RAIter, RAIter, Compare)"],
        "operator|=": [
            "directory_options &",
            "(directory_options &x, directory_options y)",
        ],
        "freopen": [
            "FILE *",
            "(const char *__restrict filename, const char *__restrict modes, FILE *__restrict stream)",
        ],
        "jn": ["double", "(int, double)"],
        "sched_getaffinity": [
            "int",
            "(__pid_t pid, size_t cpusetsize, cpu_set_t *cpuset)",
        ],
        "operator>>": [
            "std::basic_istream<CharT, Traits> &",
            "(std::basic_istream<CharT, Traits> &is, std::weibull_distribution<RealType> &x)",
        ],
        "operator==": [
            "_Expr<_BinClos<struct std::__equal_to, std::_Constant, std::_Expr, typename Dom::value_type, Dom>, typename __fun<struct std::__equal_to, typename Dom::value_type>::result_type>",
            "(const typename Dom::value_type &t, const _Expr<Dom, typename Dom::value_type> &v)",
        ],
        "regex_search": [
            "bool",
            "(const basic_string<Ch_type, Ch_traits, Ch_alloc> &&, match_results<typename basic_string<Ch_type, Ch_traits, Ch_alloc>::const_iterator, Alloc> &, const basic_regex<Ch_type, Rx_traits> &, regex_constants::match_flag_type = regex_constants::match_default)",
        ],
        "ceilf32": ["_Float32", "(_Float32 x)"],
        "btowc": ["wint_t", "(int c)"],
        "ceil": [
            "typename __gnu_cxx::__enable_if<__is_integer<Tp>::__value, double>::__type",
            "(Tp x)",
        ],
        "get_new_handler": ["new_handler", "()"],
        "swap": [
            "void",
            "(basic_stringbuf<CharT, Traits, Allocator> &x, basic_stringbuf<CharT, Traits, Allocator> &y)",
        ],
        "lrintl": ["long", "(long double x)"],
        "operator>": [
            "bool",
            "(const sub_match<Bi_iter> &lhs, const __sub_match_string<Bi_iter, Ch_traits, Ch_alloc> &rhs)",
        ],
        "operator>": [
            "bool",
            "(const multiset<Key, Compare, Alloc> &x, const multiset<Key, Compare, Alloc> &y)",
        ],
        "wcschr": ["wchar_t *", "(wchar_t *p, wchar_t c)"],
        "exp10f64": ["_Float64", "(_Float64 x)"],
        "wmemchr": ["wchar_t *", "(const wchar_t *s, wchar_t c, size_t n)"],
        "isless": ["bool", "(long double x, long double y)"],
        "modff64x": ["_Float64x", "(_Float64x x, _Float64x *iptr)"],
        "fmull": ["float", "(long double x, long double y)"],
        "copy_backward": ["BI2", "(BI1 first, BI1 last, BI2 result)"],
        "log": ["double", "(double x)"],
        "iscntrl": ["bool", "(CharT, const locale &)"],
        "clock_gettime": ["int", "(clockid_t clock_id, struct timespec *tp)"],
        "remove_if": ["FIter", "(FIter, FIter, Predicate)"],
        "pthread_mutexattr_setrobust_np": [
            "int",
            "(pthread_mutexattr_t *attr, int robustness)",
        ],
        "lgamma": ["long double", "(long double x)"],
        "wcstoumax": [
            "uintmax_t",
            "(const wchar_t *__restrict nptr, wchar_t **__restrict endptr, int base)",
        ],
        "operator==": [
            "bool",
            "(const mersenne_twister_engine<UIntType, w, n, m, r, a, u, d, s, b, t, c, l, f> &lhs, const mersenne_twister_engine<UIntType, w, n, m, r, a, u, d, s, b, t, c, l, f> &rhs)",
        ],
        "operator-": [
            "_Expr<_BinClos<struct std::__minus, std::_Expr, std::_Expr, Dom1, Dom2>, typename __fun<struct std::__minus, typename Dom1::value_type>::result_type>",
            "(const _Expr<Dom1, typename Dom1::value_type> &v, const _Expr<Dom2, typename Dom2::value_type> &w)",
        ],
        "operator^": [
            "directory_options",
            "(directory_options x, directory_options y)",
        ],
        "lroundl": ["long", "(long double x)"],
        "hash_value": ["size_t", "(const path &p)"],
        "operator>>": [
            "_Expr<_BinClos<__shift_right, std::_ValArray, std::_ValArray, Tp, Tp>, typename __fun<__shift_right, Tp>::result_type>",
            "(const valarray<Tp> &v, const valarray<Tp> &w)",
        ],
        "f64addf64x": ["_Float64", "(_Float64x x, _Float64x y)"],
        "operator!=": [
            "bool",
            "(const set<Key, Compare, Alloc> &x, const set<Key, Compare, Alloc> &y)",
        ],
        "operator<": [
            "_Expr<_BinClos<__less, std::_ValArray, std::_ValArray, Tp, Tp>, typename __fun<__less, Tp>::result_type>",
            "(const valarray<Tp> &v, const valarray<Tp> &w)",
        ],
        "operator>": [
            "bool",
            "(basic_string_view<CharT, Traits> x, __type_identity_t<basic_string_view<CharT, Traits>> y)",
        ],
        "operator>>": [
            "std::basic_istream<CharT, Traits> &",
            "(std::basic_istream<CharT, Traits> &is, piecewise_linear_distribution<RealType> &x)",
        ],
        "pow": ["typename __gnu_cxx::__promote_2<Tp, Up>::__type", "(Tp x, Up y)"],
        "equal": ["bool", "(II1 first1, II1 last1, II2 first2)"],
        "is_symlink": ["bool", "(const path &p, error_code &ec)"],
        "f32xdivf64": ["_Float32x", "(_Float64 x, _Float64 y)"],
        "expf32": ["_Float32", "(_Float32 x)"],
        "operator>>": [
            "basic_istream<CharT, Traits> &",
            "(basic_istream<CharT, Traits> &is, _Setbase f)",
        ],
        "operator>": [
            "__optional_gt_t<Up, Tp>",
            "(const Up &lhs, const optional<Tp> &rhs)",
        ],
        "fgetwc_unlocked": ["wint_t", "(__FILE *stream)"],
        "operator~": ["_Ios_Openmode", "(_Ios_Openmode a)"],
        "round": [
            "enable_if_t<__and_<__is_duration<ToDur>, __not_<treat_as_floating_point<typename ToDur::rep>>>::value, time_point<Clock, ToDur>>",
            "<typename ToDur>(const time_point<Clock, Dur> &tp)",
        ],
        "wcsncmp": ["int", "(const wchar_t *s1, const wchar_t *s2, size_t n)"],
        "operator==": [
            "__optional_eq_t<Up, Tp>",
            "(const Up &lhs, const optional<Tp> &rhs)",
        ],
        "islessgreater": ["bool", "(double x, double y)"],
        "copy_n": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, ForwardIterator2>",
            "(ExecutionPolicy &&exec, ForwardIterator1 first, Size n, ForwardIterator2 result)",
        ],
        "fromfpxf32x": ["__intmax_t", "(_Float32x x, int round, unsigned int width)"],
        "copy_file": ["bool", "(const path &from, const path &to)"],
        "sinl": ["long double", "(long double x)"],
        "operator-": [
            "_Expr<_BinClos<__minus, std::_ValArray, std::_Constant, Tp, Tp>, typename __fun<__minus, Tp>::result_type>",
            "(const valarray<Tp> &v, const typename valarray<Tp>::value_type &t)",
        ],
        "operator^": ["chars_format", "(chars_format lhs, chars_format rhs)"],
        "operator new[]": ["void *", "(std::size_t, std::align_val_t)"],
        "make_exception_ptr": ["exception_ptr", "(Ex)"],
        "asinl": ["long double", "(long double x)"],
        "operator<<": [
            "std::basic_ostream<CharT, Traits> &",
            "(std::basic_ostream<CharT, Traits> &os, const lognormal_distribution<RealType> &x)",
        ],
        "mkdtemp": ["char *", "(char *template)"],
        "acos": ["double", "(double x)"],
        "sigismember": ["int", "(const sigset_t *set, int signo)"],
        "fminf64": ["_Float64", "(_Float64 x, _Float64 y)"],
        "operator<": [
            "bool",
            "(const _Bit_iterator_base &x, const _Bit_iterator_base &y)",
        ],
        "create_directory_symlink": [
            "void",
            "(const path &to, const path &new_symlink, error_code &ec)",
        ],
        "atomic_fetch_sub": [
            "ITp",
            "(volatile atomic<ITp> *a, __atomic_diff_t<ITp> i)",
        ],
        "operator!=": [
            "bool",
            "(const std::piecewise_constant_distribution<RealType> &d1, const std::piecewise_constant_distribution<RealType> &d2)",
        ],
        "tgammaf64x": ["_Float64x", "(_Float64x)"],
        "iswcntrl_l": ["int", "(wint_t wc, locale_t locale)"],
        "atomic_load": ["shared_ptr<Tp>", "(const shared_ptr<Tp> *p)"],
        "isgraph_l": ["int", "(int, locale_t)"],
        "operator>>": [
            "std::basic_istream<CharT, Traits> &",
            "(std::basic_istream<CharT, Traits> &is, std::bernoulli_distribution &x)",
        ],
        "operator<": [
            "bool",
            "(const duration<Rep1, Period1> &lhs, const duration<Rep2, Period2> &rhs)",
        ],
        "ref": ["void", "(const Tp &&)"],
        "operator<": [
            "_Expr<_BinClos<__less, std::_ValArray, std::_Constant, Tp, Tp>, typename __fun<__less, Tp>::result_type>",
            "(const valarray<Tp> &v, const typename valarray<Tp>::value_type &t)",
        ],
        "noshowpos": ["ios_base &", "(ios_base &base)"],
        "time": ["time_t", "(time_t *timer)"],
        "operator>>": [
            "std::basic_istream<CharT, Traits> &",
            "(std::basic_istream<CharT, Traits> &is, mersenne_twister_engine<UIntType, w, n, m, r, a, u, d, s, b, t, c, l, f> &x)",
        ],
        "operator>>=": ["__byte_op_t<IntegerType> &", "(byte &b, IntegerType shift)"],
        "operator" "min": ["chrono::minutes", "<char Digits>()"],
        "sph_besself": ["float", "(unsigned int n, float x)"],
        "operator>": [
            "_Expr<_BinClos<struct std::__greater, std::_Constant, std::_Expr, typename Dom::value_type, Dom>, typename __fun<struct std::__greater, typename Dom::value_type>::result_type>",
            "(const typename Dom::value_type &t, const _Expr<Dom, typename Dom::value_type> &v)",
        ],
        "operator<=": [
            "__optional_le_t<Tp, Up>",
            "(const optional<Tp> &lhs, const Up &rhs)",
        ],
        "gamma": ["double", "(double)"],
        "make_reverse_iterator": ["reverse_iterator<Iterator>", "(Iterator i)"],
        "iscntrl": ["int", "(int)"],
        "operator>=": [
            "bool",
            "(const sub_match<Bi_iter> &lhs, const typename iterator_traits<Bi_iter>::value_type &rhs)",
        ],
        "minmax_element": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, std::pair<ForwardIterator, ForwardIterator>>",
            "(ExecutionPolicy &&exec, ForwardIterator first, ForwardIterator last, Compare comp)",
        ],
        "operator==": [
            "bool",
            "(__type_identity_t<basic_string_view<CharT, Traits>> x, basic_string_view<CharT, Traits> y)",
        ],
        "equal_range": ["pair<FIter, FIter>", "(FIter, FIter, const Tp &, Compare)"],
        "atomic_compare_exchange_weak": [
            "bool",
            "(shared_ptr<Tp> *p, shared_ptr<Tp> *v, shared_ptr<Tp> w)",
        ],
        "wcscasecmp_l": ["int", "(const wchar_t *s1, const wchar_t *s2, locale_t loc)"],
        "f32addf64x": ["_Float32", "(_Float64x x, _Float64x y)"],
        "operator>": [
            "bool",
            "(const map<Key, Tp, Compare, Alloc> &x, const map<Key, Tp, Compare, Alloc> &y)",
        ],
        "atomic_load": ["__shared_ptr<Tp, Lp>", "(const __shared_ptr<Tp, Lp> *p)"],
        "nearbyintf64x": ["_Float64x", "(_Float64x x)"],
        "move": ["OI", "(II first, II last, OI result)"],
        "unique_copy": ["OIter", "(IIter, IIter, OIter)"],
        "accumulate": ["Tp", "(InputIterator first, InputIterator last, Tp init)"],
        "operator&": ["bitset<Nb>", "(const bitset<Nb> &x, const bitset<Nb> &y)"],
        "fputs_unlocked": [
            "int",
            "(const char *__restrict s, FILE *__restrict stream)",
        ],
        "pthread_rwlockattr_destroy": ["int", "(pthread_rwlockattr_t *attr)"],
        "permissions": ["void", "(const path &, perms, perm_options, error_code &)"],
        "asinf32x": ["_Float32x", "(_Float32x x)"],
        "sample": [
            "SampleIterator",
            "(PopulationIterator first, PopulationIterator last, SampleIterator out, Distance n, UniformRandomBitGenerator &&g)",
        ],
        "operator|": [
            "_Expr<_BinClos<struct std::__bitwise_or, std::_Constant, std::_Expr, typename Dom::value_type, Dom>, typename __fun<struct std::__bitwise_or, typename Dom::value_type>::result_type>",
            "(const typename Dom::value_type &t, const _Expr<Dom, typename Dom::value_type> &v)",
        ],
        "relative": ["path", "(const path &p, const path &base = current_path())"],
        "operator>>": [
            "basic_istream<char, Traits> &",
            "(basic_istream<char, Traits> &in, unsigned char *s)",
        ],
        "make_pair": [
            "pair<typename __decay_and_strip<T1>::__type, typename __decay_and_strip<T2>::__type>",
            "(T1 &&x, T2 &&y)",
        ],
        "iswgraph": ["int", "(wint_t wc)"],
        "f32xmulf64": ["_Float32x", "(_Float64 x, _Float64 y)"],
        "comp_ellint_3": [
            "typename __gnu_cxx::__promote_2<Tp, Tpn>::__type",
            "(Tp k, Tpn nu)",
        ],
        "operator>": [
            "bool",
            "(const basic_string<CharT, Traits, Alloc> &lhs, const basic_string<CharT, Traits, Alloc> &rhs)",
        ],
        "floorl": ["long double", "(long double x)"],
        "static_pointer_cast": [
            "__shared_ptr<Tp, Lp>",
            "<typename Tp>(const __shared_ptr<Tp1, Lp> &r)",
        ],
        "operator==": ["bool", "(const array<Tp, Nm> &one, const array<Tp, Nm> &two)"],
        "cref": ["reference_wrapper<const Tp>", "(const Tp &t)"],
        "not2": ["binary_negate<Predicate>", "(const Predicate &pred)"],
        "operator<=": [
            "bool",
            "(const duration<Rep1, Period1> &lhs, const duration<Rep2, Period2> &rhs)",
        ],
        "operator>>": [
            "std::basic_istream<CharT, Traits> &",
            "(std::basic_istream<CharT, Traits> &is, normal_distribution<RealType> &x)",
        ],
        "log2": [
            "typename __gnu_cxx::__enable_if<__is_integer<Tp>::__value, double>::__type",
            "(Tp x)",
        ],
        "operator>": ["bool", "(const stack<Tp, Seq> &x, const stack<Tp, Seq> &y)"],
        "to_wstring": ["wstring", "(long double val)"],
        "putw": ["int", "(int w, FILE *stream)"],
        "unexpected": ["void", "()"],
        "llroundf64x": ["long long", "(_Float64x x)"],
        "operator<=": [
            "_Expr<_BinClos<struct std::__less_equal, std::_Constant, std::_Expr, typename Dom::value_type, Dom>, typename __fun<struct std::__less_equal, typename Dom::value_type>::result_type>",
            "(const typename Dom::value_type &t, const _Expr<Dom, typename Dom::value_type> &v)",
        ],
        "islessgreater": [
            "typename __gnu_cxx::__enable_if<(__is_arithmetic<Tp>::__value && __is_arithmetic<Up>::__value), bool>::__type",
            "(Tp x, Up y)",
        ],
        "pthread_condattr_init": ["int", "(pthread_condattr_t *attr)"],
        "operator!=": [
            "bool",
            "(__type_identity_t<basic_string_view<CharT, Traits>> x, basic_string_view<CharT, Traits> y)",
        ],
        "transform": ["OIter", "(IIter1, IIter1, IIter2, OIter, BinaryOperation)"],
        "is_other": ["bool", "(const path &p)"],
        "ferror": ["int", "(FILE *stream)"],
        "begin": ["const Tp *", "(const valarray<Tp> &)"],
        "wcsnrtombs": [
            "size_t",
            "(char *__restrict dst, const wchar_t **__restrict src, size_t nwc, size_t len, mbstate_t *__restrict ps)",
        ],
        "operator>>": [
            "_Expr<_BinClos<struct std::__shift_right, std::_ValArray, std::_Expr, typename Dom::value_type, Dom>, typename __fun<struct std::__shift_right, typename Dom::value_type>::result_type>",
            "(const valarray<typename Dom::value_type> &v, const _Expr<Dom, typename Dom::value_type> &e)",
        ],
        "operator&=": ["chars_format &", "(chars_format &lhs, chars_format rhs)"],
        "sigsuspend": ["int", "(const sigset_t *set)"],
        "powf32": ["_Float32", "(_Float32 x, _Float32 y)"],
        "scalbnf64": ["_Float64", "(_Float64 x, int n)"],
        "scalbnl": ["long double", "(long double x, int n)"],
        "clamp": ["const Tp &", "(const Tp &, const Tp &, const Tp &, Compare)"],
        "log1pf32": ["_Float32", "(_Float32 x)"],
        "operator<<": [
            "basic_ostream<CharT, Traits> &",
            "(basic_ostream<CharT, Traits> &os, _Put_money<MoneyT> f)",
        ],
        "swap": [
            "void",
            "(match_results<Bi_iter, Alloc> &lhs, match_results<Bi_iter, Alloc> &rhs)",
        ],
        "destroy_n": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, ForwardIterator>",
            "(ExecutionPolicy &&exec, ForwardIterator first, Size n)",
        ],
        "operator-": ["difference_type", "(const _Self &x, const _Self &y)"],
        "drand48_r": [
            "int",
            "(struct drand48_data *__restrict buffer, double *__restrict result)",
        ],
        "abs": [
            "_Expr<_UnClos<struct std::_Abs, std::_ValArray, Tp>, Tp>",
            "(const valarray<Tp> &v)",
        ],
        "coshf32": ["_Float32", "(_Float32 x)"],
        "is_regular_file": ["bool", "(const path &p, error_code &ec)"],
        "operator<=": ["bool", "(const optional<Tp> &lhs, nullopt_t)"],
        "pow": [
            "_Expr<_BinClos<struct std::_Pow, std::_ValArray, std::_Expr, typename Dom::value_type, Dom>, typename Dom::value_type>",
            "(const valarray<typename Dom::valarray> &v, const _Expr<Dom, typename Dom::value_type> &e)",
        ],
        "cbrtf64x": ["_Float64x", "(_Float64x x)"],
        "pthread_attr_getdetachstate": [
            "int",
            "(const pthread_attr_t *attr, int *detachstate)",
        ],
        "gmtime_r": [
            "struct tm *",
            "(const time_t *__restrict timer, struct tm *__restrict tp)",
        ],
        "operator<": ["bool", "(const error_code &lhs, const error_code &rhs)"],
        "sqrt": [
            "_Expr<_UnClos<struct std::_Sqrt, std::_Expr, Dom>, typename Dom::value_type>",
            "(const _Expr<Dom, typename Dom::value_type> &e)",
        ],
        "nrand48_r": [
            "int",
            "(unsigned short *xsubi, struct drand48_data *__restrict buffer, long *__restrict result)",
        ],
        "operator>": ["bool", "(const Tp &x, const Tp &y)"],
        "stoll": ["long long", "(const string &str, size_t *idx = 0, int base = 10)"],
        "j0f": ["float", "(float)"],
        "remove": ["bool", "(const path &p, error_code &ec)"],
        "operator!=": ["bool", "(const array<Tp, Nm> &one, const array<Tp, Nm> &two)"],
        "atomic_fetch_add": ["ITp", "(atomic<ITp> *a, __atomic_diff_t<ITp> i)"],
        "assoc_legendrel": [
            "long double",
            "(unsigned int l, unsigned int m, long double x)",
        ],
        "ilogbf32x": ["int", "(_Float32x x)"],
        "operator==": [
            "bool",
            "(const unique_ptr<Tp, Dp> &x, const unique_ptr<Up, Ep> &y)",
        ],
        "copy": [
            "void",
            "(const path &from, const path &to, copy_options options, error_code &)",
        ],
        "operator<": [
            "bool",
            "(const __shared_ptr<Tp, Lp> &a, const __shared_ptr<Up, Lp> &b)",
        ],
        "operator<": [
            "bool",
            "(const multimap<Key, Tp, Compare, Alloc> &x, const multimap<Key, Tp, Compare, Alloc> &y)",
        ],
        "real": ["Tp", "(const complex<Tp> &z)"],
        "operator*": [
            "duration<__common_rep_t<Rep2, Rep1>, Period>",
            "(const Rep1 &s, const duration<Rep2, Period> &d)",
        ],
        "sqrt": ["float", "(float x)"],
        "to_string": ["string", "(long val)"],
        "lexicographical_compare": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, bool>",
            "(ExecutionPolicy &&exec, ForwardIterator1 first1, ForwardIterator1 last1, ForwardIterator2 first2, ForwardIterator2 last2, Compare comp)",
        ],
        "nth_element": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, void>",
            "(ExecutionPolicy &&exec, RandomAccessIterator first, RandomAccessIterator nth, RandomAccessIterator last, Compare comp)",
        ],
        "j1f64": ["_Float64", "(_Float64)"],
        "setvbuf": [
            "int",
            "(FILE *__restrict stream, char *__restrict buf, int modes, size_t n)",
        ],
        "pthread_mutexattr_getpshared": [
            "int",
            "(const pthread_mutexattr_t *__restrict attr, int *__restrict pshared)",
        ],
        "logb": ["float", "(float x)"],
        "round": ["float", "(float x)"],
        "nextafterf32x": ["_Float32x", "(_Float32x x, _Float32x y)"],
        "fputws_unlocked": [
            "int",
            "(const wchar_t *__restrict ws, __FILE *__restrict stream)",
        ],
        "memchr": ["void *", "(void *s, int c, size_t n)"],
        "empty": ["bool", "(const Tp (&)[Nm])"],
        "operator==": [
            "bool",
            "(const gamma_distribution<RealType> &d1, const gamma_distribution<RealType> &d2)",
        ],
        "operator>=": [
            "bool",
            "(const vector<Tp, Alloc> &x, const vector<Tp, Alloc> &y)",
        ],
        "feenableexcept": ["int", "(int excepts)"],
        "atan2": [
            "_Expr<_BinClos<struct std::_Atan2, std::_ValArray, std::_Constant, Tp, Tp>, Tp>",
            "(const valarray<Tp> &v, const typename valarray<Tp>::value_type &t)",
        ],
        "ilogbf": ["int", "(float x)"],
        "strtof64": [
            "_Float64",
            "(const char *__restrict nptr, char **__restrict endptr)",
        ],
        "transform_reduce": [
            "Tp",
            "(InputIterator1 first1, InputIterator1 last1, InputIterator2 first2, Tp init, BinaryOperation1 binary_op1, BinaryOperation2 binary_op2)",
        ],
        "operator%": [
            "_Expr<_BinClos<__modulus, std::_Constant, std::_ValArray, Tp, Tp>, typename __fun<__modulus, Tp>::result_type>",
            "(const typename valarray<Tp>::value_type &t, const valarray<Tp> &v)",
        ],
        "uninitialized_copy_n": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, ForwardIterator>",
            "(ExecutionPolicy &&exec, InputIterator first, Size n, ForwardIterator result)",
        ],
        "isgraph": ["bool", "(CharT, const locale &)"],
        "log1p": ["float", "(float x)"],
        "atomic_load": ["ITp", "(const atomic<ITp> *a)"],
        "adjacent_difference": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, ForwardIterator2>",
            "(ExecutionPolicy &&exec, ForwardIterator1 first, ForwardIterator1 last, ForwardIterator2 d_first)",
        ],
        "is_sorted_until": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, ForwardIterator>",
            "(ExecutionPolicy &&exec, ForwardIterator first, ForwardIterator last, Compare comp)",
        ],
        "fegetmode": ["int", "(femode_t *modep)"],
        "isnanl": ["int", "(long double value)"],
        "vsprintf": [
            "int",
            "(char *__restrict s, const char *__restrict format, __va_list_tag *arg)",
        ],
        "ilogbf64": ["int", "(_Float64 x)"],
        "tgammal": ["long double", "(long double)"],
        "advance": ["void", "(InputIterator &i, Distance n)"],
        "finitef": ["int", "(float value)"],
        "operator<<": [
            "std::basic_ostream<CharT, Traits> &",
            "(std::basic_ostream<CharT, Traits> &os, const std::geometric_distribution<IntType> &x)",
        ],
        "adjacent_find": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, ForwardIterator>",
            "(ExecutionPolicy &&exec, ForwardIterator first, ForwardIterator last, BinaryPredicate pred)",
        ],
        "fputwc_unlocked": ["wint_t", "(wchar_t wc, __FILE *stream)"],
        "operator!=": [
            "bool",
            "(const unique_ptr<Tp, Dp> &x, const unique_ptr<Up, Ep> &y)",
        ],
        "operator>>": [
            "basic_istream<CharT, Traits> &",
            "(basic_istream<CharT, Traits> &is, _Setw f)",
        ],
        "search_n": ["FIter", "(FIter, FIter, Size, const Tp &)"],
        "scalbln": ["long double", "(long double x, long ex)"],
        "operator"
        "h": ["chrono::duration<long double, ratio<3600, 1>>", "(long double hours)"],
        "f32xaddf64": ["_Float32x", "(_Float64 x, _Float64 y)"],
        "operator==": [
            "_Expr<_BinClos<__equal_to, std::_ValArray, std::_Constant, Tp, Tp>, typename __fun<__equal_to, Tp>::result_type>",
            "(const valarray<Tp> &v, const typename valarray<Tp>::value_type &t)",
        ],
        "operator<=": [
            "bool",
            "(const multimap<Key, Tp, Compare, Alloc> &x, const multimap<Key, Tp, Compare, Alloc> &y)",
        ],
        "readdir_r": [
            "int",
            "(DIR *__restrict dirp, struct dirent *__restrict entry, struct dirent **__restrict result)",
        ],
        "operator<<": [
            "std::basic_ostream<CharT, Traits> &",
            "(std::basic_ostream<CharT, Traits> &os, const std::weibull_distribution<RealType> &x)",
        ],
        "wcsstr": ["wchar_t *", "(const wchar_t *haystack, const wchar_t *needle)"],
        "operator==": ["bool", "(const allocator<T1> &, const allocator<T2> &)"],
        "iswxdigit_l": ["int", "(wint_t wc, locale_t locale)"],
        "ws": ["basic_istream<CharT, Traits> &", "(basic_istream<CharT, Traits> &is)"],
        "ftello64": ["__off64_t", "(FILE *stream)"],
        "alloca": ["void *", "(size_t size)"],
        "realpath": [
            "char *",
            "(const char *__restrict name, char *__restrict resolved)",
        ],
        "operator>=": ["bool", "(const _Self &x, const _Self &y)"],
        "atan2": [
            "_Expr<_BinClos<struct std::_Atan2, std::_Constant, std::_ValArray, Tp, Tp>, Tp>",
            "(const typename valarray<Tp>::value_type &t, const valarray<Tp> &v)",
        ],
        "operator>=": [
            "bool",
            "(const basic_string<CharT, Traits, Alloc> &lhs, const CharT *rhs)",
        ],
        "rint": ["double", "(double x)"],
        "assoc_legendref": ["float", "(unsigned int l, unsigned int m, float x)"],
        "rpmatch": ["int", "(const char *response)"],
        "operator==": [
            "bool",
            "(const typename iterator_traits<Bi_iter>::value_type *lhs, const sub_match<Bi_iter> &rhs)",
        ],
        "operator<<": [
            "std::basic_ostream<CharT, Traits> &",
            "(std::basic_ostream<CharT, Traits> &os, const shuffle_order_engine<RandomNumberEngine, k> &x)",
        ],
        "strdup": ["char *", "(const char *s)"],
        "system": ["int", "(const char *command)"],
        "put_money": ["_Put_money<MoneyT>", "(const MoneyT &mon, bool intl = false)"],
        "atomic_store": ["void", "(__shared_ptr<Tp, Lp> *p, __shared_ptr<Tp, Lp> r)"],
        "operator" "s": ["basic_string<char32_t>", "(const char32_t *str, size_t len)"],
        "get_pointer_safety": ["pointer_safety", "()"],
        "operator>": [
            "bool",
            "(const time_point<Clock, Dur1> &lhs, const time_point<Clock, Dur2> &rhs)",
        ],
        "nextafterl": ["long double", "(long double x, long double y)"],
        "y1f": ["float", "(float)"],
        "merge": ["OIter", "(IIter1, IIter1, IIter2, IIter2, OIter, Compare)"],
        "mismatch": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, std::pair<ForwardIterator1, ForwardIterator2>>",
            "(ExecutionPolicy &&exec, ForwardIterator1 first1, ForwardIterator1 last1, ForwardIterator2 first2, ForwardIterator2 last2, BinaryPredicate pred)",
        ],
        "operator|=": [
            "syntax_option_type &",
            "(syntax_option_type &a, syntax_option_type b)",
        ],
        "operator&": [
            "_Expr<_BinClos<struct std::__bitwise_and, std::_Expr, std::_Constant, Dom, typename Dom::value_type>, typename __fun<struct std::__bitwise_and, typename Dom::value_type>::result_type>",
            "(const _Expr<Dom, typename Dom::value_type> &v, const typename Dom::value_type &t)",
        ],
        "getc_unlocked": ["int", "(FILE *stream)"],
        "make_optional": ["optional<decay_t<Tp>>", "(Tp &&t)"],
        "sigorset": [
            "int",
            "(sigset_t *set, const sigset_t *left, const sigset_t *right)",
        ],
        "pthread_mutex_lock": ["int", "(pthread_mutex_t *mutex)"],
        "isgreaterequal": ["bool", "(long double x, long double y)"],
        "strtof64x": [
            "_Float64x",
            "(const char *__restrict nptr, char **__restrict endptr)",
        ],
        "sort": ["void", "(RAIter, RAIter)"],
        "canonicalizef": ["int", "(float *cx, const float *x)"],
        "operator>=": [
            "bool",
            "(const typename iterator_traits<Bi_iter>::value_type &lhs, const sub_match<Bi_iter> &rhs)",
        ],
        "is_heap_until": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, RandomAccessIterator>",
            "(ExecutionPolicy &&exec, RandomAccessIterator first, RandomAccessIterator last)",
        ],
        "hermite": [
            "typename __gnu_cxx::__promote<Tp>::__type",
            "(unsigned int n, Tp x)",
        ],
        "pow": ["complex<Tp>", "(const complex<Tp> &, const Tp &)"],
        "operator^": [
            "syntax_option_type",
            "(syntax_option_type a, syntax_option_type b)",
        ],
        "operator|": ["_Ios_Openmode", "(_Ios_Openmode a, _Ios_Openmode b)"],
        "operator!=": ["bool", "(const allocator<T1> &, const allocator<T2> &)"],
        "pthread_condattr_getclock": [
            "int",
            "(const pthread_condattr_t *__restrict attr, __clockid_t *__restrict clock_id)",
        ],
        "vsscanf": [
            "int",
            "(const char *__restrict s, const char *__restrict format, __va_list_tag *arg)",
        ],
        "operator==": ["bool", "(const list<Tp, Alloc> &x, const list<Tp, Alloc> &y)"],
        "operator<": ["bool", "(const __shared_ptr<Tp, Lp> &a, nullptr_t)"],
        "fclose": ["int", "(FILE *stream)"],
        "ecvt": [
            "char *",
            "(double value, int ndigit, int *__restrict decpt, int *__restrict sign)",
        ],
        "mem_fun": ["const_mem_fun1_t<Ret, Tp, Arg>", "(Ret (Tp::*f)(Arg) const)"],
        "f64mulf64x": ["_Float64", "(_Float64x x, _Float64x y)"],
        "operator<<": [
            "_Expr<_BinClos<struct std::__shift_left, std::_Constant, std::_Expr, typename Dom::value_type, Dom>, typename __fun<struct std::__shift_left, typename Dom::value_type>::result_type>",
            "(const typename Dom::value_type &t, const _Expr<Dom, typename Dom::value_type> &v)",
        ],
        "tanhf64": ["_Float64", "(_Float64 x)"],
        "operator!=": [
            "bool",
            "(const typename iterator_traits<Bi_iter>::value_type *lhs, const sub_match<Bi_iter> &rhs)",
        ],
        "operator-": [
            "time_point<Clock, typename common_type<Dur1, duration<Rep2, Period2>>::type>",
            "(const time_point<Clock, Dur1> &lhs, const duration<Rep2, Period2> &rhs)",
        ],
        "qecvt_r": [
            "int",
            "(long double value, int ndigit, int *__restrict decpt, int *__restrict sign, char *__restrict buf, size_t len)",
        ],
        "totalorderf32x": ["int", "(const _Float32x *x, const _Float32x *y)"],
        "asin": [
            "_Expr<_UnClos<struct std::_Asin, std::_Expr, Dom>, typename Dom::value_type>",
            "(const _Expr<Dom, typename Dom::value_type> &e)",
        ],
        "exp": ["long double", "(long double x)"],
        "atomic_load_explicit": [
            "ITp",
            "(const volatile atomic<ITp> *a, memory_order m)",
        ],
        "skipws": ["ios_base &", "(ios_base &base)"],
        "j1l": ["long double", "(long double)"],
        "riemann_zetal": ["long double", "(long double s)"],
        "acosh": ["float", "(float x)"],
        "swap": ["void", "(_Bit_reference x, _Bit_reference y)"],
        "reverse": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, void>",
            "(ExecutionPolicy &&exec, BidirectionalIterator first, BidirectionalIterator last)",
        ],
        "putc_unlocked": ["int", "(int c, FILE *stream)"],
        "operator<=": [
            "bool",
            "(const deque<Tp, Alloc> &x, const deque<Tp, Alloc> &y)",
        ],
        "wcspbrk": ["wchar_t *", "(wchar_t *s1, const wchar_t *s2)"],
        "operator&=": ["launch &", "(launch &x, launch y)"],
        "pthread_mutexattr_setprotocol": [
            "int",
            "(pthread_mutexattr_t *attr, int protocol)",
        ],
        "nexttowardf": ["float", "(float x, long double y)"],
        "operator>>": [
            "basic_istream<CharT, Traits> &",
            "(basic_istream<CharT, Traits> &is, complex<Tp> &x)",
        ],
        "sph_bessell": ["long double", "(unsigned int n, long double x)"],
        "sph_bessel": [
            "typename __gnu_cxx::__promote<Tp>::__type",
            "(unsigned int n, Tp x)",
        ],
        "inclusive_scan": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, ForwardIterator2>",
            "(ExecutionPolicy &&exec, ForwardIterator1 first, ForwardIterator1 last, ForwardIterator2 result, BinaryOperation binary_op)",
        ],
        "operator+": [
            "typename common_type<duration<Rep1, Period1>, duration<Rep2, Period2>>::type",
            "(const duration<Rep1, Period1> &lhs, const duration<Rep2, Period2> &rhs)",
        ],
        "index": ["char *", "(const char *s, int c)"],
        "sinf64": ["_Float64", "(_Float64 x)"],
        "mkostemp": ["int", "(char *template, int flags)"],
        "pthread_mutexattr_gettype": [
            "int",
            "(const pthread_mutexattr_t *__restrict attr, int *__restrict kind)",
        ],
        "operator==": [
            "bool",
            "(const multiset<Key, Compare, Alloc> &x, const multiset<Key, Compare, Alloc> &y)",
        ],
        "operator!=": [
            "bool",
            "(const std::extreme_value_distribution<RealType> &d1, const std::extreme_value_distribution<RealType> &d2)",
        ],
        "fesetenv": ["int", "(const fenv_t *envp)"],
        "operator!=": ["bool", "(const list<Tp, Alloc> &x, const list<Tp, Alloc> &y)"],
        "operator>=": [
            "bool",
            "(const sub_match<BiIter> &lhs, const sub_match<BiIter> &rhs)",
        ],
        "operator<=": ["bool", "(const __shared_ptr<Tp, Lp> &a, nullptr_t)"],
        "operator-": [
            "_Expr<_BinClos<struct std::__minus, std::_Constant, std::_Expr, typename Dom::value_type, Dom>, typename __fun<struct std::__minus, typename Dom::value_type>::result_type>",
            "(const typename Dom::value_type &t, const _Expr<Dom, typename Dom::value_type> &v)",
        ],
        "pow": [
            "_Expr<_BinClos<struct std::_Pow, std::_ValArray, std::_Constant, Tp, Tp>, Tp>",
            "(const valarray<Tp> &v, const typename valarray<Tp>::value_type &t)",
        ],
        "memfrob": ["void *", "(void *s, size_t n)"],
        "operator^=": ["const _Ios_Fmtflags &", "(_Ios_Fmtflags &a, _Ios_Fmtflags b)"],
        "operator==": ["bool", "(const iterator &lhs, const iterator &rhs)"],
        "vsnprintf": [
            "int",
            "(char *__restrict s, size_t maxlen, const char *__restrict format, __va_list_tag *arg)",
        ],
        "operator==": [
            "bool",
            "(const uniform_real_distribution<RealType> &d1, const uniform_real_distribution<RealType> &d2)",
        ],
        "srand": ["void", "(unsigned int seed)"],
        "isnan": ["bool", "(float x)"],
        "setpayloadsig": ["int", "(double *x, double payload)"],
        "getopt": ["int", "(int argc, char *const *argv, const char *shortopts)"],
        "operator<<": [
            "basic_ostream<CharT, Traits> &",
            "(basic_ostream<CharT, Traits> &os, _Put_time<CharT> f)",
        ],
        "wcscmp": ["int", "(const wchar_t *s1, const wchar_t *s2)"],
        "swap": ["void", "(set<Key, Compare, Alloc> &x, set<Key, Compare, Alloc> &y)"],
        "log10": [
            "_Expr<_UnClos<struct std::_Log10, std::_Expr, Dom>, typename Dom::value_type>",
            "(const _Expr<Dom, typename Dom::value_type> &e)",
        ],
        "atan2": [
            "_Expr<_BinClos<struct std::_Atan2, std::_ValArray, std::_Expr, typename Dom::value_type, Dom>, typename Dom::value_type>",
            "(const valarray<typename Dom::valarray> &v, const _Expr<Dom, typename Dom::value_type> &e)",
        ],
        "operator==": [
            "__optional_eq_t<Tp, Up>",
            "(const optional<Tp> &lhs, const Up &rhs)",
        ],
        "copy_file": ["bool", "(const path &from, const path &to, error_code &ec)"],
        "operator>>": [
            "basic_istream<CharT, Traits> &",
            "(basic_istream<CharT, Traits> &is, basic_string<CharT, Traits, Alloc> &str)",
        ],
        "clock_adjtime": ["int", "(__clockid_t clock_id, struct timex *utx)"],
        "fabsf64": ["_Float64", "(_Float64 x)"],
        "find": [
            "typename __gnu_cxx::__enable_if<__is_char<CharT>::__value, istreambuf_iterator<CharT>>::__type",
            "(istreambuf_iterator<CharT> first, istreambuf_iterator<CharT> last, const CharT &val)",
        ],
        "sort": ["void", "(RAIter, RAIter, Compare)"],
        "operator==": ["bool", "(const complex<Tp> &x, const Tp &y)"],
        "operator^": ["perms", "(perms x, perms y)"],
        "timelocal": ["time_t", "(struct tm *tp)"],
        "operator!=": [
            "_Expr<_BinClos<struct std::__not_equal_to, std::_ValArray, std::_Expr, typename Dom::value_type, Dom>, typename __fun<struct std::__not_equal_to, typename Dom::value_type>::result_type>",
            "(const valarray<typename Dom::value_type> &v, const _Expr<Dom, typename Dom::value_type> &e)",
        ],
        "f32divf64x": ["_Float32", "(_Float64x x, _Float64x y)"],
        "operator!=": [
            "bool",
            "(const std::bernoulli_distribution &d1, const std::bernoulli_distribution &d2)",
        ],
        "cos": ["float", "(float x)"],
        "iswspace_l": ["int", "(wint_t wc, locale_t locale)"],
        "operator>=": [
            "bool",
            "(const __sub_match_string<Bi_iter, Ch_traits, Ch_alloc> &lhs, const sub_match<Bi_iter> &rhs)",
        ],
        "operator!=": [
            "bool",
            "(const multiset<Key, Compare, Alloc> &x, const multiset<Key, Compare, Alloc> &y)",
        ],
        "strnlen": ["size_t", "(const char *string, size_t maxlen)"],
        "operator>=": [
            "bool",
            "(const reverse_iterator<Iterator> &x, const reverse_iterator<Iterator> &y)",
        ],
        "fma": ["long double", "(long double x, long double y, long double z)"],
        "operator|=": ["perm_options &", "(perm_options &x, perm_options y)"],
        "operator^=": ["launch &", "(launch &x, launch y)"],
        "islessequal": ["bool", "(long double x, long double y)"],
        "renameat2": [
            "int",
            "(int oldfd, const char *old, int newfd, const char *new, unsigned int flags)",
        ],
        "operator!=": ["bool", "(const iterator &lhs, const iterator &rhs)"],
        "remainder": [
            "typename __gnu_cxx::__promote_2<Tp, Up>::__type",
            "(Tp x, Up y)",
        ],
        "sigtimedwait": [
            "int",
            "(const sigset_t *__restrict set, siginfo_t *__restrict info, const struct timespec *__restrict timeout)",
        ],
        "getcpu": ["int", "(unsigned int *, unsigned int *)"],
        "find": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, ForwardIterator>",
            "(ExecutionPolicy &&exec, ForwardIterator first, ForwardIterator last, const Tp &value)",
        ],
        "wcstof_l": [
            "float",
            "(const wchar_t *__restrict nptr, wchar_t **__restrict endptr, locale_t loc)",
        ],
        "isblank_l": ["int", "(int, locale_t)"],
        "pthread_barrierattr_getpshared": [
            "int",
            "(const pthread_barrierattr_t *__restrict attr, int *__restrict pshared)",
        ],
        "getw": ["int", "(FILE *stream)"],
        "pthread_attr_getstacksize": [
            "int",
            "(const pthread_attr_t *__restrict attr, size_t *__restrict stacksize)",
        ],
        "clock_getres": ["int", "(clockid_t clock_id, struct timespec *res)"],
        "operator>": [
            "bool",
            "(const _Bit_iterator_base &x, const _Bit_iterator_base &y)",
        ],
        "asin": ["double", "(double x)"],
        "exp": ["double", "(double x)"],
        "pthread_attr_getstackaddr": [
            "int",
            "(const pthread_attr_t *__restrict attr, void **__restrict stackaddr)",
        ],
        "atomic_fetch_or_explicit": [
            "ITp",
            "(__atomic_base<ITp> *a, __atomic_val_t<ITp> i, memory_order m)",
        ],
        "operator!=": ["bool", "(const complex<Tp> &x, const Tp &y)"],
        "set_intersection": ["OIter", "(IIter1, IIter1, IIter2, IIter2, OIter)"],
        "wcsstr": ["wchar_t *", "(wchar_t *s1, const wchar_t *s2)"],
        "get_deleter": ["Del *", "<typename Del>(const __shared_ptr<Tp, Lp> &p)"],
        "fdimf": ["float", "(float x, float y)"],
        "operator<": [
            "_Expr<_BinClos<struct std::__less, std::_Expr, std::_Expr, Dom1, Dom2>, typename __fun<struct std::__less, typename Dom1::value_type>::result_type>",
            "(const _Expr<Dom1, typename Dom1::value_type> &v, const _Expr<Dom2, typename Dom2::value_type> &w)",
        ],
        "wcsxfrm_l": [
            "size_t",
            "(wchar_t *s1, const wchar_t *s2, size_t n, locale_t loc)",
        ],
        "binary_search": ["bool", "(FIter, FIter, const Tp &, Compare)"],
        "operator>": [
            "bool",
            "(const duration<Rep1, Period1> &lhs, const duration<Rep2, Period2> &rhs)",
        ],
        "expm1f32": ["_Float32", "(_Float32 x)"],
        "acosf32x": ["_Float32x", "(_Float32x x)"],
        "kill": ["int", "(__pid_t pid, int sig)"],
        "cyl_bessel_j": [
            "typename __gnu_cxx::__promote_2<Tpnu, Tp>::__type",
            "(Tpnu nu, Tp x)",
        ],
        "pthread_setname_np": ["int", "(pthread_t target_thread, const char *name)"],
        "sph_legendrel": [
            "long double",
            "(unsigned int l, unsigned int m, long double theta)",
        ],
        "fmaf64x": ["_Float64x", "(_Float64x x, _Float64x y, _Float64x z)"],
        "transform_reduce": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, Tp>",
            "(ExecutionPolicy &&exec, ForwardIterator first, ForwardIterator last, Tp init, BinaryOperation binary_op, UnaryOperation unary_op)",
        ],
        "strtoq": [
            "long long",
            "(const char *__restrict nptr, char **__restrict endptr, int base)",
        ],
        "catclose": ["int", "(nl_catd catalog)"],
        "forward": [
            "Tp &&",
            "<typename Tp>(typename std::remove_reference<Tp>::type &&t)",
        ],
        "tan": ["float", "(float x)"],
        "operator|": [
            "syntax_option_type",
            "(syntax_option_type a, syntax_option_type b)",
        ],
        "cosh": ["long double", "(long double x)"],
        "rotate_copy": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, ForwardIterator2>",
            "(ExecutionPolicy &&exec, ForwardIterator1 first, ForwardIterator1 middle, ForwardIterator1 last, ForwardIterator2 result)",
        ],
        "erfl": ["long double", "(long double)"],
        "psignal": ["void", "(int sig, const char *s)"],
        "current_path": ["void", "(const path &p, error_code &ec)"],
        "acosh": ["std::complex<Tp>", "(const std::complex<Tp> &)"],
        "setstate_r": [
            "int",
            "(char *__restrict statebuf, struct random_data *__restrict buf)",
        ],
        "operator<": [
            "bool",
            "(basic_string_view<CharT, Traits> x, basic_string_view<CharT, Traits> y)",
        ],
        "fmaxmagf32x": ["_Float32x", "(_Float32x x, _Float32x y)"],
        "operator!=": [
            "bool",
            "(const std::geometric_distribution<IntType> &d1, const std::geometric_distribution<IntType> &d2)",
        ],
        "wcsxfrm": [
            "size_t",
            "(wchar_t *__restrict s1, const wchar_t *__restrict s2, size_t n)",
        ],
        "exists": ["bool", "(const path &p)"],
        "operator>": ["bool", "(monostate, monostate)"],
        "isunordered": ["bool", "(float x, float y)"],
        "fdim": ["long double", "(long double x, long double y)"],
        "abs": [
            "_Expr<_UnClos<struct std::_Abs, std::_Expr, Dom>, typename Dom::value_type>",
            "(const _Expr<Dom, typename Dom::value_type> &e)",
        ],
        "isnan": ["bool", "(double x)"],
        "partial_sort_copy": ["RAIter", "(IIter, IIter, RAIter, RAIter)"],
        "pthread_clockjoin_np": [
            "int",
            "(pthread_t th, void **thread_return, clockid_t clockid, const struct timespec *abstime)",
        ],
        "ispunct_l": ["int", "(int, locale_t)"],
        "pthread_setspecific": ["int", "(pthread_key_t key, const void *pointer)"],
        "swap": [
            "void",
            "(multimap<Key, Tp, Compare, Alloc> &x, multimap<Key, Tp, Compare, Alloc> &y)",
        ],
        "launder": ["Tp *", "(Tp *p)"],
        "to_string": ["string", "(float val)"],
        "wcpcpy": [
            "wchar_t *",
            "(wchar_t *__restrict dest, const wchar_t *__restrict src)",
        ],
        "replace": ["void", "(FIter, FIter, const Tp &, const Tp &)"],
        "pthread_getattr_default_np": ["int", "(pthread_attr_t *attr)"],
        "iswdigit_l": ["int", "(wint_t wc, locale_t locale)"],
        "expm1": [
            "typename __gnu_cxx::__enable_if<__is_integer<Tp>::__value, double>::__type",
            "(Tp x)",
        ],
        "copysignf64": ["_Float64", "(_Float64 x, _Float64 y)"],
        "remove": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, ForwardIterator>",
            "(ExecutionPolicy &&exec, ForwardIterator first, ForwardIterator last, const Tp &value)",
        ],
        "operator&=": ["match_flag_type &", "(match_flag_type &a, match_flag_type b)"],
        "roundf32x": ["_Float32x", "(_Float32x x)"],
        "canonicalizef32x": ["int", "(_Float32x *cx, const _Float32x *x)"],
        "operator|": [
            "_Expr<_BinClos<__bitwise_or, std::_ValArray, std::_ValArray, Tp, Tp>, typename __fun<__bitwise_or, Tp>::result_type>",
            "(const valarray<Tp> &v, const valarray<Tp> &w)",
        ],
        "mblen": ["int", "(const char *s, size_t n)"],
        "y1f32x": ["_Float32x", "(_Float32x)"],
        "remove_copy_if": ["OIter", "(IIter, IIter, OIter, Predicate)"],
        "to_string": ["string", "(int val)"],
        "fmaxmagf64x": ["_Float64x", "(_Float64x x, _Float64x y)"],
        "swap": [
            "void",
            "(basic_istringstream<CharT, Traits, Allocator> &x, basic_istringstream<CharT, Traits, Allocator> &y)",
        ],
        "operator^": ["launch", "(launch x, launch y)"],
        "realloc": ["void *", "(void *ptr, size_t size)"],
        "last_write_time": ["file_time_type", "(const path &)"],
        "asin": [
            "typename __gnu_cxx::__enable_if<__is_integer<Tp>::__value, double>::__type",
            "(Tp x)",
        ],
        "ellint_2l": ["long double", "(long double k, long double phi)"],
        "operator" "if": ["std::complex<float>", "(unsigned long long num)"],
        "putenv": ["int", "(char *string)"],
        "any_cast": ["const ValueType *", "<typename ValueType>(const any *any)"],
        "abort": ["void", "()"],
        "scalbnf32": ["_Float32", "(_Float32 x, int n)"],
        "begin": ["Tp *", "(Tp (&arr)[Nm])"],
        "secure_getenv": ["char *", "(const char *name)"],
        "search_n": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, ForwardIterator>",
            "(ExecutionPolicy &&exec, ForwardIterator first, ForwardIterator last, Size count, const Tp &value)",
        ],
        "pthread_setschedprio": ["int", "(pthread_t target_thread, int prio)"],
        "set_difference": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, ForwardIterator>",
            "(ExecutionPolicy &&exec, ForwardIterator1 first1, ForwardIterator1 last1, ForwardIterator2 first2, ForwardIterator2 last2, ForwardIterator result, Compare comp)",
        ],
        "operator>=": [
            "__optional_ge_t<Tp, Up>",
            "(const optional<Tp> &lhs, const Up &rhs)",
        ],
        "isgreater": [
            "typename __gnu_cxx::__enable_if<(__is_arithmetic<Tp>::__value && __is_arithmetic<Up>::__value), bool>::__type",
            "(Tp x, Up y)",
        ],
        "operator<": [
            "bool",
            "(const move_iterator<IteratorL> &x, const move_iterator<IteratorR> &y)",
        ],
        "mem_fun_ref": ["mem_fun1_ref_t<Ret, Tp, Arg>", "(Ret (Tp::*f)(Arg))"],
        "iscanonical": ["int", "(long double val)"],
        "is_partitioned": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, bool>",
            "(ExecutionPolicy &&exec, ForwardIterator first, ForwardIterator last, UnaryPredicate pred)",
        ],
        "is_heap": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, bool>",
            "(ExecutionPolicy &&exec, RandomAccessIterator first, RandomAccessIterator last, Compare comp)",
        ],
        "operator&&": [
            "_Expr<_BinClos<struct std::__logical_and, std::_Expr, std::_Expr, Dom1, Dom2>, typename __fun<struct std::__logical_and, typename Dom1::value_type>::result_type>",
            "(const _Expr<Dom1, typename Dom1::value_type> &v, const _Expr<Dom2, typename Dom2::value_type> &w)",
        ],
        "search": ["FIter1", "(FIter1, FIter1, FIter2, FIter2)"],
        "reallocarray": ["void *", "(void *ptr, size_t nmemb, size_t size)"],
        "stable_sort": ["void", "(RAIter, RAIter, Compare)"],
        "clock_getcpuclockid": ["int", "(pid_t pid, clockid_t *clock_id)"],
        "operator==": [
            "bool",
            "(const independent_bits_engine<RandomNumberEngine, w, UIntType> &lhs, const independent_bits_engine<RandomNumberEngine, w, UIntType> &rhs)",
        ],
        "acoshf32": ["_Float32", "(_Float32 x)"],
        "set_symmetric_difference": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, ForwardIterator>",
            "(ExecutionPolicy &&exec, ForwardIterator1 first1, ForwardIterator1 last1, ForwardIterator2 first2, ForwardIterator2 last2, ForwardIterator result, Compare comp)",
        ],
        "expf64": ["_Float64", "(_Float64 x)"],
        "stoul": [
            "unsigned long",
            "(const wstring &str, size_t *idx = 0, int base = 10)",
        ],
        "pthread_spin_init": ["int", "(pthread_spinlock_t *lock, int pshared)"],
        "operator|": ["perms", "(perms x, perms y)"],
        "pthread_mutex_clocklock": [
            "int",
            "(pthread_mutex_t *__restrict mutex, clockid_t clockid, const struct timespec *__restrict abstime)",
        ],
        "remquof32x": ["_Float32x", "(_Float32x x, _Float32x y, int *quo)"],
        "operator<<": [
            "std::basic_ostream<CharT, Traits> &",
            "(std::basic_ostream<CharT, Traits> &os, const std::cauchy_distribution<RealType> &x)",
        ],
        "exp10": ["double", "(double x)"],
        "strerror_r": ["char *", "(int errnum, char *buf, size_t buflen)"],
        "operator^=": ["match_flag_type &", "(match_flag_type &a, match_flag_type b)"],
        "rand": ["int", "()"],
        "copy": ["void", "(const path &from, const path &to, copy_options options)"],
        "rethrow_if_nested": ["void", "(const Ex &ex)"],
        "atanh": ["long double", "(long double x)"],
        "scandir64": [
            "int",
            "(const char *__restrict dir, struct dirent64 ***__restrict namelist, int (*selector)(const struct dirent64 *), int (*cmp)(const struct dirent64 **, const struct dirent64 **))",
        ],
        "isprint": ["int", "(int)"],
        "pthread_mutexattr_init": ["int", "(pthread_mutexattr_t *attr)"],
        "cosh": ["double", "(double x)"],
        "tanf32": ["_Float32", "(_Float32 x)"],
        "operator<": ["bool", "(const array<Tp, Nm> &a, const array<Tp, Nm> &b)"],
        "atan": [
            "typename __gnu_cxx::__enable_if<__is_integer<Tp>::__value, double>::__type",
            "(Tp x)",
        ],
        "vswprintf": [
            "int",
            "(wchar_t *__restrict s, size_t n, const wchar_t *__restrict format, __va_list_tag *arg)",
        ],
        "significandl": ["long double", "(long double x)"],
        "ilogbf32": ["int", "(_Float32 x)"],
        "permissions": ["void", "(const path &p, perms prms, error_code &ec)"],
        "generate": ["void", "(FIter, FIter, Generator)"],
        "atomic_exchange": ["shared_ptr<Tp>", "(shared_ptr<Tp> *p, shared_ptr<Tp> r)"],
        "operator<=": [
            "bool",
            "(const move_iterator<IteratorL> &x, const move_iterator<IteratorR> &y)",
        ],
        "is_block_file": ["bool", "(const path &p)"],
        "exp2l": ["long double", "(long double x)"],
        "getwc": ["wint_t", "(__FILE *stream)"],
        "fdim": ["typename __gnu_cxx::__promote_2<Tp, Up>::__type", "(Tp x, Up y)"],
        "pthread_barrierattr_init": ["int", "(pthread_barrierattr_t *attr)"],
        "swap": ["void", "(path &lhs, path &rhs)"],
        "srand48_r": ["int", "(long seedval, struct drand48_data *buffer)"],
        "scandir": [
            "int",
            "(const char *__restrict dir, struct dirent ***__restrict namelist, int (*selector)(const struct dirent *), int (*cmp)(const struct dirent **, const struct dirent **))",
        ],
        "abs": ["__int128", "(__int128 x)"],
        "iswdigit": ["int", "(wint_t wc)"],
        "strncat": [
            "char *",
            "(char *__restrict dest, const char *__restrict src, size_t n)",
        ],
        "erff64": ["_Float64", "(_Float64)"],
        "pthread_rwlockattr_setpshared": [
            "int",
            "(pthread_rwlockattr_t *attr, int pshared)",
        ],
        "partition_copy": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, std::pair<ForwardIterator1, ForwardIterator2>>",
            "(ExecutionPolicy &&exec, ForwardIterator first, ForwardIterator last, ForwardIterator1 out_true, ForwardIterator2 out_false, UnaryPredicate pred)",
        ],
        "to_wstring": ["wstring", "(long val)"],
        "islessequal": [
            "typename __gnu_cxx::__enable_if<(__is_arithmetic<Tp>::__value && __is_arithmetic<Up>::__value), bool>::__type",
            "(Tp x, Up y)",
        ],
        "set_new_handler": ["new_handler", "(new_handler)"],
        "operator>>": [
            "_Expr<_BinClos<struct std::__shift_right, std::_Expr, std::_ValArray, Dom, typename Dom::value_type>, typename __fun<struct std::__shift_right, typename Dom::value_type>::result_type>",
            "(const _Expr<Dom, typename Dom::value_type> &e, const valarray<typename Dom::value_type> &v)",
        ],
        "rewinddir": ["void", "(DIR *dirp)"],
        "qfcvt": [
            "char *",
            "(long double value, int ndigit, int *__restrict decpt, int *__restrict sign)",
        ],
        "strncasecmp": ["int", "(const char *s1, const char *s2, size_t n)"],
        "atexit": ["int", "(void (*func)())"],
        "jnf32x": ["_Float32x", "(int, _Float32x)"],
        "atan2": ["float", "(float y, float x)"],
        "replace_copy_if": ["OIter", "(Iter, Iter, OIter, Predicate, const Tp &)"],
        "to_string": ["string", "(double val)"],
        "operator+": [
            "basic_string<CharT, Traits, Alloc>",
            "(const basic_string<CharT, Traits, Alloc> &lhs, const basic_string<CharT, Traits, Alloc> &rhs)",
        ],
        "f32addf32x": ["_Float32", "(_Float32x x, _Float32x y)"],
        "fmaf32x": ["_Float32x", "(_Float32x x, _Float32x y, _Float32x z)"],
        "all_of": ["bool", "(IIter, IIter, Predicate)"],
        "operator==": [
            "bool",
            "(const time_point<Clock, Dur1> &lhs, const time_point<Clock, Dur2> &rhs)",
        ],
        "pthread_setconcurrency": ["int", "(int level)"],
        "closedir": ["int", "(DIR *dirp)"],
        "telldir": ["long", "(DIR *dirp)"],
        "wmemmove": ["wchar_t *", "(wchar_t *s1, const wchar_t *s2, size_t n)"],
        "remquof": ["float", "(float x, float y, int *quo)"],
        "operator>": [
            "_Expr<_BinClos<struct std::__greater, std::_Expr, std::_Expr, Dom1, Dom2>, typename __fun<struct std::__greater, typename Dom1::value_type>::result_type>",
            "(const _Expr<Dom1, typename Dom1::value_type> &v, const _Expr<Dom2, typename Dom2::value_type> &w)",
        ],
        "operator/": [
            "duration<__common_rep_t<Rep1, __disable_if_is_duration<Rep2>>, Period>",
            "(const duration<Rep1, Period> &d, const Rep2 &s)",
        ],
        "operator==": [
            "bool",
            "(const reverse_iterator<IteratorL> &x, const reverse_iterator<IteratorR> &y)",
        ],
        "unlockpt": ["int", "(int fd)"],
        "isnormal": ["bool", "(double x)"],
        "operator!=": [
            "bool",
            "(const std::discard_block_engine<RandomNumberEngine, p, r> &lhs, const std::discard_block_engine<RandomNumberEngine, p, r> &rhs)",
        ],
        "move_backward": ["BI2", "(BI1 first, BI1 last, BI2 result)"],
        "transform_reduce": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, Tp>",
            "(ExecutionPolicy &&exec, ForwardIterator1 first1, ForwardIterator1 last1, ForwardIterator2 first2, Tp init)",
        ],
        "wcstoll_l": [
            "long long",
            "(const wchar_t *__restrict nptr, wchar_t **__restrict endptr, int base, locale_t loc)",
        ],
        "operator" "s": ["basic_string<char>", "(const char *str, size_t len)"],
        "operator>=": ["bool", "(const queue<Tp, Seq> &x, const queue<Tp, Seq> &y)"],
        "log1p": ["double", "(double x)"],
        "acosf": ["float", "(float x)"],
        "atomic_compare_exchange_weak_explicit": [
            "bool",
            "(__shared_ptr<Tp, Lp> *p, __shared_ptr<Tp, Lp> *v, __shared_ptr<Tp, Lp> w, memory_order success, memory_order failure)",
        ],
        "hypot": ["double", "(double x, double y)"],
        "fminl": ["long double", "(long double x, long double y)"],
        "operator<": [
            "bool",
            "(const set<Key, Compare, Alloc> &x, const set<Key, Compare, Alloc> &y)",
        ],
        "fgetpos": ["int", "(FILE *__restrict stream, fpos_t *__restrict pos)"],
        "operator>": ["bool", "(const __shared_ptr<Tp, Lp> &a, nullptr_t)"],
        "swap": ["void", "(any &x, any &y)"],
        "roundevenf64": ["_Float64", "(_Float64 x)"],
        "operator|": ["launch", "(launch x, launch y)"],
        "sinf32": ["_Float32", "(_Float32 x)"],
        "operator<": ["bool", "(const optional<Tp> &, nullopt_t)"],
        "operator!=": ["bool", "(const pair<T1, T2> &x, const pair<T1, T2> &y)"],
        "getpayload": ["double", "(const double *x)"],
        "totalordermagf32x": ["int", "(const _Float32x *x, const _Float32x *y)"],
        "operator<<": [
            "typename enable_if<__and_<__not_<is_lvalue_reference<Ostream>>, __is_convertible_to_basic_ostream<Ostream>, __is_insertable<__rvalue_ostream_type<Ostream>, const Tp &>>::value, __rvalue_ostream_type<Ostream>>::type",
            "(Ostream &&os, const Tp &x)",
        ],
        "operator==": [
            "bool",
            "(const unordered_multimap<Key, Tp, Hash, Pred, Alloc> &x, const unordered_multimap<Key, Tp, Hash, Pred, Alloc> &y)",
        ],
        "nexttowardl": ["long double", "(long double x, long double y)"],
        "getpayloadf32x": ["_Float32x", "(const _Float32x *x)"],
        "includes": ["bool", "(IIter1, IIter1, IIter2, IIter2, Compare)"],
        "operator!=": [
            "bool",
            "(const time_point<Clock, Dur1> &lhs, const time_point<Clock, Dur2> &rhs)",
        ],
        "operator*": [
            "_Expr<_BinClos<__multiplies, std::_ValArray, std::_ValArray, Tp, Tp>, typename __fun<__multiplies, Tp>::result_type>",
            "(const valarray<Tp> &v, const valarray<Tp> &w)",
        ],
        "tanf64x": ["_Float64x", "(_Float64x x)"],
        "operator^": ["match_flag_type", "(match_flag_type a, match_flag_type b)"],
        "pthread_barrier_destroy": ["int", "(pthread_barrier_t *barrier)"],
        "cos": [
            "_Expr<_UnClos<struct std::_Cos, std::_Expr, Dom>, typename Dom::value_type>",
            "(const _Expr<Dom, typename Dom::value_type> &e)",
        ],
        "nearbyint": [
            "typename __gnu_cxx::__enable_if<__is_integer<Tp>::__value, double>::__type",
            "(Tp x)",
        ],
        "operator!=": [
            "bool",
            "(const reverse_iterator<IteratorL> &x, const reverse_iterator<IteratorR> &y)",
        ],
        "stod": ["double", "(const wstring &str, size_t *idx = 0)"],
        "llogbf64x": ["long", "(_Float64x x)"],
        "operator!=": [
            "_Expr<_BinClos<__not_equal_to, std::_ValArray, std::_ValArray, Tp, Tp>, typename __fun<__not_equal_to, Tp>::result_type>",
            "(const valarray<Tp> &v, const valarray<Tp> &w)",
        ],
        "acoshf": ["float", "(float x)"],
        "llrintf32": ["long long", "(_Float32 x)"],
        "sph_legendre": [
            "typename __gnu_cxx::__promote<Tp>::__type",
            "(unsigned int l, unsigned int m, Tp theta)",
        ],
        "logf32x": ["_Float32x", "(_Float32x x)"],
        "copysignf32": ["_Float32", "(_Float32 x, _Float32 y)"],
        "setpayloadl": ["int", "(long double *x, long double payload)"],
        "legendre": [
            "typename __gnu_cxx::__promote<Tp>::__type",
            "(unsigned int l, Tp x)",
        ],
        "operator<=": [
            "bool",
            "(const set<Key, Compare, Alloc> &x, const set<Key, Compare, Alloc> &y)",
        ],
        "log2": ["float", "(float x)"],
        "cyl_bessel_jf": ["float", "(float nu, float x)"],
        "strverscmp": ["int", "(const char *s1, const char *s2)"],
        "atan": [
            "_Expr<_UnClos<struct std::_Atan, std::_ValArray, Tp>, Tp>",
            "(const valarray<Tp> &v)",
        ],
        "operator>>": [
            "basic_istream<char, Traits> &",
            "(basic_istream<char, Traits> &in, signed char &c)",
        ],
        "pthread_setschedparam": [
            "int",
            "(pthread_t target_thread, int policy, const struct sched_param *param)",
        ],
        "is_directory": ["bool", "(const path &p, error_code &ec)"],
        "mem_fun_ref": ["mem_fun_ref_t<Ret, Tp>", "(Ret (Tp::*f)())"],
        "max_element": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, ForwardIterator>",
            "(ExecutionPolicy &&exec, ForwardIterator first, ForwardIterator last, Compare comp)",
        ],
        "operator<<": [
            "basic_ostream<char, Traits> &",
            "(basic_ostream<char, Traits> &out, const signed char *s)",
        ],
        "lower_bound": [
            "ForwardIterator",
            "(ForwardIterator first, ForwardIterator last, const Tp &val)",
        ],
        "rand_r": ["int", "(unsigned int *seed)"],
        "operator!=": [
            "bool",
            "(const unordered_multimap<Key, Tp, Hash, Pred, Alloc> &x, const unordered_multimap<Key, Tp, Hash, Pred, Alloc> &y)",
        ],
        "expm1f64x": ["_Float64x", "(_Float64x x)"],
        "operator%": [
            "duration<__common_rep_t<Rep1, __disable_if_is_duration<Rep2>>, Period>",
            "(const duration<Rep1, Period> &d, const Rep2 &s)",
        ],
        "operator+": [
            "time_point<Clock, typename common_type<duration<Rep1, Period1>, Dur2>::type>",
            "(const duration<Rep1, Period1> &lhs, const time_point<Clock, Dur2> &rhs)",
        ],
        "fopen64": [
            "FILE *",
            "(const char *__restrict filename, const char *__restrict modes)",
        ],
        "atomic_exchange_explicit": [
            "ITp",
            "(atomic<ITp> *a, __atomic_val_t<ITp> i, memory_order m)",
        ],
        "islessgreater": ["bool", "(long double x, long double y)"],
        "is_symlink": ["bool", "(const path &p)"],
        "atanhf32x": ["_Float32x", "(_Float32x x)"],
        "operator>>": [
            "std::basic_istream<CharT, Traits> &",
            "(std::basic_istream<CharT, Traits> &is, discard_block_engine<RandomNumberEngine, p, r> &x)",
        ],
        "ynl": ["long double", "(int, long double)"],
        "operator==": [
            "bool",
            "(const allocator<type-parameter-0-0> &, const allocator<type-parameter-0-0> &)",
        ],
        "get_temporary_buffer": [
            "pair<Tp *, ptrdiff_t>",
            "<typename Tp>(ptrdiff_t len)",
        ],
        "data": ["const Tp *", "(initializer_list<Tp> il)"],
        "islessgreater": ["bool", "(float x, float y)"],
        "operator<<": [
            "std::basic_ostream<CharT, Traits> &",
            "(std::basic_ostream<CharT, Traits> &os, const discard_block_engine<RandomNumberEngine, p, r> &x)",
        ],
        "fegetexceptflag": ["int", "(fexcept_t *flagp, int excepts)"],
        "expm1f64": ["_Float64", "(_Float64 x)"],
        "end": ["directory_iterator", "(directory_iterator)"],
        "operator!=": [
            "bool",
            "(const std::cauchy_distribution<RealType> &d1, const std::cauchy_distribution<RealType> &d2)",
        ],
        "operator&": [
            "syntax_option_type",
            "(syntax_option_type a, syntax_option_type b)",
        ],
        "j1f32x": ["_Float32x", "(_Float32x)"],
        "swap": ["void", "(promise<Res> &x, promise<Res> &y)"],
        "cos": ["complex<Tp>", "(const complex<Tp> &)"],
        "bzero": ["void", "(void *s, size_t n)"],
        "roundevenf32": ["_Float32", "(_Float32 x)"],
        "operator<=": [
            "__optional_le_t<Tp, Up>",
            "(const optional<Tp> &lhs, const optional<Up> &rhs)",
        ],
        "fcvt_r": [
            "int",
            "(double value, int ndigit, int *__restrict decpt, int *__restrict sign, char *__restrict buf, size_t len)",
        ],
        "atan2": ["long double", "(long double y, long double x)"],
        "isnan": ["bool", "(long double x)"],
        "floor": ["float", "(float x)"],
        "regex_search": [
            "bool",
            "(const basic_string<Ch_type, Ch_traits, String_allocator> &s, const basic_regex<Ch_type, Rx_traits> &e, regex_constants::match_flag_type flags = regex_constants::match_default)",
        ],
        "operator-": [
            "_Expr<_BinClos<struct std::__minus, std::_Expr, std::_ValArray, Dom, typename Dom::value_type>, typename __fun<struct std::__minus, typename Dom::value_type>::result_type>",
            "(const _Expr<Dom, typename Dom::value_type> &e, const valarray<typename Dom::value_type> &v)",
        ],
        "operator==": [
            "_Expr<_BinClos<struct std::__equal_to, std::_Expr, std::_ValArray, Dom, typename Dom::value_type>, typename __fun<struct std::__equal_to, typename Dom::value_type>::result_type>",
            "(const _Expr<Dom, typename Dom::value_type> &e, const valarray<typename Dom::value_type> &v)",
        ],
        "operator||": [
            "_Expr<_BinClos<struct std::__logical_or, std::_ValArray, std::_Expr, typename Dom::value_type, Dom>, typename __fun<struct std::__logical_or, typename Dom::value_type>::result_type>",
            "(const valarray<typename Dom::value_type> &v, const _Expr<Dom, typename Dom::value_type> &e)",
        ],
        "erff32": ["_Float32", "(_Float32)"],
        "floorf": ["float", "(float x)"],
        "valloc": ["void *", "(size_t size)"],
        "sigset": ["__sighandler_t", "(int sig, __sighandler_t disp)"],
        "operator==": [
            "bool",
            "(const _Bit_iterator_base &x, const _Bit_iterator_base &y)",
        ],
        "operator<<": [
            "basic_ostream<CharT, Traits> &",
            "(basic_ostream<CharT, Traits> &os, _Setprecision f)",
        ],
        "get_time": ["_Get_time<CharT>", "(std::tm *tmb, const CharT *fmt)"],
        "llroundl": ["long long", "(long double x)"],
        "imag": ["Tp", "(const complex<Tp> &z)"],
        "getloadavg": ["int", "(double *loadavg, int nelem)"],
        "lround": ["long", "(float x)"],
        "operator!=": [
            "bool",
            "(const allocator<type-parameter-0-0> &, const allocator<type-parameter-0-0> &)",
        ],
        "operator<": [
            "bool",
            "(__type_identity_t<basic_string_view<CharT, Traits>> x, basic_string_view<CharT, Traits> y)",
        ],
        "adjacent_difference": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, ForwardIterator2>",
            "(ExecutionPolicy &&exec, ForwardIterator1 first, ForwardIterator1 last, ForwardIterator2 d_first, BinaryOperation op)",
        ],
        "lower_bound": ["FIter", "(FIter, FIter, const Tp &, Compare)"],
        "operator||": [
            "_Expr<_BinClos<struct std::__logical_or, std::_Expr, std::_ValArray, Dom, typename Dom::value_type>, typename __fun<struct std::__logical_or, typename Dom::value_type>::result_type>",
            "(const _Expr<Dom, typename Dom::value_type> &e, const valarray<typename Dom::value_type> &v)",
        ],
        "fmaxf64": ["_Float64", "(_Float64 x, _Float64 y)"],
        "setlocale": ["char *", "(int category, const char *locale)"],
        "f32mulf64": ["_Float32", "(_Float64 x, _Float64 y)"],
        "sigblock": ["int", "(int mask)"],
        "f32subf64x": ["_Float32", "(_Float64x x, _Float64x y)"],
        "equal": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, bool>",
            "(ExecutionPolicy &&exec, ForwardIterator1 first1, ForwardIterator1 last1, ForwardIterator2 first2, BinaryPredicate p)",
        ],
        "pthread_mutex_consistent_np": ["int", "(pthread_mutex_t *mutex)"],
        "unique_copy": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, ForwardIterator2>",
            "(ExecutionPolicy &&exec, ForwardIterator1 first, ForwardIterator1 last, ForwardIterator2 result, BinaryPredicate pred)",
        ],
        "operator||": [
            "_Expr<_BinClos<__logical_or, std::_ValArray, std::_ValArray, Tp, Tp>, typename __fun<__logical_or, Tp>::result_type>",
            "(const valarray<Tp> &v, const valarray<Tp> &w)",
        ],
        "noboolalpha": ["ios_base &", "(ios_base &base)"],
        "setpayload": ["int", "(double *x, double payload)"],
        "operator>>": [
            "basic_istream<CharT, Traits> &",
            "(basic_istream<CharT, Traits> &is, _Get_money<MoneyT> f)",
        ],
        "ceill": ["long double", "(long double x)"],
        "setpayloadf": ["int", "(float *x, float payload)"],
        "llogbf": ["long", "(float x)"],
        "totalordermagf32": ["int", "(const _Float32 *x, const _Float32 *y)"],
        "asinhf32": ["_Float32", "(_Float32 x)"],
        "operator>>": [
            "basic_istream<CharT, Traits> &",
            "(basic_istream<CharT, Traits> &in, CharT *s)",
        ],
        "regex_match": [
            "bool",
            "(Bi_iter first, Bi_iter last, const basic_regex<Ch_type, Rx_traits> &re, regex_constants::match_flag_type flags = regex_constants::match_default)",
        ],
        "fmaf64": ["_Float64", "(_Float64 x, _Float64 y, _Float64 z)"],
        "operator<<": [
            "std::basic_ostream<CharT, Traits> &",
            "(std::basic_ostream<CharT, Traits> &os, const student_t_distribution<RealType> &x)",
        ],
        "cbrtf32": ["_Float32", "(_Float32 x)"],
        "any_of": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, bool>",
            "(ExecutionPolicy &&exec, ForwardIterator first, ForwardIterator last, Predicate pred)",
        ],
        "f64subf64x": ["_Float64", "(_Float64x x, _Float64x y)"],
        "regex_search": [
            "bool",
            "(const Ch_type *s, match_results<const Ch_type *, Alloc> &m, const basic_regex<Ch_type, Rx_traits> &e, regex_constants::match_flag_type f = regex_constants::match_default)",
        ],
        "operator>": [
            "bool",
            "(basic_string_view<CharT, Traits> x, basic_string_view<CharT, Traits> y)",
        ],
        "ffs": ["int", "(int i)"],
        "erfc": [
            "typename __gnu_cxx::__enable_if<__is_integer<Tp>::__value, double>::__type",
            "(Tp x)",
        ],
        "fromfp": ["__intmax_t", "(double x, int round, unsigned int width)"],
        "l64a": ["char *", "(long n)"],
        "operator>=": [
            "_Expr<_BinClos<struct std::__greater_equal, std::_Expr, std::_ValArray, Dom, typename Dom::value_type>, typename __fun<struct std::__greater_equal, typename Dom::value_type>::result_type>",
            "(const _Expr<Dom, typename Dom::value_type> &e, const valarray<typename Dom::value_type> &v)",
        ],
        "llroundf32x": ["long long", "(_Float32x x)"],
        "towctrans": ["wint_t", "(wint_t wc, wctrans_t desc)"],
        "isxdigit": ["bool", "(CharT, const locale &)"],
        "operator<": ["bool", "(const shared_ptr<Tp> &a, nullptr_t)"],
        "regex_replace": [
            "basic_string<Ch_type, St, Sa>",
            "(const basic_string<Ch_type, St, Sa> &s, const basic_regex<Ch_type, Rx_traits> &e, const basic_string<Ch_type, Fst, Fsa> &fmt, regex_constants::match_flag_type flags = regex_constants::match_default)",
        ],
        "strcspn": ["size_t", "(const char *s, const char *reject)"],
        "operator delete[]": ["void", "(void *, const std::nothrow_t &)"],
        "operator==": ["bool", "(monostate, monostate)"],
        "push_heap": ["void", "(RAIter, RAIter)"],
        "operator+": [
            "basic_string<CharT, Traits, Alloc>",
            "(basic_string<CharT, Traits, Alloc> &&lhs, const basic_string<CharT, Traits, Alloc> &rhs)",
        ],
        "operator!=": [
            "bool",
            "(const std::subtract_with_carry_engine<UIntType, w, s, r> &lhs, const std::subtract_with_carry_engine<UIntType, w, s, r> &rhs)",
        ],
        "getwchar": ["wint_t", "()"],
        "putwc": ["wint_t", "(wchar_t wc, __FILE *stream)"],
        "operator<=": [
            "bool",
            "(__type_identity_t<basic_string_view<CharT, Traits>> x, basic_string_view<CharT, Traits> y)",
        ],
        "operator==": [
            "bool",
            "(const shuffle_order_engine<RandomNumberEngine, k> &lhs, const shuffle_order_engine<RandomNumberEngine, k> &rhs)",
        ],
        "atan2f32x": ["_Float32x", "(_Float32x y, _Float32x x)"],
        "operator+": [
            "_Expr<_BinClos<__plus, std::_ValArray, std::_ValArray, Tp, Tp>, typename __fun<__plus, Tp>::result_type>",
            "(const valarray<Tp> &v, const valarray<Tp> &w)",
        ],
        "_obstack_memory_used": ["int", "(struct obstack *)"],
        "acoshf64x": ["_Float64x", "(_Float64x x)"],
        "fill": ["void", "(_Bit_iterator first, _Bit_iterator last, const bool &x)"],
        "operator<=": [
            "__optional_le_t<Up, Tp>",
            "(const Up &lhs, const optional<Tp> &rhs)",
        ],
        "atomic_fetch_xor_explicit": [
            "ITp",
            "(volatile __atomic_base<ITp> *a, __atomic_val_t<ITp> i, memory_order m)",
        ],
        "iszero": ["bool", "(T val)"],
        "operator>=": [
            "bool",
            "(const _Rb_tree<Key, Val, KeyOfValue, Compare, Alloc> &x, const _Rb_tree<Key, Val, KeyOfValue, Compare, Alloc> &y)",
        ],
        "pthread_sigmask": [
            "int",
            "(int how, const __sigset_t *__restrict newmask, __sigset_t *__restrict oldmask)",
        ],
        "operator<=": [
            "_Expr<_BinClos<__less_equal, std::_Constant, std::_ValArray, Tp, Tp>, typename __fun<__less_equal, Tp>::result_type>",
            "(const typename valarray<Tp>::value_type &t, const valarray<Tp> &v)",
        ],
        "frexp": [
            "typename __gnu_cxx::__enable_if<__is_integer<Tp>::__value, double>::__type",
            "(Tp x, int *exp)",
        ],
        "fromfpf64x": ["__intmax_t", "(_Float64x x, int round, unsigned int width)"],
        "log10l": ["long double", "(long double x)"],
        "copy": ["void", "(const path &from, const path &to)"],
        "setns": ["int", "(int fd, int nstype)"],
        "operator" "s": ["basic_string<wchar_t>", "(const wchar_t *str, size_t len)"],
        "wcstof64": [
            "_Float64",
            "(const wchar_t *__restrict nptr, wchar_t **__restrict endptr)",
        ],
        "scalbln": ["double", "(double x, long n)"],
        "operator>>": [
            "_Expr<_BinClos<struct std::__shift_right, std::_Expr, std::_Constant, Dom, typename Dom::value_type>, typename __fun<struct std::__shift_right, typename Dom::value_type>::result_type>",
            "(const _Expr<Dom, typename Dom::value_type> &v, const typename Dom::value_type &t)",
        ],
        "operator*": [
            "_Expr<_BinClos<struct std::__multiplies, std::_ValArray, std::_Expr, typename Dom::value_type, Dom>, typename __fun<struct std::__multiplies, typename Dom::value_type>::result_type>",
            "(const valarray<typename Dom::value_type> &v, const _Expr<Dom, typename Dom::value_type> &e)",
        ],
        "operator<=": ["bool", "(const array<Tp, Nm> &one, const array<Tp, Nm> &two)"],
        "is_regular_file": ["bool", "(const path &p)"],
        "pthread_detach": ["int", "(pthread_t th)"],
        "swap": ["void", "(shared_ptr<Tp> &a, shared_ptr<Tp> &b)"],
        "wcsrchr": ["wchar_t *", "(const wchar_t *wcs, wchar_t wc)"],
        "operator==": [
            "bool",
            "(const sub_match<Bi_iter> &lhs, const typename iterator_traits<Bi_iter>::value_type &rhs)",
        ],
        "atomic_is_lock_free": ["bool", "(const shared_ptr<Tp> *p)"],
        "operator>": [
            "bool",
            "(const move_iterator<IteratorL> &x, const move_iterator<IteratorR> &y)",
        ],
        "stoull": [
            "unsigned long long",
            "(const wstring &str, size_t *idx = 0, int base = 10)",
        ],
        "asinhf64x": ["_Float64x", "(_Float64x x)"],
        "operator!=": ["bool", "(monostate, monostate)"],
        "wcsncasecmp": ["int", "(const wchar_t *s1, const wchar_t *s2, size_t n)"],
        "wcstof32x_l": [
            "_Float32x",
            "(const wchar_t *__restrict nptr, wchar_t **__restrict endptr, locale_t loc)",
        ],
        "proximate": ["path", "(const path &p, error_code &ec)"],
        "regex_replace": [
            "basic_string<Ch_type, St, Sa>",
            "(const basic_string<Ch_type, St, Sa> &s, const basic_regex<Ch_type, Rx_traits> &e, const Ch_type *fmt, regex_constants::match_flag_type flags = regex_constants::match_default)",
        ],
        "lgammaf32x_r": ["_Float32x", "(_Float32x, int *signgamp)"],
        "expm1f32x": ["_Float32x", "(_Float32x x)"],
        "sin": [
            "_Expr<_UnClos<struct std::_Sin, std::_Expr, Dom>, typename Dom::value_type>",
            "(const _Expr<Dom, typename Dom::value_type> &e)",
        ],
        "rbegin": ["reverse_iterator<Tp *>", "(Tp (&arr)[Nm])"],
        "lround": ["long", "(double x)"],
        "atomic_exchange": ["ITp", "(volatile atomic<ITp> *a, __atomic_val_t<ITp> i)"],
        "remainderf64": ["_Float64", "(_Float64 x, _Float64 y)"],
        "pthread_cond_destroy": ["int", "(pthread_cond_t *cond)"],
        "set_union": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, ForwardIterator>",
            "(ExecutionPolicy &&exec, ForwardIterator1 first1, ForwardIterator1 last1, ForwardIterator2 first2, ForwardIterator2 last2, ForwardIterator result, Compare comp)",
        ],
        "data": ["Tp *", "(Tp (&array)[Nm])"],
        "tgammaf32x": ["_Float32x", "(_Float32x)"],
        "nearbyint": ["long double", "(long double x)"],
        "operator==": [
            "bool",
            "(const subtract_with_carry_engine<UIntType, w, s, r> &lhs, const subtract_with_carry_engine<UIntType, w, s, r> &rhs)",
        ],
        "operator==": [
            "bool",
            "(const istream_iterator<Tp, CharT, Traits, Dist> &x, const istream_iterator<Tp, CharT, Traits, Dist> &y)",
        ],
        "pthread_mutex_setprioceiling": [
            "int",
            "(pthread_mutex_t *__restrict mutex, int prioceiling, int *__restrict old_ceiling)",
        ],
        "push_heap": ["void", "(RAIter, RAIter, Compare)"],
        "scalblnf64x": ["_Float64x", "(_Float64x x, long n)"],
        "reduce": [
            "typename iterator_traits<InputIterator>::value_type",
            "(InputIterator first, InputIterator last)",
        ],
        "pthread_attr_setdetachstate": [
            "int",
            "(pthread_attr_t *attr, int detachstate)",
        ],
        "acos": [
            "typename __gnu_cxx::__enable_if<__is_integer<Tp>::__value, double>::__type",
            "(Tp x)",
        ],
        "atomic_store_explicit": [
            "void",
            "(volatile atomic<ITp> *a, __atomic_val_t<ITp> i, memory_order m)",
        ],
        "operator!=": [
            "bool",
            "(const std::exponential_distribution<RealType> &d1, const std::exponential_distribution<RealType> &d2)",
        ],
        "operator<=": [
            "bool",
            "(const unique_ptr<Tp, Dp> &x, const unique_ptr<Up, Ep> &y)",
        ],
        "psiginfo": ["void", "(const siginfo_t *pinfo, const char *s)"],
        "operator!=": [
            "bool",
            "(const sub_match<Bi_iter> &lhs, const typename iterator_traits<Bi_iter>::value_type &rhs)",
        ],
        "isalnum_l": ["int", "(int, locale_t)"],
        "nearbyintf64": ["_Float64", "(_Float64 x)"],
        "strpbrk": ["char *", "(char *s, const char *accept)"],
        "find": ["IIter", "(IIter, IIter, const Tp &)"],
        "partial_sum": [
            "OutputIterator",
            "(InputIterator first, InputIterator last, OutputIterator result, BinaryOperation binary_op)",
        ],
        "wcscoll_l": ["int", "(const wchar_t *s1, const wchar_t *s2, locale_t loc)"],
        "ctime": ["char *", "(const time_t *timer)"],
        "powl": ["long double", "(long double x, long double y)"],
        "make_error_code": ["error_code", "(io_errc e)"],
        "to_string": ["string", "(unsigned long long val)"],
        "logf": ["float", "(float x)"],
        "create_directory": [
            "bool",
            "(const path &p, const path &attributes, error_code &ec)",
        ],
        "back_inserter": ["back_insert_iterator<Container>", "(Container &x)"],
        "pthread_barrierattr_setpshared": [
            "int",
            "(pthread_barrierattr_t *attr, int pshared)",
        ],
        "operator>=": [
            "_Expr<_BinClos<__greater_equal, std::_ValArray, std::_ValArray, Tp, Tp>, typename __fun<__greater_equal, Tp>::result_type>",
            "(const valarray<Tp> &v, const valarray<Tp> &w)",
        ],
        "operator<": [
            "bool",
            "(const typename iterator_traits<Bi_iter>::value_type *lhs, const sub_match<Bi_iter> &rhs)",
        ],
        "j0f64": ["_Float64", "(_Float64)"],
        "isnormal": [
            "typename __gnu_cxx::__enable_if<__is_integer<Tp>::__value, bool>::__type",
            "(Tp x)",
        ],
        "tmpfile64": ["FILE *", "()"],
        "pthread_cond_clockwait": [
            "int",
            "(pthread_cond_t *__restrict cond, pthread_mutex_t *__restrict mutex, __clockid_t clock_id, const struct timespec *__restrict abstime)",
        ],
        "imaxabs": ["intmax_t", "(intmax_t n)"],
        "empty": ["decltype(cont.empty())", "(const Container &cont)"],
        "iswctype_l": ["int", "(wint_t wc, wctype_t desc, locale_t locale)"],
        "atanl": ["long double", "(long double x)"],
        "y1f64x": ["_Float64x", "(_Float64x)"],
        "sincosl": ["void", "(long double x, long double *sinx, long double *cosx)"],
        "fill": [
            "void",
            "(ForwardIterator first, ForwardIterator last, const Tp &value)",
        ],
        "launder": ["void", "(void *)"],
        "operator>>": [
            "std::basic_istream<CharT, Traits> &",
            "(std::basic_istream<CharT, Traits> &is, gamma_distribution<RealType> &x)",
        ],
        "pthread_mutexattr_setpshared": [
            "int",
            "(pthread_mutexattr_t *attr, int pshared)",
        ],
        "pthread_cancel": ["int", "(pthread_t th)"],
        "sort_heap": ["void", "(RAIter, RAIter)"],
        "empty": ["bool", "(initializer_list<Tp> il)"],
        "strtof32_l": [
            "_Float32",
            "(const char *__restrict nptr, char **__restrict endptr, locale_t loc)",
        ],
        "llround": [
            "typename __gnu_cxx::__enable_if<__is_integer<Tp>::__value, long long>::__type",
            "(Tp x)",
        ],
        "iswupper": ["int", "(wint_t wc)"],
        "bindtextdomain": ["char *", "(const char *domainname, const char *dirname)"],
        "f32xaddf64x": ["_Float32x", "(_Float64x x, _Float64x y)"],
        "operator<=": ["bool", "(nullopt_t, const optional<Tp> &)"],
        "nouppercase": ["ios_base &", "(ios_base &base)"],
        "acos": [
            "_Expr<_UnClos<struct std::_Acos, std::_ValArray, Tp>, Tp>",
            "(const valarray<Tp> &v)",
        ],
        "wcrtomb": [
            "size_t",
            "(char *__restrict s, wchar_t wc, mbstate_t *__restrict ps)",
        ],
        "asinf": ["float", "(float x)"],
        "atanhl": ["long double", "(long double x)"],
        "nearbyintf32": ["_Float32", "(_Float32 x)"],
        "to_integer": [
            "IntegerType",
            "<typename IntegerType>(__byte_op_t<IntegerType> b)",
        ],
        "qsort_r": [
            "void",
            "(void *base, size_t nmemb, size_t size, __compar_d_fn_t compar, void *arg)",
        ],
        "inplace_merge": ["void", "(BIter, BIter, BIter)"],
        "operator<": ["bool", "(const list<Tp, Alloc> &x, const list<Tp, Alloc> &y)"],
        "wmemcmp": ["int", "(const wchar_t *s1, const wchar_t *s2, size_t n)"],
        "polar": ["complex<Tp>", "(const Tp &, const Tp & = 0)"],
        "operator>=": ["bool", "(nullptr_t, const unique_ptr<Tp, Dp> &x)"],
        "search": ["FIter1", "(FIter1, FIter1, FIter2, FIter2, BinaryPredicate)"],
        "operator>": [
            "_Expr<_BinClos<__greater, std::_ValArray, std::_Constant, Tp, Tp>, typename __fun<__greater, Tp>::result_type>",
            "(const valarray<Tp> &v, const typename valarray<Tp>::value_type &t)",
        ],
        "operator|=": ["launch &", "(launch &x, launch y)"],
        "wcsrtombs": [
            "size_t",
            "(char *__restrict dst, const wchar_t **__restrict src, size_t len, mbstate_t *__restrict ps)",
        ],
        "operator+": [
            "_Expr<_BinClos<struct std::__plus, std::_Constant, std::_Expr, typename Dom::value_type, Dom>, typename __fun<struct std::__plus, typename Dom::value_type>::result_type>",
            "(const typename Dom::value_type &t, const _Expr<Dom, typename Dom::value_type> &v)",
        ],
        "inner_product": [
            "Tp",
            "(InputIterator1 first1, InputIterator1 last1, InputIterator2 first2, Tp init)",
        ],
        "textdomain": ["char *", "(const char *domainname)"],
        "operator delete[]": ["void", "(void *)"],
        "hypotf64": ["_Float64", "(_Float64 x, _Float64 y)"],
        "fromfpl": ["__intmax_t", "(long double x, int round, unsigned int width)"],
        "operator<=": [
            "bool",
            "(const typename iterator_traits<Bi_iter>::value_type *lhs, const sub_match<Bi_iter> &rhs)",
        ],
        "operator&": ["_Ios_Openmode", "(_Ios_Openmode a, _Ios_Openmode b)"],
        "logf64": ["_Float64", "(_Float64 x)"],
        "operator>>": [
            "basic_istream<CharT, Traits> &",
            "(basic_istream<CharT, Traits> &in, CharT &c)",
        ],
        "operator==": [
            "bool",
            "(const unordered_set<Value, Hash, Pred, Alloc> &x, const unordered_set<Value, Hash, Pred, Alloc> &y)",
        ],
        "lgammal": ["long double", "(long double)"],
        "modff": ["float", "(float x, float *iptr)"],
        "operator>": [
            "bool",
            "(const set<Key, Compare, Alloc> &x, const set<Key, Compare, Alloc> &y)",
        ],
        "feraiseexcept": ["int", "(int excepts)"],
        "ufromfpxf": ["__uintmax_t", "(float x, int round, unsigned int width)"],
        "wmemset": ["wchar_t *", "(wchar_t *s, wchar_t c, size_t n)"],
        "exclusive_scan": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, ForwardIterator2>",
            "(ExecutionPolicy &&exec, ForwardIterator1 first, ForwardIterator1 last, ForwardIterator2 result, Tp init, BinaryOperation binary_op)",
        ],
        "operator>=": ["bool", "(nullopt_t, const optional<Tp> &rhs)"],
        "assoc_laguerrel": [
            "long double",
            "(unsigned int n, unsigned int m, long double x)",
        ],
        "atanf32x": ["_Float32x", "(_Float32x x)"],
        "strcasestr": ["char *", "(char *haystack, const char *needle)"],
        "islower": ["bool", "(CharT, const locale &)"],
        "yield": ["void", "()"],
        "nearbyint": ["double", "(double x)"],
        "operator==": [
            "bool",
            "(const discard_block_engine<RandomNumberEngine, p, r> &lhs, const discard_block_engine<RandomNumberEngine, p, r> &rhs)",
        ],
        "fromfpxf32": ["__intmax_t", "(_Float32 x, int round, unsigned int width)"],
        "to_wstring": ["wstring", "(double val)"],
        "mem_fun": ["const_mem_fun_t<Ret, Tp>", "(Ret (Tp::*f)() const)"],
        "fgets_unlocked": [
            "char *",
            "(char *__restrict s, int n, FILE *__restrict stream)",
        ],
        "operator*": ["complex<Tp>", "(const complex<Tp> &x, const Tp &y)"],
        "dynamic_pointer_cast": [
            "__shared_ptr<Tp, Lp>",
            "<typename Tp>(const __shared_ptr<Tp1, Lp> &r)",
        ],
        "dsubl": ["double", "(long double x, long double y)"],
        "ellint_1f": ["float", "(float k, float phi)"],
        "fabs": ["Tp", "(const std::complex<Tp> &)"],
        "operator==": [
            "__optional_eq_t<Tp, Up>",
            "(const optional<Tp> &lhs, const optional<Up> &rhs)",
        ],
        "wcstold": [
            "long double",
            "(const wchar_t *__restrict nptr, wchar_t **__restrict endptr)",
        ],
        "operator delete": ["void", "(void *, const std::nothrow_t &)"],
        "operator==": ["bool", "(const _Self &x, const _Self &y)"],
        "log10": ["complex<Tp>", "(const complex<Tp> &)"],
        "cbrt": ["long double", "(long double x)"],
        "operator<=": ["bool", "(const list<Tp, Alloc> &x, const list<Tp, Alloc> &y)"],
        "operator>>": [
            "basic_istream<CharT, Traits> &",
            "(basic_istream<CharT, Traits> &is, _Setfill<CharT> f)",
        ],
        "iota": ["void", "(ForwardIterator first, ForwardIterator last, Tp value)"],
        "strchrnul": ["char *", "(char *s, int c)"],
        "crend": ["decltype(std::rend(cont))", "(const Container &cont)"],
        "dmull": ["double", "(long double x, long double y)"],
        "setw": ["_Setw", "(int n)"],
        "sinhl": ["long double", "(long double x)"],
        "modf": ["long double", "(long double x, long double *iptr)"],
        "hypot": ["float", "(float x, float y)"],
        "hexfloat": ["ios_base &", "(ios_base &base)"],
        "operator!=": [
            "bool",
            "(const unordered_set<Value, Hash, Pred, Alloc> &x, const unordered_set<Value, Hash, Pred, Alloc> &y)",
        ],
        "sort_heap": ["void", "(RAIter, RAIter, Compare)"],
        "uninitialized_fill_n": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, ForwardIterator>",
            "(ExecutionPolicy &&exec, ForwardIterator first, Size n, const Tp &value)",
        ],
        "remove_all": ["uintmax_t", "(const path &p, error_code &ec)"],
        "operator/": [
            "_Expr<_BinClos<struct std::__divides, std::_Expr, std::_Constant, Dom, typename Dom::value_type>, typename __fun<struct std::__divides, typename Dom::value_type>::result_type>",
            "(const _Expr<Dom, typename Dom::value_type> &v, const typename Dom::value_type &t)",
        ],
        "pthread_mutex_destroy": ["int", "(pthread_mutex_t *mutex)"],
        "operator&": [
            "_Expr<_BinClos<__bitwise_and, std::_ValArray, std::_Constant, Tp, Tp>, typename __fun<__bitwise_and, Tp>::result_type>",
            "(const valarray<Tp> &v, const typename valarray<Tp>::value_type &t)",
        ],
        "operator~": ["_Ios_Fmtflags", "(_Ios_Fmtflags a)"],
        "strtold": [
            "long double",
            "(const char *__restrict nptr, char **__restrict endptr)",
        ],
        "operator new": ["void *", "(std::size_t, std::align_val_t)"],
        "acosf32": ["_Float32", "(_Float32 x)"],
        "sqrtf": ["float", "(float x)"],
        "operator>": ["bool", "(const unique_ptr<Tp, Dp> &x, nullptr_t)"],
        "operator==": [
            "bool",
            "(const typename iterator_traits<Bi_iter>::value_type &lhs, const sub_match<Bi_iter> &rhs)",
        ],
        "stable_partition": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, BidirectionalIterator>",
            "(ExecutionPolicy &&exec, BidirectionalIterator first, BidirectionalIterator last, UnaryPredicate pred)",
        ],
        "expl": ["long double", "(long double x)"],
        "operator-": ["complex<Tp>", "(const complex<Tp> &x, const Tp &y)"],
        "wcstoq": [
            "long long",
            "(const wchar_t *__restrict nptr, wchar_t **__restrict endptr, int base)",
        ],
        "set_symmetric_difference": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, ForwardIterator>",
            "(ExecutionPolicy &&exec, ForwardIterator1 first1, ForwardIterator1 last1, ForwardIterator2 first2, ForwardIterator2 last2, ForwardIterator result)",
        ],
        "j0f32": ["_Float32", "(_Float32)"],
        "iswblank_l": ["int", "(wint_t wc, locale_t locale)"],
        "operator<<": [
            "std::basic_ostream<CharT, Traits> &",
            "(std::basic_ostream<CharT, Traits> &os, const discrete_distribution<IntType> &x)",
        ],
        "operator>=": ["bool", "(const path &lhs, const path &rhs)"],
        "operator<=": [
            "bool",
            "(const multiset<Key, Compare, Alloc> &x, const multiset<Key, Compare, Alloc> &y)",
        ],
        "operator!=": ["bool", "(const _Self &x, const _Self &y)"],
        "expintl": ["long double", "(long double x)"],
        "scalbnf32x": ["_Float32x", "(_Float32x x, int n)"],
        "pthread_timedjoin_np": [
            "int",
            "(pthread_t th, void **thread_return, const struct timespec *abstime)",
        ],
        "ufromfpf": ["__uintmax_t", "(float x, int round, unsigned int width)"],
        "atomic_compare_exchange_strong_explicit": [
            "bool",
            "(volatile atomic<ITp> *a, __atomic_val_t<ITp> *i1, __atomic_val_t<ITp> i2, memory_order m1, memory_order m2)",
        ],
        "uncaught_exceptions": ["int", "()"],
        "lgammaf64x": ["_Float64x", "(_Float64x)"],
        "sqrtf32": ["_Float32", "(_Float32 x)"],
        "is_socket": ["bool", "(const path &p, error_code &ec)"],
        "pow": [
            "_Expr<_BinClos<struct std::_Pow, std::_ValArray, std::_ValArray, Tp, Tp>, Tp>",
            "(const valarray<Tp> &v, const valarray<Tp> &w)",
        ],
        "laguerre": [
            "typename __gnu_cxx::__promote<Tp>::__type",
            "(unsigned int n, Tp x)",
        ],
        "operator==": [
            "bool",
            "(const match_results<Bi_iter, Alloc> &m1, const match_results<Bi_iter, Alloc> &m2)",
        ],
        "islower": ["int", "(int)"],
        "operator*": [
            "_Expr<_BinClos<struct std::__multiplies, std::_Expr, std::_ValArray, Dom, typename Dom::value_type>, typename __fun<struct std::__multiplies, typename Dom::value_type>::result_type>",
            "(const _Expr<Dom, typename Dom::value_type> &e, const valarray<typename Dom::value_type> &v)",
        ],
        "nextdownf32": ["_Float32", "(_Float32 x)"],
        "log10": [
            "_Expr<_UnClos<struct std::_Log10, std::_ValArray, Tp>, Tp>",
            "(const valarray<Tp> &v)",
        ],
        "tan": [
            "_Expr<_UnClos<struct std::_Tan, std::_Expr, Dom>, typename Dom::value_type>",
            "(const _Expr<Dom, typename Dom::value_type> &e)",
        ],
        "fill_n": ["OI", "(OI first, Size n, const Tp &value)"],
        "uninitialized_copy": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, ForwardIterator>",
            "(ExecutionPolicy &&exec, InputIterator first, InputIterator last, ForwardIterator result)",
        ],
        "is_empty": ["bool", "(const path &p, error_code &ec)"],
        "siginterrupt": ["int", "(int sig, int interrupt)"],
        "swap": ["void", "(forward_list<Tp, Alloc> &lx, forward_list<Tp, Alloc> &ly)"],
        "launder": ["void", "(const void *)"],
        "isgreater": ["bool", "(float x, float y)"],
        "operator!=": [
            "bool",
            "(const typename iterator_traits<Bi_iter>::value_type &lhs, const sub_match<Bi_iter> &rhs)",
        ],
        "tanhf32": ["_Float32", "(_Float32 x)"],
        "remquo": [
            "typename __gnu_cxx::__promote_2<Tp, Up>::__type",
            "(Tp x, Up y, int *pquo)",
        ],
        "sqrtf64": ["_Float64", "(_Float64 x)"],
        "strtoll": [
            "long long",
            "(const char *__restrict nptr, char **__restrict endptr, int base)",
        ],
        "getwchar_unlocked": ["wint_t", "()"],
        "log10f64": ["_Float64", "(_Float64 x)"],
        "atomic_exchange": ["ITp", "(atomic<ITp> *a, __atomic_val_t<ITp> i)"],
        "mbrtowc": [
            "size_t",
            "(wchar_t *__restrict pwc, const char *__restrict s, size_t n, mbstate_t *__restrict p)",
        ],
        "operator==": [
            "bool",
            "(const sub_match<BiIter> &lhs, const sub_match<BiIter> &rhs)",
        ],
        "ldexpf32x": ["_Float32x", "(_Float32x x, int exponent)"],
        "to_string": ["string", "(long double val)"],
        "pow": ["complex<Tp>", "(const Tp &, const complex<Tp> &)"],
        "isfinite": [
            "typename __gnu_cxx::__enable_if<__is_integer<Tp>::__value, bool>::__type",
            "(Tp x)",
        ],
        "operator>": [
            "bool",
            "(__type_identity_t<basic_string_view<CharT, Traits>> x, basic_string_view<CharT, Traits> y)",
        ],
        "setfill": ["_Setfill<CharT>", "(CharT c)"],
        "log2": ["double", "(double x)"],
        "pthread_key_delete": ["int", "(pthread_key_t key)"],
        "wcsftime": [
            "size_t",
            "(wchar_t *__restrict s, size_t maxsize, const wchar_t *__restrict format, const struct tm *__restrict tp)",
        ],
        "get_terminate": ["terminate_handler", "()"],
        "end": ["Tp *", "(valarray<Tp> &)"],
        "operator>>": [
            "std::basic_istream<CharT, Traits> &",
            "(std::basic_istream<CharT, Traits> &, std::uniform_real_distribution<RealType> &)",
        ],
        "arg": ["Tp", "(const complex<Tp> &)"],
        "inplace_merge": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, void>",
            "(ExecutionPolicy &&exec, BidirectionalIterator first, BidirectionalIterator middle, BidirectionalIterator last, Compare comp)",
        ],
        "atan2": [
            "_Expr<_BinClos<struct std::_Atan2, std::_Expr, std::_Constant, Dom, typename Dom::value_type>, typename Dom::value_type>",
            "(const _Expr<Dom, typename Dom::value_type> &e, const typename Dom::value_type &t)",
        ],
        "operator|": [
            "_Expr<_BinClos<__bitwise_or, std::_Constant, std::_ValArray, Tp, Tp>, typename __fun<__bitwise_or, Tp>::result_type>",
            "(const typename valarray<Tp>::value_type &t, const valarray<Tp> &v)",
        ],
        "operator|=": ["match_flag_type &", "(match_flag_type &a, match_flag_type b)"],
        "operator^=": ["const _Ios_Openmode &", "(_Ios_Openmode &a, _Ios_Openmode b)"],
        "operator!=": [
            "bool",
            "(const match_results<Bi_iter, Alloc> &m1, const match_results<Bi_iter, Alloc> &m2)",
        ],
        "frexp": ["long double", "(long double x, int *exp)"],
        "swap": [
            "typename enable_if<!__and_<__is_swappable<T1>, __is_swappable<T2>>::value>::type",
            "(pair<T1, T2> &, pair<T1, T2> &)",
        ],
        "wcscpy": [
            "wchar_t *",
            "(wchar_t *__restrict dest, const wchar_t *__restrict src)",
        ],
        "llrintf64": ["long long", "(_Float64 x)"],
        "wcscspn": ["size_t", "(const wchar_t *wcs, const wchar_t *reject)"],
        "erfcf": ["float", "(float)"],
        "strtok": ["char *", "(char *__restrict s, const char *__restrict delim)"],
        "regex_replace": [
            "basic_string<Ch_type>",
            "(const Ch_type *s, const basic_regex<Ch_type, Rx_traits> &e, const Ch_type *fmt, regex_constants::match_flag_type flags = regex_constants::match_default)",
        ],
        "pthread_cond_init": [
            "int",
            "(pthread_cond_t *__restrict cond, const pthread_condattr_t *__restrict cond_attr)",
        ],
        "cosh": ["complex<Tp>", "(const complex<Tp> &)"],
        "isunordered": ["bool", "(double x, double y)"],
        "is_fifo": ["bool", "(const path &p, error_code &ec)"],
        "llround": ["long long", "(float x)"],
        "operator>": ["bool", "(const array<Tp, Nm> &one, const array<Tp, Nm> &two)"],
        "sinh": ["float", "(float x)"],
        "operator==": [
            "bool",
            "(const piecewise_constant_distribution<RealType> &d1, const piecewise_constant_distribution<RealType> &d2)",
        ],
        "strtoll_l": [
            "long long",
            "(const char *__restrict nptr, char **__restrict endptr, int base, locale_t loc)",
        ],
        "operator" "if": ["std::complex<float>", "(long double num)"],
        "operator==": [
            "bool",
            "(basic_string_view<CharT, Traits> x, basic_string_view<CharT, Traits> y)",
        ],
        "copy": ["void", "(const path &from, const path &to, error_code &ec)"],
        "create_directory": ["bool", "(const path &p, const path &attributes)"],
        "merge": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, ForwardIterator>",
            "(ExecutionPolicy &&exec, ForwardIterator1 first1, ForwardIterator1 last1, ForwardIterator2 first2, ForwardIterator2 last2, ForwardIterator d_first, Compare comp)",
        ],
        "setpayloadsigf": ["int", "(float *x, float payload)"],
        "operator>": ["bool", "(const shared_ptr<Tp> &a, nullptr_t)"],
        "operator!=": [
            "bool",
            "(const sub_match<BiIter> &lhs, const sub_match<BiIter> &rhs)",
        ],
        "swap": [
            "void",
            "(multiset<Key, Compare, Alloc> &x, multiset<Key, Compare, Alloc> &y)",
        ],
        "fmal": ["long double", "(long double x, long double y, long double z)"],
        "putwchar": ["wint_t", "(wchar_t wc)"],
        "sched_setscheduler": [
            "int",
            "(__pid_t pid, int policy, const struct sched_param *param)",
        ],
        "operator^": [
            "_Expr<_BinClos<struct std::__bitwise_xor, std::_Expr, std::_ValArray, Dom, typename Dom::value_type>, typename __fun<struct std::__bitwise_xor, typename Dom::value_type>::result_type>",
            "(const _Expr<Dom, typename Dom::value_type> &e, const valarray<typename Dom::value_type> &v)",
        ],
        "cyl_bessel_if": ["float", "(float nu, float x)"],
        "uncaught_exception": ["bool", "()"],
        "operator<<": [
            "basic_ostream<CharT, Traits> &",
            "(basic_ostream<CharT, Traits> &os, _Setbase f)",
        ],
        "rotate": ["FIter", "(FIter, FIter, FIter)"],
        "tanl": ["long double", "(long double x)"],
        "atomic_load_explicit": [
            "__shared_ptr<Tp, Lp>",
            "(const __shared_ptr<Tp, Lp> *p, memory_order)",
        ],
        "operator>=": [
            "__optional_ge_t<Tp, Up>",
            "(const optional<Tp> &lhs, const optional<Up> &rhs)",
        ],
        "strpbrk": ["const char *", "(const char *s, const char *accept)"],
        "localtime": ["struct tm *", "(const time_t *timer)"],
        "reinterpret_pointer_cast": [
            "shared_ptr<Tp>",
            "<typename Tp>(const shared_ptr<Up> &r)",
        ],
        "pow": [
            "_Expr<_BinClos<struct std::_Pow, std::_Constant, std::_ValArray, Tp, Tp>, Tp>",
            "(const typename valarray<Tp>::value_type &t, const valarray<Tp> &v)",
        ],
        "min_element": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, ForwardIterator>",
            "(ExecutionPolicy &&exec, ForwardIterator first, ForwardIterator last)",
        ],
        "operator delete": ["void", "(void *)"],
        "lround": ["long", "(long double x)"],
        "atomic_compare_exchange_weak_explicit": [
            "bool",
            "(shared_ptr<Tp> *p, shared_ptr<Tp> *v, shared_ptr<Tp> w, memory_order success, memory_order failure)",
        ],
        "undeclare_no_pointers": ["void", "(char *, size_t)"],
        "hypot": ["float", "(float x, float y, float z)"],
        "uninitialized_move_n": [
            "pair<InputIterator, ForwardIterator>",
            "(InputIterator first, Size count, ForwardIterator result)",
        ],
        "sched_rr_get_interval": ["int", "(__pid_t pid, struct timespec *t)"],
        "fill_n": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, ForwardIterator>",
            "(ExecutionPolicy &&exec, ForwardIterator first, Size count, const Tp &value)",
        ],
        "advance": [
            "void",
            "<typename InputIterator>(filesystem::path::iterator &i, Distance n)",
        ],
        "operator<<": [
            "basic_ostream<CharT, Traits> &",
            "(basic_ostream<CharT, Traits> &os, _Resetiosflags f)",
        ],
        "operator>=": ["bool", "(const shared_ptr<Tp> &a, const shared_ptr<Up> &b)"],
        "get": ["const Tp &", "(const pair<Tp, Up> &p)"],
        "fromfpxl": ["__intmax_t", "(long double x, int round, unsigned int width)"],
        "log2f32": ["_Float32", "(_Float32 x)"],
        "operator>>": [
            "std::basic_istream<CharT, Traits> &",
            "(std::basic_istream<CharT, Traits> &is, binomial_distribution<IntType> &x)",
        ],
        "any_cast": ["ValueType", "<typename ValueType>(any &any)"],
        "atomic_exchange_explicit": [
            "__shared_ptr<Tp, Lp>",
            "(__shared_ptr<Tp, Lp> *p, __shared_ptr<Tp, Lp> r, memory_order)",
        ],
        "ufromfpxl": ["__uintmax_t", "(long double x, int round, unsigned int width)"],
        "swap": ["void", "(_Bit_reference x, bool &y)"],
        "sin": ["long double", "(long double x)"],
        "operator!=": [
            "bool",
            "(basic_string_view<CharT, Traits> x, basic_string_view<CharT, Traits> y)",
        ],
        "operator&": [
            "_Expr<_BinClos<__bitwise_and, std::_ValArray, std::_ValArray, Tp, Tp>, typename __fun<__bitwise_and, Tp>::result_type>",
            "(const valarray<Tp> &v, const valarray<Tp> &w)",
        ],
        "tan": [
            "_Expr<_UnClos<struct std::_Tan, std::_ValArray, Tp>, Tp>",
            "(const valarray<Tp> &v)",
        ],
        "atomic_compare_exchange_strong": [
            "bool",
            "(atomic<ITp> *a, __atomic_val_t<ITp> *i1, __atomic_val_t<ITp> i2)",
        ],
        "pthread_attr_setschedpolicy": ["int", "(pthread_attr_t *attr, int policy)"],
        "count": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, typename iterator_traits<ForwardIterator>::difference_type>",
            "(ExecutionPolicy &&exec, ForwardIterator first, ForwardIterator last, const Tp &value)",
        ],
        "log2f64x": ["_Float64x", "(_Float64x x)"],
        "destroy": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, void>",
            "(ExecutionPolicy &&exec, ForwardIterator first, ForwardIterator last)",
        ],
        "isalpha": ["bool", "(CharT, const locale &)"],
        "fmod": ["float", "(float x, float y)"],
        "localeconv": ["struct lconv *", "()"],
        "exp2f64": ["_Float64", "(_Float64 x)"],
        "atomic_flag_clear_explicit": [
            "void",
            "(volatile atomic_flag *a, memory_order m)",
        ],
        "strfromf32": [
            "int",
            "(char *dest, size_t size, const char *format, _Float32 f)",
        ],
        "abs": ["double", "(double x)"],
        "atomic_signal_fence": ["void", "(memory_order m)"],
        "acoshf64": ["_Float64", "(_Float64 x)"],
        "rawmemchr": ["void *", "(void *s, int c)"],
        "cref": ["reference_wrapper<const Tp>", "(reference_wrapper<Tp> t)"],
        "is_heap_until": ["RAIter", "(RAIter, RAIter)"],
        "get": ["const Tp &&", "(const pair<Up, Tp> &&p)"],
        "mismatch": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, std::pair<ForwardIterator1, ForwardIterator2>>",
            "(ExecutionPolicy &&exec, ForwardIterator1 first1, ForwardIterator1 last1, ForwardIterator2 first2, BinaryPredicate pred)",
        ],
        "expf64x": ["_Float64x", "(_Float64x x)"],
        "undeclare_reachable": ["Tp *", "(Tp *p)"],
        "wcstol": [
            "long",
            "(const wchar_t *__restrict nptr, wchar_t **__restrict endptr, int base)",
        ],
        "operator==": [
            "bool",
            "(const negative_binomial_distribution<IntType> &d1, const negative_binomial_distribution<IntType> &d2)",
        ],
        "operator<<=": ["__byte_op_t<IntegerType> &", "(byte &b, IntegerType shift)"],
        "new_delete_resource": ["memory_resource *", "()"],
        "ptsname": ["char *", "(int fd)"],
        "getchar_unlocked": ["int", "()"],
        "swap": ["void", "(__weak_ptr<Tp, Lp> &a, __weak_ptr<Tp, Lp> &b)"],
        "set_symmetric_difference": [
            "OIter",
            "(IIter1, IIter1, IIter2, IIter2, OIter, Compare)",
        ],
        "memmem": [
            "void *",
            "(const void *haystack, size_t haystacklen, const void *needle, size_t needlelen)",
        ],
        "operator|=": ["byte &", "(byte &l, byte r)"],
        "initstate": ["char *", "(unsigned int seed, char *statebuf, size_t statelen)"],
        "clock_settime": ["int", "(clockid_t clock_id, const struct timespec *tp)"],
        "exp10l": ["long double", "(long double x)"],
        "to_chars": ["to_chars_result", "(char *, char *, bool, int = 10)"],
        "sched_getscheduler": ["int", "(__pid_t pid)"],
        "find_first_of": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, ForwardIterator1>",
            "(ExecutionPolicy &&exec, ForwardIterator1 first, ForwardIterator1 last, ForwardIterator2 s_first, ForwardIterator2 s_last, BinaryPredicate pred)",
        ],
        "frexpf64x": ["_Float64x", "(_Float64x x, int *exponent)"],
        "nan": ["double", "(const char *tagb)"],
        "frexpf64": ["_Float64", "(_Float64 x, int *exponent)"],
        "proj": ["std::complex<Tp>", "(const std::complex<Tp> &)"],
        "operator" "ns": ["chrono::duration<long double, nano>", "(long double nsecs)"],
        "operator-": [
            "ptrdiff_t",
            "(const _Bit_iterator_base &x, const _Bit_iterator_base &y)",
        ],
        "showpoint": ["ios_base &", "(ios_base &base)"],
        "operator>": ["bool", "(nullopt_t, const optional<Tp> &)"],
        "atan": ["std::complex<Tp>", "(const std::complex<Tp> &)"],
        "funlockfile": ["void", "(FILE *stream)"],
        "atomic_fetch_xor": ["ITp", "(__atomic_base<ITp> *a, __atomic_val_t<ITp> i)"],
        "exp": [
            "typename __gnu_cxx::__enable_if<__is_integer<Tp>::__value, double>::__type",
            "(Tp x)",
        ],
        "getline": [
            "__ssize_t",
            "(char **__restrict lineptr, size_t *__restrict n, FILE *__restrict stream)",
        ],
        "_obstack_begin_1": [
            "int",
            "(struct obstack *, int, int, void *(*)(void *, long), void (*)(void *, void *), void *)",
        ],
        "llround": ["long long", "(double x)"],
        "erf": ["long double", "(long double x)"],
        "min": ["const Tp &", "(const Tp &a, const Tp &b)"],
        "operator!=": [
            "bool",
            "(const std::student_t_distribution<RealType> &d1, const std::student_t_distribution<RealType> &d2)",
        ],
        "copysignl": ["long double", "(long double x, long double y)"],
        "log": ["long double", "(long double x)"],
        "ufromfpxf64": ["__uintmax_t", "(_Float64 x, int round, unsigned int width)"],
        "operator>": [
            "bool",
            "(const typename iterator_traits<Bi_iter>::value_type *lhs, const sub_match<Bi_iter> &rhs)",
        ],
        "pthread_mutexattr_getrobust_np": [
            "int",
            "(const pthread_mutexattr_t *attr, int *robustness)",
        ],
        "operator<": ["bool", "(const pair<T1, T2> &x, const pair<T1, T2> &y)"],
        "equal": [
            "bool",
            "(IIter1 first1, IIter1 last1, IIter2 first2, BinaryPredicate binary_pred)",
        ],
        "atomic_compare_exchange_strong": [
            "bool",
            "(shared_ptr<Tp> *p, shared_ptr<Tp> *v, shared_ptr<Tp> w)",
        ],
        "operator>=": [
            "bool",
            "(const __shared_ptr<Tp1, Lp> &a, const __shared_ptr<Tp2, Lp> &b)",
        ],
        "ceil": ["double", "(double x)"],
        "read_symlink": ["path", "(const path &p, error_code &ec)"],
        "stpncpy": [
            "char *",
            "(char *__restrict dest, const char *__restrict src, size_t n)",
        ],
        "jnf": ["float", "(int, float)"],
        "operator==": [
            "bool",
            "(const discrete_distribution<IntType> &d1, const discrete_distribution<IntType> &d2)",
        ],
        "find_first_of": ["FIter1", "(FIter1, FIter1, FIter2, FIter2)"],
        "operator<": [
            "bool",
            "(const time_point<Clock, Dur1> &lhs, const time_point<Clock, Dur2> &rhs)",
        ],
        "roundl": ["long double", "(long double x)"],
        "expf32x": ["_Float32x", "(_Float32x x)"],
        "operator" "s": ["basic_string<char16_t>", "(const char16_t *str, size_t len)"],
        "isalpha": ["int", "(int)"],
        "sigandset": [
            "int",
            "(sigset_t *set, const sigset_t *left, const sigset_t *right)",
        ],
        "gammaf": ["float", "(float)"],
        "operator%": [
            "_Expr<_BinClos<struct std::__modulus, std::_Constant, std::_Expr, typename Dom::value_type, Dom>, typename __fun<struct std::__modulus, typename Dom::value_type>::result_type>",
            "(const typename Dom::value_type &t, const _Expr<Dom, typename Dom::value_type> &v)",
        ],
        "operator<": [
            "bool",
            "(const reverse_iterator<IteratorL> &x, const reverse_iterator<IteratorR> &y)",
        ],
        "space": ["space_info", "(const path &p, error_code &ec)"],
        "powf64": ["_Float64", "(_Float64 x, _Float64 y)"],
        "unique": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, ForwardIterator>",
            "(ExecutionPolicy &&exec, ForwardIterator first, ForwardIterator last, BinaryPredicate pred)",
        ],
        "exclusive_scan": [
            "OutputIterator",
            "(InputIterator first, InputIterator last, OutputIterator result, Tp init, BinaryOperation binary_op)",
        ],
        "atomic_fetch_xor": [
            "ITp",
            "(volatile __atomic_base<ITp> *a, __atomic_val_t<ITp> i)",
        ],
        "launder": ["void", "(volatile void *)"],
        "malloc": ["void *", "(size_t size)"],
        "is_heap_until": ["RAIter", "(RAIter, RAIter, Compare)"],
        "isinff": ["int", "(float value)"],
        "lgammal_r": ["long double", "(long double, int *signgamp)"],
        "strtof32x": [
            "_Float32x",
            "(const char *__restrict nptr, char **__restrict endptr)",
        ],
        "operator>": ["bool", "(const list<Tp, Alloc> &x, const list<Tp, Alloc> &y)"],
        "minmax": ["pair<const Tp &, const Tp &>", "(const Tp &, const Tp &)"],
        "operator>>": [
            "typename enable_if<__and_<__not_<is_lvalue_reference<Istream>>, __is_convertible_to_basic_istream<Istream>, __is_extractable<__rvalue_istream_type<Istream>, Tp &&>>::value, __rvalue_istream_type<Istream>>::type",
            "(Istream &&is, Tp &&x)",
        ],
        "canonical": ["path", "(const path &p)"],
        "cosf32": ["_Float32", "(_Float32 x)"],
        "norm": ["Tp", "(const complex<Tp> &)"],
        "llrint": [
            "typename __gnu_cxx::__enable_if<__is_integer<Tp>::__value, long long>::__type",
            "(Tp x)",
        ],
        "operator==": ["bool", "(const error_condition &lhs, const error_code &rhs)"],
        "operator<<": [
            "std::basic_ostream<CharT, Traits> &",
            "(std::basic_ostream<CharT, Traits> &os, const std::bernoulli_distribution &x)",
        ],
        "operator<<": [
            "basic_ostream<CharT, Traits> &",
            "(basic_ostream<CharT, Traits> &os, const error_code &e)",
        ],
        "set_default_resource": ["memory_resource *", "(memory_resource *r)"],
        "strfry": ["char *", "(char *string)"],
        "ufromfpxf32": ["__uintmax_t", "(_Float32 x, int round, unsigned int width)"],
        "operator<<": [
            "basic_ostream<char, Traits> &",
            "(basic_ostream<char, Traits> &out, signed char c)",
        ],
        "pthread_rwlock_clockrdlock": [
            "int",
            "(pthread_rwlock_t *__restrict rwlock, clockid_t clockid, const struct timespec *__restrict abstime)",
        ],
        "ftrylockfile": ["int", "(FILE *stream)"],
        "operator+": ["complex<Tp>", "(const complex<Tp> &x, const Tp &y)"],
        "acosf64x": ["_Float64x", "(_Float64x x)"],
        "copysignf64x": ["_Float64x", "(_Float64x x, _Float64x y)"],
        "strtof64_l": [
            "_Float64",
            "(const char *__restrict nptr, char **__restrict endptr, locale_t loc)",
        ],
        "exp2f32x": ["_Float32x", "(_Float32x x)"],
        "copy": ["OI", "(II first, II last, OI result)"],
        "operator<=": [
            "bool",
            "(const time_point<Clock, Dur1> &lhs, const time_point<Clock, Dur2> &rhs)",
        ],
        "ldexpf": ["float", "(float x, int exponent)"],
        "scalbn": ["long double", "(long double x, int ex)"],
        "tanf": ["float", "(float x)"],
        "atol": ["long", "(const char *nptr)"],
        "stof": ["float", "(const string &str, size_t *idx = 0)"],
        "operator>=": [
            "bool",
            "(const CharT *lhs, const basic_string<CharT, Traits, Alloc> &rhs)",
        ],
        "atomic_init": ["void", "(volatile atomic<ITp> *a, __atomic_val_t<ITp> i)"],
        "isfinite": ["bool", "(float x)"],
        "operator==": ["bool", "(const memory_resource &a, const memory_resource &b)"],
        "tolower_l": ["int", "(int c, locale_t l)"],
        "operator<=": [
            "bool",
            "(const reverse_iterator<IteratorL> &x, const reverse_iterator<IteratorR> &y)",
        ],
        "ctime_r": ["char *", "(const time_t *__restrict timer, char *__restrict buf)"],
        "lroundf64x": ["long", "(_Float64x x)"],
        "totalorderf32": ["int", "(const _Float32 *x, const _Float32 *y)"],
        "abs": ["Tp", "(const complex<Tp> &)"],
        "u8path": ["path", "(InputIterator first, InputIterator last)"],
        "ldexp": ["float", "(float x, int exp)"],
        "end": ["recursive_directory_iterator", "(recursive_directory_iterator)"],
        "operator|": ["memory_order", "(memory_order m, __memory_order_modifier mod)"],
        "advance": [
            "typename __gnu_cxx::__enable_if<__is_char<CharT>::__value, void>::__type",
            "(istreambuf_iterator<CharT> &i, Distance n)",
        ],
        "begin": ["const Tp *", "(initializer_list<Tp> ils)"],
        "fseeko64": ["int", "(FILE *stream, __off64_t off, int whence)"],
        "system_category": ["const error_category &", "()"],
        "put_time": ["_Put_time<CharT>", "(const std::tm *tmb, const CharT *fmt)"],
        "operator!=": ["bool", "(const error_condition &lhs, const error_code &rhs)"],
        "ffsll": ["int", "(long long ll)"],
        "quick_exit": ["void", "(int status)"],
        "lrand48": ["long", "()"],
        "rbegin": ["decltype(cont.rbegin())", "(const Container &cont)"],
        "comp_ellint_1l": ["long double", "(long double k)"],
        "is_permutation": ["bool", "(FIter1, FIter1, FIter2, BinaryPredicate)"],
        "rend": ["decltype(cont.rend())", "(const Container &cont)"],
        "seed48": ["unsigned short *", "(unsigned short *seed16v)"],
        "get_id": ["thread::id", "()"],
        "riemann_zetaf": ["float", "(float s)"],
        "includes": [
            "__pstl::__internal::__enable_if_execution_policy<ExecutionPolicy, bool>",
            "(ExecutionPolicy &&exec, ForwardIterator1 first1, ForwardIterator1 last1, ForwardIterator2 first2, ForwardIterator2 last2)",
        ],
        "iscanonical": ["int", "(double val)"],
        "atomic_store": ["void", "(volatile atomic<ITp> *a, __atomic_val_t<ITp> i)"],
        "issignaling": ["int", "(float val)"],
        "strtod": ["double", "(const char *__restrict nptr, char **__restrict endptr)"],
        "sinh": [
            "_Expr<_UnClos<struct std::_Sinh, std::_Expr, Dom>, typename Dom::value_type>",
            "(const _Expr<Dom, typename Dom::value_type> &e)",
        ],
        "operator>>": [
            "std::basic_istream<CharT, Traits> &",
            "(std::basic_istream<CharT, Traits> &is, std::independent_bits_engine<RandomNumberEngine, w, UIntType> &x)",
        ],
        "dreml": ["long double", "(long double x, long double y)"],
        "rename": ["void", "(const path &from, const path &to, error_code &ec)"],
        "cosh": [
            "typename __gnu_cxx::__enable_if<__is_integer<Tp>::__value, double>::__type",
            "(Tp x)",
        ],
        "exp10f32x": ["_Float32x", "(_Float32x x)"],
        "operator!=": ["bool", "(const memory_resource &a, const memory_resource &b)"],
        "tgamma": ["double", "(double)"],
        "toascii": ["int", "(int c)"],
        "aligned_alloc": ["void *", "(size_t alignment, size_t size)"],
        "drem": ["double", "(double x, double y)"],
        "operator==": ["bool", "(const unique_ptr<Tp, Dp> &x, nullptr_t)"],
        "generate_canonical": [
            "RealType",
            "<typename RealType, size_t bits>(UniformRandomNumberGenerator &g)",
        ],
        "generic_category": ["const error_category &", "()"],
        "finite": ["int", "(double value)"],
        "bcopy": ["void", "(const void *src, void *dest, size_t n)"],
        "operator<<": [
            "_Expr<_BinClos<struct std::__shift_left, std::_Expr, std::_Expr, Dom1, Dom2>, typename __fun<struct std::__shift_left, typename Dom1::value_type>::result_type>",
            "(const _Expr<Dom1, typename Dom1::value_type> &v, const _Expr<Dom2, typename Dom2::value_type> &w)",
        ],
        "strxfrm": [
            "size_t",
            "(char *__restrict dest, const char *__restrict src, size_t n)",
        ],
        "pthread_rwlock_tryrdlock": ["int", "(pthread_rwlock_t *rwlock)"],
        "end": ["const Tp *", "(const valarray<Tp> &)"],
    }
