
class dict:
  dictionary={

"__assert_fail":["void","(const char *, const char *, unsigned int, const char *)"],
"__assert_perror_fail":["void","(int, const char *, unsigned int, const char *)"],
"__assert":["void","(const char *, const char *, int)"],
"__ctype_b_loc":["const unsigned short **","()"],
"__ctype_tolower_loc":["const __int32_t **","()"],
"__ctype_toupper_loc":["const __int32_t **","()"],
"isalnum":["int","(int)"],
"isalpha":["int","(int)"],
"iscntrl":["int","(int)"],
"isdigit":["int","(int)"],
"islower":["int","(int)"],
"isgraph":["int","(int)"],
"isprint":["int","(int)"],
"ispunct":["int","(int)"],
"isspace":["int","(int)"],
"isupper":["int","(int)"],
"isxdigit":["int","(int)"],
"tolower":["int","(int)"],
"toupper":["int","(int)"],
"isblank":["int","(int)"],
"isctype":["int","(int, int)"],
"isascii":["int","(int)"],
"toascii":["int","(int)"],
"_toupper":["int","(int)"],
"_tolower":["int","(int)"],
"isalnum_l":["int","(int, locale_t)"],
"isalpha_l":["int","(int, locale_t)"],
"iscntrl_l":["int","(int, locale_t)"],
"isdigit_l":["int","(int, locale_t)"],
"islower_l":["int","(int, locale_t)"],
"isgraph_l":["int","(int, locale_t)"],
"isprint_l":["int","(int, locale_t)"],
"ispunct_l":["int","(int, locale_t)"],
"isspace_l":["int","(int, locale_t)"],
"isupper_l":["int","(int, locale_t)"],
"isxdigit_l":["int","(int, locale_t)"],
"isblank_l":["int","(int, locale_t)"],
"__tolower_l":["int","(int, locale_t)"],
"tolower_l":["int","(int, locale_t)"],
"__toupper_l":["int","(int, locale_t)"],
"toupper_l":["int","(int, locale_t)"],
"__errno_location":["int *","()"],
"__sysconf":["long","(int)"],
"setlocale":["char *","(int, const char *)"],
"localeconv":["struct lconv *","()"],
"newlocale":["locale_t","(int, const char *, locale_t)"],
"duplocale":["locale_t","(locale_t)"],
"freelocale":["void","(locale_t)"],
"uselocale":["locale_t","(locale_t)"],
"__is_null_pointer":["bool","(std::nullptr_t)"],
"__fpclassify":["int","(double)"],
"__signbit":["int","(double)"],
"__isinf":["int","(double)"],
"__finite":["int","(double)"],
"__isnan":["int","(double)"],
"__iseqsig":["int","(double, double)"],
"__issignaling":["int","(double)"],
"acos":[("double","(double)"),("float","(float)"),("long double","(long double)")],
"__acos":["double","(double)"],
"asin":[("double","(double)"),("float","(float)"),("long double","(long double)")],
"__asin":["double","(double)"],
"atan":[("double","(double)"),("float","(float)"),("long double","(long double)")],
"__atan":["double","(double)"],
"atan2":[("double","(double, double)"),("float","(float, float)"),("long double","(long double, long double)")],
"__atan2":["double","(double, double)"],
"cos":[("double","(double)"),("float","(float)"),("long double","(long double)")],
"__cos":["double","(double)"],
"sin":[("double","(double)"),("float","(float)"),("long double","(long double)")],
"__sin":["double","(double)"],
"tan":[("double","(double)"),("float","(float)"),("long double","(long double)")],
"__tan":["double","(double)"],
"cosh":[("double","(double)"),("float","(float)"),("long double","(long double)")],
"__cosh":["double","(double)"],
"sinh":[("double","(double)"),("float","(float)"),("long double","(long double)")],
"__sinh":["double","(double)"],
"tanh":[("double","(double)"),("float","(float)"),("long double","(long double)")],
"__tanh":["double","(double)"],
"sincos":["void","(double, double *, double *)"],
"__sincos":["void","(double, double *, double *)"],
"acosh":[("double","(double)"),("float","(float)"),("long double","(long double)")],
"__acosh":["double","(double)"],
"asinh":[("double","(double)"),("float","(float)"),("long double","(long double)")],
"__asinh":["double","(double)"],
"atanh":[("double","(double)"),("float","(float)"),("long double","(long double)")],
"__atanh":["double","(double)"],
"exp":[("double","(double)"),("float","(float)"),("long double","(long double)")],
"__exp":["double","(double)"],
"frexp":[("double","(double, int *)"),("float","(float, int *)"),("long double","(long double, int *)")],
"__frexp":["double","(double, int *)"],
"ldexp":[("double","(double, int)"),("float","(float, int)"),("long double","(long double, int)")],
"__ldexp":["double","(double, int)"],
"log":[("double","(double)"),("float","(float)"),("long double","(long double)")],
"__log":["double","(double)"],
"log10":[("double","(double)"),("float","(float)"),("long double","(long double)")],
"__log10":["double","(double)"],
"modf":[("double","(double, double *)"),("float","(float, float *)"),("long double","(long double, long double *)")],
"__modf":["double","(double, double *)"],
"exp10":["double","(double)"],
"__exp10":["double","(double)"],
"expm1":[("double","(double)"),("float","(float)"),("long double","(long double)")],
"__expm1":["double","(double)"],
"log1p":[("double","(double)"),("float","(float)"),("long double","(long double)")],
"__log1p":["double","(double)"],
"logb":[("double","(double)"),("float","(float)"),("long double","(long double)")],
"__logb":["double","(double)"],
"exp2":[("double","(double)"),("float","(float)"),("long double","(long double)")],
"__exp2":["double","(double)"],
"log2":[("double","(double)"),("float","(float)"),("long double","(long double)")],
"__log2":["double","(double)"],
"pow":[("double","(double, double)"),("float","(float, float)"),("long double","(long double, long double)")],
"__pow":["double","(double, double)"],
"sqrt":[("double","(double)"),("float","(float)"),("long double","(long double)")],
"__sqrt":["double","(double)"],
"hypot":[("double","(double, double)"),("float","(float, float)"),("long double","(long double, long double)")],
"__hypot":["double","(double, double)"],
"cbrt":[("double","(double)"),("float","(float)"),("long double","(long double)")],
"__cbrt":["double","(double)"],
"ceil":[("double","(double)"),("float","(float)"),("long double","(long double)")],
"__ceil":["double","(double)"],
"fabs":[("double","(double)"),("float","(float)"),("long double","(long double)")],
"__fabs":["double","(double)"],
"floor":[("double","(double)"),("float","(float)"),("long double","(long double)")],
"__floor":["double","(double)"],
"fmod":[("double","(double, double)"),("float","(float, float)"),("long double","(long double, long double)")],
"__fmod":["double","(double, double)"],
"finite":["int","(double)"],
"drem":["double","(double, double)"],
"__drem":["double","(double, double)"],
"significand":["double","(double)"],
"__significand":["double","(double)"],
"copysign":[("double","(double, double)"),("float","(float, float)"),("long double","(long double, long double)")],
"__copysign":["double","(double, double)"],
"nan":["double","(const char *)"],
"__nan":["double","(const char *)"],
"j0":["double","(double)"],
"__j0":["double","(double)"],
"j1":["double","(double)"],
"__j1":["double","(double)"],
"jn":["double","(int, double)"],
"__jn":["double","(int, double)"],
"y0":["double","(double)"],
"__y0":["double","(double)"],
"y1":["double","(double)"],
"__y1":["double","(double)"],
"yn":["double","(int, double)"],
"__yn":["double","(int, double)"],
"erf":[("double","(double)"),("float","(float)"),("long double","(long double)")],
"__erf":["double","(double)"],
"erfc":[("double","(double)"),("float","(float)"),("long double","(long double)")],
"__erfc":["double","(double)"],
"lgamma":[("double","(double)"),("float","(float)"),("long double","(long double)")],
"__lgamma":["double","(double)"],
"tgamma":[("double","(double)"),("float","(float)"),("long double","(long double)")],
"__tgamma":["double","(double)"],
"gamma":["double","(double)"],
"__gamma":["double","(double)"],
"lgamma_r":["double","(double, int *)"],
"__lgamma_r":["double","(double, int *)"],
"rint":[("double","(double)"),("float","(float)"),("long double","(long double)")],
"__rint":["double","(double)"],
"nextafter":[("double","(double, double)"),("float","(float, float)"),("long double","(long double, long double)")],
"__nextafter":["double","(double, double)"],
"nexttoward":[("double","(double, long double)"),("float","(float, long double)"),("long double","(long double, long double)")],
"__nexttoward":["double","(double, long double)"],
"nextdown":["double","(double)"],
"__nextdown":["double","(double)"],
"nextup":["double","(double)"],
"__nextup":["double","(double)"],
"remainder":[("double","(double, double)"),("float","(float, float)"),("long double","(long double, long double)")],
"__remainder":["double","(double, double)"],
"scalbn":[("double","(double, int)"),("float","(float, int)"),("long double","(long double, int)")],
"__scalbn":["double","(double, int)"],
"ilogb":[("int","(double)"),("int","(float)"),("int","(long double)")],
"__ilogb":["int","(double)"],
"llogb":["long","(double)"],
"__llogb":["long","(double)"],
"scalbln":[("double","(double, long)"),("float","(float, long)"),("long double","(long double, long)")],
"__scalbln":["double","(double, long)"],
"nearbyint":[("double","(double)"),("float","(float)"),("long double","(long double)")],
"__nearbyint":["double","(double)"],
"round":[("double","(double)"),("float","(float)"),("long double","(long double)")],
"__round":["double","(double)"],
"trunc":[("double","(double)"),("float","(float)"),("long double","(long double)")],
"__trunc":["double","(double)"],
"remquo":[("double","(double, double, int *)"),("float","(float, float, int *)"),("long double","(long double, long double, int *)")],
"__remquo":["double","(double, double, int *)"],
"lrint":[("long","(double)"),("long","(float)"),("long","(long double)")],
"__lrint":["long","(double)"],
"llrint":[("long long","(double)"),("long long","(float)"),("long long","(long double)")],
"__llrint":["long long","(double)"],
"lround":[("long","(double)"),("long","(float)"),("long","(long double)")],
"__lround":["long","(double)"],
"llround":[("long long","(double)"),("long long","(float)"),("long long","(long double)")],
"__llround":["long long","(double)"],
"fdim":[("double","(double, double)"),("float","(float, float)"),("long double","(long double, long double)")],
"__fdim":["double","(double, double)"],
"fmax":[("double","(double, double)"),("float","(float, float)"),("long double","(long double, long double)")],
"__fmax":["double","(double, double)"],
"fmin":[("double","(double, double)"),("float","(float, float)"),("long double","(long double, long double)")],
"__fmin":["double","(double, double)"],
"fma":[("double","(double, double, double)"),("float","(float, float, float)"),("long double","(long double, long double, long double)")],
"__fma":["double","(double, double, double)"],
"roundeven":["double","(double)"],
"__roundeven":["double","(double)"],
"fromfp":["__intmax_t","(double, int, unsigned int)"],
"__fromfp":["__intmax_t","(double, int, unsigned int)"],
"ufromfp":["__uintmax_t","(double, int, unsigned int)"],
"__ufromfp":["__uintmax_t","(double, int, unsigned int)"],
"fromfpx":["__intmax_t","(double, int, unsigned int)"],
"__fromfpx":["__intmax_t","(double, int, unsigned int)"],
"ufromfpx":["__uintmax_t","(double, int, unsigned int)"],
"__ufromfpx":["__uintmax_t","(double, int, unsigned int)"],
"canonicalize":["int","(double *, const double *)"],
"fmaxmag":["double","(double, double)"],
"__fmaxmag":["double","(double, double)"],
"fminmag":["double","(double, double)"],
"__fminmag":["double","(double, double)"],
"fmaximum":["double","(double, double)"],
"__fmaximum":["double","(double, double)"],
"fminimum":["double","(double, double)"],
"__fminimum":["double","(double, double)"],
"fmaximum_num":["double","(double, double)"],
"__fmaximum_num":["double","(double, double)"],
"fminimum_num":["double","(double, double)"],
"__fminimum_num":["double","(double, double)"],
"fmaximum_mag":["double","(double, double)"],
"__fmaximum_mag":["double","(double, double)"],
"fminimum_mag":["double","(double, double)"],
"__fminimum_mag":["double","(double, double)"],
"fmaximum_mag_num":["double","(double, double)"],
"__fmaximum_mag_num":["double","(double, double)"],
"fminimum_mag_num":["double","(double, double)"],
"__fminimum_mag_num":["double","(double, double)"],
"totalorder":["int","(const double *, const double *)"],
"totalordermag":["int","(const double *, const double *)"],
"getpayload":["double","(const double *)"],
"__getpayload":["double","(const double *)"],
"setpayload":["int","(double *, double)"],
"setpayloadsig":["int","(double *, double)"],
"scalb":["double","(double, double)"],
"__scalb":["double","(double, double)"],
"__fpclassifyf":["int","(float)"],
"__signbitf":["int","(float)"],
"__isinff":["int","(float)"],
"__finitef":["int","(float)"],
"__isnanf":["int","(float)"],
"__iseqsigf":["int","(float, float)"],
"__issignalingf":["int","(float)"],
"acosf":["float","(float)"],
"__acosf":["float","(float)"],
"asinf":["float","(float)"],
"__asinf":["float","(float)"],
"atanf":["float","(float)"],
"__atanf":["float","(float)"],
"atan2f":["float","(float, float)"],
"__atan2f":["float","(float, float)"],
"cosf":["float","(float)"],
"__cosf":["float","(float)"],
"sinf":["float","(float)"],
"__sinf":["float","(float)"],
"tanf":["float","(float)"],
"__tanf":["float","(float)"],
"coshf":["float","(float)"],
"__coshf":["float","(float)"],
"sinhf":["float","(float)"],
"__sinhf":["float","(float)"],
"tanhf":["float","(float)"],
"__tanhf":["float","(float)"],
"sincosf":["void","(float, float *, float *)"],
"__sincosf":["void","(float, float *, float *)"],
"acoshf":["float","(float)"],
"__acoshf":["float","(float)"],
"asinhf":["float","(float)"],
"__asinhf":["float","(float)"],
"atanhf":["float","(float)"],
"__atanhf":["float","(float)"],
"expf":["float","(float)"],
"__expf":["float","(float)"],
"frexpf":["float","(float, int *)"],
"__frexpf":["float","(float, int *)"],
"ldexpf":["float","(float, int)"],
"__ldexpf":["float","(float, int)"],
"logf":["float","(float)"],
"__logf":["float","(float)"],
"log10f":["float","(float)"],
"__log10f":["float","(float)"],
"modff":["float","(float, float *)"],
"__modff":["float","(float, float *)"],
"exp10f":["float","(float)"],
"__exp10f":["float","(float)"],
"expm1f":["float","(float)"],
"__expm1f":["float","(float)"],
"log1pf":["float","(float)"],
"__log1pf":["float","(float)"],
"logbf":["float","(float)"],
"__logbf":["float","(float)"],
"exp2f":["float","(float)"],
"__exp2f":["float","(float)"],
"log2f":["float","(float)"],
"__log2f":["float","(float)"],
"powf":["float","(float, float)"],
"__powf":["float","(float, float)"],
"sqrtf":["float","(float)"],
"__sqrtf":["float","(float)"],
"hypotf":["float","(float, float)"],
"__hypotf":["float","(float, float)"],
"cbrtf":["float","(float)"],
"__cbrtf":["float","(float)"],
"ceilf":["float","(float)"],
"__ceilf":["float","(float)"],
"fabsf":["float","(float)"],
"__fabsf":["float","(float)"],
"floorf":["float","(float)"],
"__floorf":["float","(float)"],
"fmodf":["float","(float, float)"],
"__fmodf":["float","(float, float)"],
"isinff":["int","(float)"],
"finitef":["int","(float)"],
"dremf":["float","(float, float)"],
"__dremf":["float","(float, float)"],
"significandf":["float","(float)"],
"__significandf":["float","(float)"],
"copysignf":["float","(float, float)"],
"__copysignf":["float","(float, float)"],
"nanf":["float","(const char *)"],
"__nanf":["float","(const char *)"],
"isnanf":["int","(float)"],
"j0f":["float","(float)"],
"__j0f":["float","(float)"],
"j1f":["float","(float)"],
"__j1f":["float","(float)"],
"jnf":["float","(int, float)"],
"__jnf":["float","(int, float)"],
"y0f":["float","(float)"],
"__y0f":["float","(float)"],
"y1f":["float","(float)"],
"__y1f":["float","(float)"],
"ynf":["float","(int, float)"],
"__ynf":["float","(int, float)"],
"erff":["float","(float)"],
"__erff":["float","(float)"],
"erfcf":["float","(float)"],
"__erfcf":["float","(float)"],
"lgammaf":["float","(float)"],
"__lgammaf":["float","(float)"],
"tgammaf":["float","(float)"],
"__tgammaf":["float","(float)"],
"gammaf":["float","(float)"],
"__gammaf":["float","(float)"],
"lgammaf_r":["float","(float, int *)"],
"__lgammaf_r":["float","(float, int *)"],
"rintf":["float","(float)"],
"__rintf":["float","(float)"],
"nextafterf":["float","(float, float)"],
"__nextafterf":["float","(float, float)"],
"nexttowardf":["float","(float, long double)"],
"__nexttowardf":["float","(float, long double)"],
"nextdownf":["float","(float)"],
"__nextdownf":["float","(float)"],
"nextupf":["float","(float)"],
"__nextupf":["float","(float)"],
"remainderf":["float","(float, float)"],
"__remainderf":["float","(float, float)"],
"scalbnf":["float","(float, int)"],
"__scalbnf":["float","(float, int)"],
"ilogbf":["int","(float)"],
"__ilogbf":["int","(float)"],
"llogbf":["long","(float)"],
"__llogbf":["long","(float)"],
"scalblnf":["float","(float, long)"],
"__scalblnf":["float","(float, long)"],
"nearbyintf":["float","(float)"],
"__nearbyintf":["float","(float)"],
"roundf":["float","(float)"],
"__roundf":["float","(float)"],
"truncf":["float","(float)"],
"__truncf":["float","(float)"],
"remquof":["float","(float, float, int *)"],
"__remquof":["float","(float, float, int *)"],
"lrintf":["long","(float)"],
"__lrintf":["long","(float)"],
"llrintf":["long long","(float)"],
"__llrintf":["long long","(float)"],
"lroundf":["long","(float)"],
"__lroundf":["long","(float)"],
"llroundf":["long long","(float)"],
"__llroundf":["long long","(float)"],
"fdimf":["float","(float, float)"],
"__fdimf":["float","(float, float)"],
"fmaxf":["float","(float, float)"],
"__fmaxf":["float","(float, float)"],
"fminf":["float","(float, float)"],
"__fminf":["float","(float, float)"],
"fmaf":["float","(float, float, float)"],
"__fmaf":["float","(float, float, float)"],
"roundevenf":["float","(float)"],
"__roundevenf":["float","(float)"],
"fromfpf":["__intmax_t","(float, int, unsigned int)"],
"__fromfpf":["__intmax_t","(float, int, unsigned int)"],
"ufromfpf":["__uintmax_t","(float, int, unsigned int)"],
"__ufromfpf":["__uintmax_t","(float, int, unsigned int)"],
"fromfpxf":["__intmax_t","(float, int, unsigned int)"],
"__fromfpxf":["__intmax_t","(float, int, unsigned int)"],
"ufromfpxf":["__uintmax_t","(float, int, unsigned int)"],
"__ufromfpxf":["__uintmax_t","(float, int, unsigned int)"],
"canonicalizef":["int","(float *, const float *)"],
"fmaxmagf":["float","(float, float)"],
"__fmaxmagf":["float","(float, float)"],
"fminmagf":["float","(float, float)"],
"__fminmagf":["float","(float, float)"],
"fmaximumf":["float","(float, float)"],
"__fmaximumf":["float","(float, float)"],
"fminimumf":["float","(float, float)"],
"__fminimumf":["float","(float, float)"],
"fmaximum_numf":["float","(float, float)"],
"__fmaximum_numf":["float","(float, float)"],
"fminimum_numf":["float","(float, float)"],
"__fminimum_numf":["float","(float, float)"],
"fmaximum_magf":["float","(float, float)"],
"__fmaximum_magf":["float","(float, float)"],
"fminimum_magf":["float","(float, float)"],
"__fminimum_magf":["float","(float, float)"],
"fmaximum_mag_numf":["float","(float, float)"],
"__fmaximum_mag_numf":["float","(float, float)"],
"fminimum_mag_numf":["float","(float, float)"],
"__fminimum_mag_numf":["float","(float, float)"],
"totalorderf":["int","(const float *, const float *)"],
"totalordermagf":["int","(const float *, const float *)"],
"getpayloadf":["float","(const float *)"],
"__getpayloadf":["float","(const float *)"],
"setpayloadf":["int","(float *, float)"],
"setpayloadsigf":["int","(float *, float)"],
"scalbf":["float","(float, float)"],
"__scalbf":["float","(float, float)"],
"__fpclassifyl":["int","(long double)"],
"__signbitl":["int","(long double)"],
"__isinfl":["int","(long double)"],
"__finitel":["int","(long double)"],
"__isnanl":["int","(long double)"],
"__iseqsigl":["int","(long double, long double)"],
"__issignalingl":["int","(long double)"],
"acosl":["long double","(long double)"],
"__acosl":["long double","(long double)"],
"asinl":["long double","(long double)"],
"__asinl":["long double","(long double)"],
"atanl":["long double","(long double)"],
"__atanl":["long double","(long double)"],
"atan2l":["long double","(long double, long double)"],
"__atan2l":["long double","(long double, long double)"],
"cosl":["long double","(long double)"],
"__cosl":["long double","(long double)"],
"sinl":["long double","(long double)"],
"__sinl":["long double","(long double)"],
"tanl":["long double","(long double)"],
"__tanl":["long double","(long double)"],
"coshl":["long double","(long double)"],
"__coshl":["long double","(long double)"],
"sinhl":["long double","(long double)"],
"__sinhl":["long double","(long double)"],
"tanhl":["long double","(long double)"],
"__tanhl":["long double","(long double)"],
"sincosl":["void","(long double, long double *, long double *)"],
"__sincosl":["void","(long double, long double *, long double *)"],
"acoshl":["long double","(long double)"],
"__acoshl":["long double","(long double)"],
"asinhl":["long double","(long double)"],
"__asinhl":["long double","(long double)"],
"atanhl":["long double","(long double)"],
"__atanhl":["long double","(long double)"],
"expl":["long double","(long double)"],
"__expl":["long double","(long double)"],
"frexpl":["long double","(long double, int *)"],
"__frexpl":["long double","(long double, int *)"],
"ldexpl":["long double","(long double, int)"],
"__ldexpl":["long double","(long double, int)"],
"logl":["long double","(long double)"],
"__logl":["long double","(long double)"],
"log10l":["long double","(long double)"],
"__log10l":["long double","(long double)"],
"modfl":["long double","(long double, long double *)"],
"__modfl":["long double","(long double, long double *)"],
"exp10l":["long double","(long double)"],
"__exp10l":["long double","(long double)"],
"expm1l":["long double","(long double)"],
"__expm1l":["long double","(long double)"],
"log1pl":["long double","(long double)"],
"__log1pl":["long double","(long double)"],
"logbl":["long double","(long double)"],
"__logbl":["long double","(long double)"],
"exp2l":["long double","(long double)"],
"__exp2l":["long double","(long double)"],
"log2l":["long double","(long double)"],
"__log2l":["long double","(long double)"],
"powl":["long double","(long double, long double)"],
"__powl":["long double","(long double, long double)"],
"sqrtl":["long double","(long double)"],
"__sqrtl":["long double","(long double)"],
"hypotl":["long double","(long double, long double)"],
"__hypotl":["long double","(long double, long double)"],
"cbrtl":["long double","(long double)"],
"__cbrtl":["long double","(long double)"],
"ceill":["long double","(long double)"],
"__ceill":["long double","(long double)"],
"fabsl":["long double","(long double)"],
"__fabsl":["long double","(long double)"],
"floorl":["long double","(long double)"],
"__floorl":["long double","(long double)"],
"fmodl":["long double","(long double, long double)"],
"__fmodl":["long double","(long double, long double)"],
"isinfl":["int","(long double)"],
"finitel":["int","(long double)"],
"dreml":["long double","(long double, long double)"],
"__dreml":["long double","(long double, long double)"],
"significandl":["long double","(long double)"],
"__significandl":["long double","(long double)"],
"copysignl":["long double","(long double, long double)"],
"__copysignl":["long double","(long double, long double)"],
"nanl":["long double","(const char *)"],
"__nanl":["long double","(const char *)"],
"isnanl":["int","(long double)"],
"j0l":["long double","(long double)"],
"__j0l":["long double","(long double)"],
"j1l":["long double","(long double)"],
"__j1l":["long double","(long double)"],
"jnl":["long double","(int, long double)"],
"__jnl":["long double","(int, long double)"],
"y0l":["long double","(long double)"],
"__y0l":["long double","(long double)"],
"y1l":["long double","(long double)"],
"__y1l":["long double","(long double)"],
"ynl":["long double","(int, long double)"],
"__ynl":["long double","(int, long double)"],
"erfl":["long double","(long double)"],
"__erfl":["long double","(long double)"],
"erfcl":["long double","(long double)"],
"__erfcl":["long double","(long double)"],
"lgammal":["long double","(long double)"],
"__lgammal":["long double","(long double)"],
"tgammal":["long double","(long double)"],
"__tgammal":["long double","(long double)"],
"gammal":["long double","(long double)"],
"__gammal":["long double","(long double)"],
"lgammal_r":["long double","(long double, int *)"],
"__lgammal_r":["long double","(long double, int *)"],
"rintl":["long double","(long double)"],
"__rintl":["long double","(long double)"],
"nextafterl":["long double","(long double, long double)"],
"__nextafterl":["long double","(long double, long double)"],
"nexttowardl":["long double","(long double, long double)"],
"__nexttowardl":["long double","(long double, long double)"],
"nextdownl":["long double","(long double)"],
"__nextdownl":["long double","(long double)"],
"nextupl":["long double","(long double)"],
"__nextupl":["long double","(long double)"],
"remainderl":["long double","(long double, long double)"],
"__remainderl":["long double","(long double, long double)"],
"scalbnl":["long double","(long double, int)"],
"__scalbnl":["long double","(long double, int)"],
"ilogbl":["int","(long double)"],
"__ilogbl":["int","(long double)"],
"llogbl":["long","(long double)"],
"__llogbl":["long","(long double)"],
"scalblnl":["long double","(long double, long)"],
"__scalblnl":["long double","(long double, long)"],
"nearbyintl":["long double","(long double)"],
"__nearbyintl":["long double","(long double)"],
"roundl":["long double","(long double)"],
"__roundl":["long double","(long double)"],
"truncl":["long double","(long double)"],
"__truncl":["long double","(long double)"],
"remquol":["long double","(long double, long double, int *)"],
"__remquol":["long double","(long double, long double, int *)"],
"lrintl":["long","(long double)"],
"__lrintl":["long","(long double)"],
"llrintl":["long long","(long double)"],
"__llrintl":["long long","(long double)"],
"lroundl":["long","(long double)"],
"__lroundl":["long","(long double)"],
"llroundl":["long long","(long double)"],
"__llroundl":["long long","(long double)"],
"fdiml":["long double","(long double, long double)"],
"__fdiml":["long double","(long double, long double)"],
"fmaxl":["long double","(long double, long double)"],
"__fmaxl":["long double","(long double, long double)"],
"fminl":["long double","(long double, long double)"],
"__fminl":["long double","(long double, long double)"],
"fmal":["long double","(long double, long double, long double)"],
"__fmal":["long double","(long double, long double, long double)"],
"roundevenl":["long double","(long double)"],
"__roundevenl":["long double","(long double)"],
"fromfpl":["__intmax_t","(long double, int, unsigned int)"],
"__fromfpl":["__intmax_t","(long double, int, unsigned int)"],
"ufromfpl":["__uintmax_t","(long double, int, unsigned int)"],
"__ufromfpl":["__uintmax_t","(long double, int, unsigned int)"],
"fromfpxl":["__intmax_t","(long double, int, unsigned int)"],
"__fromfpxl":["__intmax_t","(long double, int, unsigned int)"],
"ufromfpxl":["__uintmax_t","(long double, int, unsigned int)"],
"__ufromfpxl":["__uintmax_t","(long double, int, unsigned int)"],
"canonicalizel":["int","(long double *, const long double *)"],
"fmaxmagl":["long double","(long double, long double)"],
"__fmaxmagl":["long double","(long double, long double)"],
"fminmagl":["long double","(long double, long double)"],
"__fminmagl":["long double","(long double, long double)"],
"fmaximuml":["long double","(long double, long double)"],
"__fmaximuml":["long double","(long double, long double)"],
"fminimuml":["long double","(long double, long double)"],
"__fminimuml":["long double","(long double, long double)"],
"fmaximum_numl":["long double","(long double, long double)"],
"__fmaximum_numl":["long double","(long double, long double)"],
"fminimum_numl":["long double","(long double, long double)"],
"__fminimum_numl":["long double","(long double, long double)"],
"fmaximum_magl":["long double","(long double, long double)"],
"__fmaximum_magl":["long double","(long double, long double)"],
"fminimum_magl":["long double","(long double, long double)"],
"__fminimum_magl":["long double","(long double, long double)"],
"fmaximum_mag_numl":["long double","(long double, long double)"],
"__fmaximum_mag_numl":["long double","(long double, long double)"],
"fminimum_mag_numl":["long double","(long double, long double)"],
"__fminimum_mag_numl":["long double","(long double, long double)"],
"totalorderl":["int","(const long double *, const long double *)"],
"totalordermagl":["int","(const long double *, const long double *)"],
"getpayloadl":["long double","(const long double *)"],
"__getpayloadl":["long double","(const long double *)"],
"setpayloadl":["int","(long double *, long double)"],
"setpayloadsigl":["int","(long double *, long double)"],
"scalbl":["long double","(long double, long double)"],
"__scalbl":["long double","(long double, long double)"],
"acosf32":["_Float32","(_Float32)"],
"__acosf32":["_Float32","(_Float32)"],
"asinf32":["_Float32","(_Float32)"],
"__asinf32":["_Float32","(_Float32)"],
"atanf32":["_Float32","(_Float32)"],
"__atanf32":["_Float32","(_Float32)"],
"atan2f32":["_Float32","(_Float32, _Float32)"],
"__atan2f32":["_Float32","(_Float32, _Float32)"],
"cosf32":["_Float32","(_Float32)"],
"__cosf32":["_Float32","(_Float32)"],
"sinf32":["_Float32","(_Float32)"],
"__sinf32":["_Float32","(_Float32)"],
"tanf32":["_Float32","(_Float32)"],
"__tanf32":["_Float32","(_Float32)"],
"coshf32":["_Float32","(_Float32)"],
"__coshf32":["_Float32","(_Float32)"],
"sinhf32":["_Float32","(_Float32)"],
"__sinhf32":["_Float32","(_Float32)"],
"tanhf32":["_Float32","(_Float32)"],
"__tanhf32":["_Float32","(_Float32)"],
"sincosf32":["void","(_Float32, _Float32 *, _Float32 *)"],
"__sincosf32":["void","(_Float32, _Float32 *, _Float32 *)"],
"acoshf32":["_Float32","(_Float32)"],
"__acoshf32":["_Float32","(_Float32)"],
"asinhf32":["_Float32","(_Float32)"],
"__asinhf32":["_Float32","(_Float32)"],
"atanhf32":["_Float32","(_Float32)"],
"__atanhf32":["_Float32","(_Float32)"],
"expf32":["_Float32","(_Float32)"],
"__expf32":["_Float32","(_Float32)"],
"frexpf32":["_Float32","(_Float32, int *)"],
"__frexpf32":["_Float32","(_Float32, int *)"],
"ldexpf32":["_Float32","(_Float32, int)"],
"__ldexpf32":["_Float32","(_Float32, int)"],
"logf32":["_Float32","(_Float32)"],
"__logf32":["_Float32","(_Float32)"],
"log10f32":["_Float32","(_Float32)"],
"__log10f32":["_Float32","(_Float32)"],
"modff32":["_Float32","(_Float32, _Float32 *)"],
"__modff32":["_Float32","(_Float32, _Float32 *)"],
"exp10f32":["_Float32","(_Float32)"],
"__exp10f32":["_Float32","(_Float32)"],
"expm1f32":["_Float32","(_Float32)"],
"__expm1f32":["_Float32","(_Float32)"],
"log1pf32":["_Float32","(_Float32)"],
"__log1pf32":["_Float32","(_Float32)"],
"logbf32":["_Float32","(_Float32)"],
"__logbf32":["_Float32","(_Float32)"],
"exp2f32":["_Float32","(_Float32)"],
"__exp2f32":["_Float32","(_Float32)"],
"log2f32":["_Float32","(_Float32)"],
"__log2f32":["_Float32","(_Float32)"],
"powf32":["_Float32","(_Float32, _Float32)"],
"__powf32":["_Float32","(_Float32, _Float32)"],
"sqrtf32":["_Float32","(_Float32)"],
"__sqrtf32":["_Float32","(_Float32)"],
"hypotf32":["_Float32","(_Float32, _Float32)"],
"__hypotf32":["_Float32","(_Float32, _Float32)"],
"cbrtf32":["_Float32","(_Float32)"],
"__cbrtf32":["_Float32","(_Float32)"],
"ceilf32":["_Float32","(_Float32)"],
"__ceilf32":["_Float32","(_Float32)"],
"fabsf32":["_Float32","(_Float32)"],
"__fabsf32":["_Float32","(_Float32)"],
"floorf32":["_Float32","(_Float32)"],
"__floorf32":["_Float32","(_Float32)"],
"fmodf32":["_Float32","(_Float32, _Float32)"],
"__fmodf32":["_Float32","(_Float32, _Float32)"],
"copysignf32":["_Float32","(_Float32, _Float32)"],
"__copysignf32":["_Float32","(_Float32, _Float32)"],
"nanf32":["_Float32","(const char *)"],
"__nanf32":["_Float32","(const char *)"],
"j0f32":["_Float32","(_Float32)"],
"__j0f32":["_Float32","(_Float32)"],
"j1f32":["_Float32","(_Float32)"],
"__j1f32":["_Float32","(_Float32)"],
"jnf32":["_Float32","(int, _Float32)"],
"__jnf32":["_Float32","(int, _Float32)"],
"y0f32":["_Float32","(_Float32)"],
"__y0f32":["_Float32","(_Float32)"],
"y1f32":["_Float32","(_Float32)"],
"__y1f32":["_Float32","(_Float32)"],
"ynf32":["_Float32","(int, _Float32)"],
"__ynf32":["_Float32","(int, _Float32)"],
"erff32":["_Float32","(_Float32)"],
"__erff32":["_Float32","(_Float32)"],
"erfcf32":["_Float32","(_Float32)"],
"__erfcf32":["_Float32","(_Float32)"],
"lgammaf32":["_Float32","(_Float32)"],
"__lgammaf32":["_Float32","(_Float32)"],
"tgammaf32":["_Float32","(_Float32)"],
"__tgammaf32":["_Float32","(_Float32)"],
"lgammaf32_r":["_Float32","(_Float32, int *)"],
"__lgammaf32_r":["_Float32","(_Float32, int *)"],
"rintf32":["_Float32","(_Float32)"],
"__rintf32":["_Float32","(_Float32)"],
"nextafterf32":["_Float32","(_Float32, _Float32)"],
"__nextafterf32":["_Float32","(_Float32, _Float32)"],
"nextdownf32":["_Float32","(_Float32)"],
"__nextdownf32":["_Float32","(_Float32)"],
"nextupf32":["_Float32","(_Float32)"],
"__nextupf32":["_Float32","(_Float32)"],
"remainderf32":["_Float32","(_Float32, _Float32)"],
"__remainderf32":["_Float32","(_Float32, _Float32)"],
"scalbnf32":["_Float32","(_Float32, int)"],
"__scalbnf32":["_Float32","(_Float32, int)"],
"ilogbf32":["int","(_Float32)"],
"__ilogbf32":["int","(_Float32)"],
"llogbf32":["long","(_Float32)"],
"__llogbf32":["long","(_Float32)"],
"scalblnf32":["_Float32","(_Float32, long)"],
"__scalblnf32":["_Float32","(_Float32, long)"],
"nearbyintf32":["_Float32","(_Float32)"],
"__nearbyintf32":["_Float32","(_Float32)"],
"roundf32":["_Float32","(_Float32)"],
"__roundf32":["_Float32","(_Float32)"],
"truncf32":["_Float32","(_Float32)"],
"__truncf32":["_Float32","(_Float32)"],
"remquof32":["_Float32","(_Float32, _Float32, int *)"],
"__remquof32":["_Float32","(_Float32, _Float32, int *)"],
"lrintf32":["long","(_Float32)"],
"__lrintf32":["long","(_Float32)"],
"llrintf32":["long long","(_Float32)"],
"__llrintf32":["long long","(_Float32)"],
"lroundf32":["long","(_Float32)"],
"__lroundf32":["long","(_Float32)"],
"llroundf32":["long long","(_Float32)"],
"__llroundf32":["long long","(_Float32)"],
"fdimf32":["_Float32","(_Float32, _Float32)"],
"__fdimf32":["_Float32","(_Float32, _Float32)"],
"fmaxf32":["_Float32","(_Float32, _Float32)"],
"__fmaxf32":["_Float32","(_Float32, _Float32)"],
"fminf32":["_Float32","(_Float32, _Float32)"],
"__fminf32":["_Float32","(_Float32, _Float32)"],
"fmaf32":["_Float32","(_Float32, _Float32, _Float32)"],
"__fmaf32":["_Float32","(_Float32, _Float32, _Float32)"],
"roundevenf32":["_Float32","(_Float32)"],
"__roundevenf32":["_Float32","(_Float32)"],
"fromfpf32":["__intmax_t","(_Float32, int, unsigned int)"],
"__fromfpf32":["__intmax_t","(_Float32, int, unsigned int)"],
"ufromfpf32":["__uintmax_t","(_Float32, int, unsigned int)"],
"__ufromfpf32":["__uintmax_t","(_Float32, int, unsigned int)"],
"fromfpxf32":["__intmax_t","(_Float32, int, unsigned int)"],
"__fromfpxf32":["__intmax_t","(_Float32, int, unsigned int)"],
"ufromfpxf32":["__uintmax_t","(_Float32, int, unsigned int)"],
"__ufromfpxf32":["__uintmax_t","(_Float32, int, unsigned int)"],
"canonicalizef32":["int","(_Float32 *, const _Float32 *)"],
"fmaxmagf32":["_Float32","(_Float32, _Float32)"],
"__fmaxmagf32":["_Float32","(_Float32, _Float32)"],
"fminmagf32":["_Float32","(_Float32, _Float32)"],
"__fminmagf32":["_Float32","(_Float32, _Float32)"],
"fmaximumf32":["_Float32","(_Float32, _Float32)"],
"__fmaximumf32":["_Float32","(_Float32, _Float32)"],
"fminimumf32":["_Float32","(_Float32, _Float32)"],
"__fminimumf32":["_Float32","(_Float32, _Float32)"],
"fmaximum_numf32":["_Float32","(_Float32, _Float32)"],
"__fmaximum_numf32":["_Float32","(_Float32, _Float32)"],
"fminimum_numf32":["_Float32","(_Float32, _Float32)"],
"__fminimum_numf32":["_Float32","(_Float32, _Float32)"],
"fmaximum_magf32":["_Float32","(_Float32, _Float32)"],
"__fmaximum_magf32":["_Float32","(_Float32, _Float32)"],
"fminimum_magf32":["_Float32","(_Float32, _Float32)"],
"__fminimum_magf32":["_Float32","(_Float32, _Float32)"],
"fmaximum_mag_numf32":["_Float32","(_Float32, _Float32)"],
"__fmaximum_mag_numf32":["_Float32","(_Float32, _Float32)"],
"fminimum_mag_numf32":["_Float32","(_Float32, _Float32)"],
"__fminimum_mag_numf32":["_Float32","(_Float32, _Float32)"],
"totalorderf32":["int","(const _Float32 *, const _Float32 *)"],
"totalordermagf32":["int","(const _Float32 *, const _Float32 *)"],
"getpayloadf32":["_Float32","(const _Float32 *)"],
"__getpayloadf32":["_Float32","(const _Float32 *)"],
"setpayloadf32":["int","(_Float32 *, _Float32)"],
"setpayloadsigf32":["int","(_Float32 *, _Float32)"],
"acosf64":["_Float64","(_Float64)"],
"__acosf64":["_Float64","(_Float64)"],
"asinf64":["_Float64","(_Float64)"],
"__asinf64":["_Float64","(_Float64)"],
"atanf64":["_Float64","(_Float64)"],
"__atanf64":["_Float64","(_Float64)"],
"atan2f64":["_Float64","(_Float64, _Float64)"],
"__atan2f64":["_Float64","(_Float64, _Float64)"],
"cosf64":["_Float64","(_Float64)"],
"__cosf64":["_Float64","(_Float64)"],
"sinf64":["_Float64","(_Float64)"],
"__sinf64":["_Float64","(_Float64)"],
"tanf64":["_Float64","(_Float64)"],
"__tanf64":["_Float64","(_Float64)"],
"coshf64":["_Float64","(_Float64)"],
"__coshf64":["_Float64","(_Float64)"],
"sinhf64":["_Float64","(_Float64)"],
"__sinhf64":["_Float64","(_Float64)"],
"tanhf64":["_Float64","(_Float64)"],
"__tanhf64":["_Float64","(_Float64)"],
"sincosf64":["void","(_Float64, _Float64 *, _Float64 *)"],
"__sincosf64":["void","(_Float64, _Float64 *, _Float64 *)"],
"acoshf64":["_Float64","(_Float64)"],
"__acoshf64":["_Float64","(_Float64)"],
"asinhf64":["_Float64","(_Float64)"],
"__asinhf64":["_Float64","(_Float64)"],
"atanhf64":["_Float64","(_Float64)"],
"__atanhf64":["_Float64","(_Float64)"],
"expf64":["_Float64","(_Float64)"],
"__expf64":["_Float64","(_Float64)"],
"frexpf64":["_Float64","(_Float64, int *)"],
"__frexpf64":["_Float64","(_Float64, int *)"],
"ldexpf64":["_Float64","(_Float64, int)"],
"__ldexpf64":["_Float64","(_Float64, int)"],
"logf64":["_Float64","(_Float64)"],
"__logf64":["_Float64","(_Float64)"],
"log10f64":["_Float64","(_Float64)"],
"__log10f64":["_Float64","(_Float64)"],
"modff64":["_Float64","(_Float64, _Float64 *)"],
"__modff64":["_Float64","(_Float64, _Float64 *)"],
"exp10f64":["_Float64","(_Float64)"],
"__exp10f64":["_Float64","(_Float64)"],
"expm1f64":["_Float64","(_Float64)"],
"__expm1f64":["_Float64","(_Float64)"],
"log1pf64":["_Float64","(_Float64)"],
"__log1pf64":["_Float64","(_Float64)"],
"logbf64":["_Float64","(_Float64)"],
"__logbf64":["_Float64","(_Float64)"],
"exp2f64":["_Float64","(_Float64)"],
"__exp2f64":["_Float64","(_Float64)"],
"log2f64":["_Float64","(_Float64)"],
"__log2f64":["_Float64","(_Float64)"],
"powf64":["_Float64","(_Float64, _Float64)"],
"__powf64":["_Float64","(_Float64, _Float64)"],
"sqrtf64":["_Float64","(_Float64)"],
"__sqrtf64":["_Float64","(_Float64)"],
"hypotf64":["_Float64","(_Float64, _Float64)"],
"__hypotf64":["_Float64","(_Float64, _Float64)"],
"cbrtf64":["_Float64","(_Float64)"],
"__cbrtf64":["_Float64","(_Float64)"],
"ceilf64":["_Float64","(_Float64)"],
"__ceilf64":["_Float64","(_Float64)"],
"fabsf64":["_Float64","(_Float64)"],
"__fabsf64":["_Float64","(_Float64)"],
"floorf64":["_Float64","(_Float64)"],
"__floorf64":["_Float64","(_Float64)"],
"fmodf64":["_Float64","(_Float64, _Float64)"],
"__fmodf64":["_Float64","(_Float64, _Float64)"],
"copysignf64":["_Float64","(_Float64, _Float64)"],
"__copysignf64":["_Float64","(_Float64, _Float64)"],
"nanf64":["_Float64","(const char *)"],
"__nanf64":["_Float64","(const char *)"],
"j0f64":["_Float64","(_Float64)"],
"__j0f64":["_Float64","(_Float64)"],
"j1f64":["_Float64","(_Float64)"],
"__j1f64":["_Float64","(_Float64)"],
"jnf64":["_Float64","(int, _Float64)"],
"__jnf64":["_Float64","(int, _Float64)"],
"y0f64":["_Float64","(_Float64)"],
"__y0f64":["_Float64","(_Float64)"],
"y1f64":["_Float64","(_Float64)"],
"__y1f64":["_Float64","(_Float64)"],
"ynf64":["_Float64","(int, _Float64)"],
"__ynf64":["_Float64","(int, _Float64)"],
"erff64":["_Float64","(_Float64)"],
"__erff64":["_Float64","(_Float64)"],
"erfcf64":["_Float64","(_Float64)"],
"__erfcf64":["_Float64","(_Float64)"],
"lgammaf64":["_Float64","(_Float64)"],
"__lgammaf64":["_Float64","(_Float64)"],
"tgammaf64":["_Float64","(_Float64)"],
"__tgammaf64":["_Float64","(_Float64)"],
"lgammaf64_r":["_Float64","(_Float64, int *)"],
"__lgammaf64_r":["_Float64","(_Float64, int *)"],
"rintf64":["_Float64","(_Float64)"],
"__rintf64":["_Float64","(_Float64)"],
"nextafterf64":["_Float64","(_Float64, _Float64)"],
"__nextafterf64":["_Float64","(_Float64, _Float64)"],
"nextdownf64":["_Float64","(_Float64)"],
"__nextdownf64":["_Float64","(_Float64)"],
"nextupf64":["_Float64","(_Float64)"],
"__nextupf64":["_Float64","(_Float64)"],
"remainderf64":["_Float64","(_Float64, _Float64)"],
"__remainderf64":["_Float64","(_Float64, _Float64)"],
"scalbnf64":["_Float64","(_Float64, int)"],
"__scalbnf64":["_Float64","(_Float64, int)"],
"ilogbf64":["int","(_Float64)"],
"__ilogbf64":["int","(_Float64)"],
"llogbf64":["long","(_Float64)"],
"__llogbf64":["long","(_Float64)"],
"scalblnf64":["_Float64","(_Float64, long)"],
"__scalblnf64":["_Float64","(_Float64, long)"],
"nearbyintf64":["_Float64","(_Float64)"],
"__nearbyintf64":["_Float64","(_Float64)"],
"roundf64":["_Float64","(_Float64)"],
"__roundf64":["_Float64","(_Float64)"],
"truncf64":["_Float64","(_Float64)"],
"__truncf64":["_Float64","(_Float64)"],
"remquof64":["_Float64","(_Float64, _Float64, int *)"],
"__remquof64":["_Float64","(_Float64, _Float64, int *)"],
"lrintf64":["long","(_Float64)"],
"__lrintf64":["long","(_Float64)"],
"llrintf64":["long long","(_Float64)"],
"__llrintf64":["long long","(_Float64)"],
"lroundf64":["long","(_Float64)"],
"__lroundf64":["long","(_Float64)"],
"llroundf64":["long long","(_Float64)"],
"__llroundf64":["long long","(_Float64)"],
"fdimf64":["_Float64","(_Float64, _Float64)"],
"__fdimf64":["_Float64","(_Float64, _Float64)"],
"fmaxf64":["_Float64","(_Float64, _Float64)"],
"__fmaxf64":["_Float64","(_Float64, _Float64)"],
"fminf64":["_Float64","(_Float64, _Float64)"],
"__fminf64":["_Float64","(_Float64, _Float64)"],
"fmaf64":["_Float64","(_Float64, _Float64, _Float64)"],
"__fmaf64":["_Float64","(_Float64, _Float64, _Float64)"],
"roundevenf64":["_Float64","(_Float64)"],
"__roundevenf64":["_Float64","(_Float64)"],
"fromfpf64":["__intmax_t","(_Float64, int, unsigned int)"],
"__fromfpf64":["__intmax_t","(_Float64, int, unsigned int)"],
"ufromfpf64":["__uintmax_t","(_Float64, int, unsigned int)"],
"__ufromfpf64":["__uintmax_t","(_Float64, int, unsigned int)"],
"fromfpxf64":["__intmax_t","(_Float64, int, unsigned int)"],
"__fromfpxf64":["__intmax_t","(_Float64, int, unsigned int)"],
"ufromfpxf64":["__uintmax_t","(_Float64, int, unsigned int)"],
"__ufromfpxf64":["__uintmax_t","(_Float64, int, unsigned int)"],
"canonicalizef64":["int","(_Float64 *, const _Float64 *)"],
"fmaxmagf64":["_Float64","(_Float64, _Float64)"],
"__fmaxmagf64":["_Float64","(_Float64, _Float64)"],
"fminmagf64":["_Float64","(_Float64, _Float64)"],
"__fminmagf64":["_Float64","(_Float64, _Float64)"],
"fmaximumf64":["_Float64","(_Float64, _Float64)"],
"__fmaximumf64":["_Float64","(_Float64, _Float64)"],
"fminimumf64":["_Float64","(_Float64, _Float64)"],
"__fminimumf64":["_Float64","(_Float64, _Float64)"],
"fmaximum_numf64":["_Float64","(_Float64, _Float64)"],
"__fmaximum_numf64":["_Float64","(_Float64, _Float64)"],
"fminimum_numf64":["_Float64","(_Float64, _Float64)"],
"__fminimum_numf64":["_Float64","(_Float64, _Float64)"],
"fmaximum_magf64":["_Float64","(_Float64, _Float64)"],
"__fmaximum_magf64":["_Float64","(_Float64, _Float64)"],
"fminimum_magf64":["_Float64","(_Float64, _Float64)"],
"__fminimum_magf64":["_Float64","(_Float64, _Float64)"],
"fmaximum_mag_numf64":["_Float64","(_Float64, _Float64)"],
"__fmaximum_mag_numf64":["_Float64","(_Float64, _Float64)"],
"fminimum_mag_numf64":["_Float64","(_Float64, _Float64)"],
"__fminimum_mag_numf64":["_Float64","(_Float64, _Float64)"],
"totalorderf64":["int","(const _Float64 *, const _Float64 *)"],
"totalordermagf64":["int","(const _Float64 *, const _Float64 *)"],
"getpayloadf64":["_Float64","(const _Float64 *)"],
"__getpayloadf64":["_Float64","(const _Float64 *)"],
"setpayloadf64":["int","(_Float64 *, _Float64)"],
"setpayloadsigf64":["int","(_Float64 *, _Float64)"],
"acosf32x":["_Float32x","(_Float32x)"],
"__acosf32x":["_Float32x","(_Float32x)"],
"asinf32x":["_Float32x","(_Float32x)"],
"__asinf32x":["_Float32x","(_Float32x)"],
"atanf32x":["_Float32x","(_Float32x)"],
"__atanf32x":["_Float32x","(_Float32x)"],
"atan2f32x":["_Float32x","(_Float32x, _Float32x)"],
"__atan2f32x":["_Float32x","(_Float32x, _Float32x)"],
"cosf32x":["_Float32x","(_Float32x)"],
"__cosf32x":["_Float32x","(_Float32x)"],
"sinf32x":["_Float32x","(_Float32x)"],
"__sinf32x":["_Float32x","(_Float32x)"],
"tanf32x":["_Float32x","(_Float32x)"],
"__tanf32x":["_Float32x","(_Float32x)"],
"coshf32x":["_Float32x","(_Float32x)"],
"__coshf32x":["_Float32x","(_Float32x)"],
"sinhf32x":["_Float32x","(_Float32x)"],
"__sinhf32x":["_Float32x","(_Float32x)"],
"tanhf32x":["_Float32x","(_Float32x)"],
"__tanhf32x":["_Float32x","(_Float32x)"],
"sincosf32x":["void","(_Float32x, _Float32x *, _Float32x *)"],
"__sincosf32x":["void","(_Float32x, _Float32x *, _Float32x *)"],
"acoshf32x":["_Float32x","(_Float32x)"],
"__acoshf32x":["_Float32x","(_Float32x)"],
"asinhf32x":["_Float32x","(_Float32x)"],
"__asinhf32x":["_Float32x","(_Float32x)"],
"atanhf32x":["_Float32x","(_Float32x)"],
"__atanhf32x":["_Float32x","(_Float32x)"],
"expf32x":["_Float32x","(_Float32x)"],
"__expf32x":["_Float32x","(_Float32x)"],
"frexpf32x":["_Float32x","(_Float32x, int *)"],
"__frexpf32x":["_Float32x","(_Float32x, int *)"],
"ldexpf32x":["_Float32x","(_Float32x, int)"],
"__ldexpf32x":["_Float32x","(_Float32x, int)"],
"logf32x":["_Float32x","(_Float32x)"],
"__logf32x":["_Float32x","(_Float32x)"],
"log10f32x":["_Float32x","(_Float32x)"],
"__log10f32x":["_Float32x","(_Float32x)"],
"modff32x":["_Float32x","(_Float32x, _Float32x *)"],
"__modff32x":["_Float32x","(_Float32x, _Float32x *)"],
"exp10f32x":["_Float32x","(_Float32x)"],
"__exp10f32x":["_Float32x","(_Float32x)"],
"expm1f32x":["_Float32x","(_Float32x)"],
"__expm1f32x":["_Float32x","(_Float32x)"],
"log1pf32x":["_Float32x","(_Float32x)"],
"__log1pf32x":["_Float32x","(_Float32x)"],
"logbf32x":["_Float32x","(_Float32x)"],
"__logbf32x":["_Float32x","(_Float32x)"],
"exp2f32x":["_Float32x","(_Float32x)"],
"__exp2f32x":["_Float32x","(_Float32x)"],
"log2f32x":["_Float32x","(_Float32x)"],
"__log2f32x":["_Float32x","(_Float32x)"],
"powf32x":["_Float32x","(_Float32x, _Float32x)"],
"__powf32x":["_Float32x","(_Float32x, _Float32x)"],
"sqrtf32x":["_Float32x","(_Float32x)"],
"__sqrtf32x":["_Float32x","(_Float32x)"],
"hypotf32x":["_Float32x","(_Float32x, _Float32x)"],
"__hypotf32x":["_Float32x","(_Float32x, _Float32x)"],
"cbrtf32x":["_Float32x","(_Float32x)"],
"__cbrtf32x":["_Float32x","(_Float32x)"],
"ceilf32x":["_Float32x","(_Float32x)"],
"__ceilf32x":["_Float32x","(_Float32x)"],
"fabsf32x":["_Float32x","(_Float32x)"],
"__fabsf32x":["_Float32x","(_Float32x)"],
"floorf32x":["_Float32x","(_Float32x)"],
"__floorf32x":["_Float32x","(_Float32x)"],
"fmodf32x":["_Float32x","(_Float32x, _Float32x)"],
"__fmodf32x":["_Float32x","(_Float32x, _Float32x)"],
"copysignf32x":["_Float32x","(_Float32x, _Float32x)"],
"__copysignf32x":["_Float32x","(_Float32x, _Float32x)"],
"nanf32x":["_Float32x","(const char *)"],
"__nanf32x":["_Float32x","(const char *)"],
"j0f32x":["_Float32x","(_Float32x)"],
"__j0f32x":["_Float32x","(_Float32x)"],
"j1f32x":["_Float32x","(_Float32x)"],
"__j1f32x":["_Float32x","(_Float32x)"],
"jnf32x":["_Float32x","(int, _Float32x)"],
"__jnf32x":["_Float32x","(int, _Float32x)"],
"y0f32x":["_Float32x","(_Float32x)"],
"__y0f32x":["_Float32x","(_Float32x)"],
"y1f32x":["_Float32x","(_Float32x)"],
"__y1f32x":["_Float32x","(_Float32x)"],
"ynf32x":["_Float32x","(int, _Float32x)"],
"__ynf32x":["_Float32x","(int, _Float32x)"],
"erff32x":["_Float32x","(_Float32x)"],
"__erff32x":["_Float32x","(_Float32x)"],
"erfcf32x":["_Float32x","(_Float32x)"],
"__erfcf32x":["_Float32x","(_Float32x)"],
"lgammaf32x":["_Float32x","(_Float32x)"],
"__lgammaf32x":["_Float32x","(_Float32x)"],
"tgammaf32x":["_Float32x","(_Float32x)"],
"__tgammaf32x":["_Float32x","(_Float32x)"],
"lgammaf32x_r":["_Float32x","(_Float32x, int *)"],
"__lgammaf32x_r":["_Float32x","(_Float32x, int *)"],
"rintf32x":["_Float32x","(_Float32x)"],
"__rintf32x":["_Float32x","(_Float32x)"],
"nextafterf32x":["_Float32x","(_Float32x, _Float32x)"],
"__nextafterf32x":["_Float32x","(_Float32x, _Float32x)"],
"nextdownf32x":["_Float32x","(_Float32x)"],
"__nextdownf32x":["_Float32x","(_Float32x)"],
"nextupf32x":["_Float32x","(_Float32x)"],
"__nextupf32x":["_Float32x","(_Float32x)"],
"remainderf32x":["_Float32x","(_Float32x, _Float32x)"],
"__remainderf32x":["_Float32x","(_Float32x, _Float32x)"],
"scalbnf32x":["_Float32x","(_Float32x, int)"],
"__scalbnf32x":["_Float32x","(_Float32x, int)"],
"ilogbf32x":["int","(_Float32x)"],
"__ilogbf32x":["int","(_Float32x)"],
"llogbf32x":["long","(_Float32x)"],
"__llogbf32x":["long","(_Float32x)"],
"scalblnf32x":["_Float32x","(_Float32x, long)"],
"__scalblnf32x":["_Float32x","(_Float32x, long)"],
"nearbyintf32x":["_Float32x","(_Float32x)"],
"__nearbyintf32x":["_Float32x","(_Float32x)"],
"roundf32x":["_Float32x","(_Float32x)"],
"__roundf32x":["_Float32x","(_Float32x)"],
"truncf32x":["_Float32x","(_Float32x)"],
"__truncf32x":["_Float32x","(_Float32x)"],
"remquof32x":["_Float32x","(_Float32x, _Float32x, int *)"],
"__remquof32x":["_Float32x","(_Float32x, _Float32x, int *)"],
"lrintf32x":["long","(_Float32x)"],
"__lrintf32x":["long","(_Float32x)"],
"llrintf32x":["long long","(_Float32x)"],
"__llrintf32x":["long long","(_Float32x)"],
"lroundf32x":["long","(_Float32x)"],
"__lroundf32x":["long","(_Float32x)"],
"llroundf32x":["long long","(_Float32x)"],
"__llroundf32x":["long long","(_Float32x)"],
"fdimf32x":["_Float32x","(_Float32x, _Float32x)"],
"__fdimf32x":["_Float32x","(_Float32x, _Float32x)"],
"fmaxf32x":["_Float32x","(_Float32x, _Float32x)"],
"__fmaxf32x":["_Float32x","(_Float32x, _Float32x)"],
"fminf32x":["_Float32x","(_Float32x, _Float32x)"],
"__fminf32x":["_Float32x","(_Float32x, _Float32x)"],
"fmaf32x":["_Float32x","(_Float32x, _Float32x, _Float32x)"],
"__fmaf32x":["_Float32x","(_Float32x, _Float32x, _Float32x)"],
"roundevenf32x":["_Float32x","(_Float32x)"],
"__roundevenf32x":["_Float32x","(_Float32x)"],
"fromfpf32x":["__intmax_t","(_Float32x, int, unsigned int)"],
"__fromfpf32x":["__intmax_t","(_Float32x, int, unsigned int)"],
"ufromfpf32x":["__uintmax_t","(_Float32x, int, unsigned int)"],
"__ufromfpf32x":["__uintmax_t","(_Float32x, int, unsigned int)"],
"fromfpxf32x":["__intmax_t","(_Float32x, int, unsigned int)"],
"__fromfpxf32x":["__intmax_t","(_Float32x, int, unsigned int)"],
"ufromfpxf32x":["__uintmax_t","(_Float32x, int, unsigned int)"],
"__ufromfpxf32x":["__uintmax_t","(_Float32x, int, unsigned int)"],
"canonicalizef32x":["int","(_Float32x *, const _Float32x *)"],
"fmaxmagf32x":["_Float32x","(_Float32x, _Float32x)"],
"__fmaxmagf32x":["_Float32x","(_Float32x, _Float32x)"],
"fminmagf32x":["_Float32x","(_Float32x, _Float32x)"],
"__fminmagf32x":["_Float32x","(_Float32x, _Float32x)"],
"fmaximumf32x":["_Float32x","(_Float32x, _Float32x)"],
"__fmaximumf32x":["_Float32x","(_Float32x, _Float32x)"],
"fminimumf32x":["_Float32x","(_Float32x, _Float32x)"],
"__fminimumf32x":["_Float32x","(_Float32x, _Float32x)"],
"fmaximum_numf32x":["_Float32x","(_Float32x, _Float32x)"],
"__fmaximum_numf32x":["_Float32x","(_Float32x, _Float32x)"],
"fminimum_numf32x":["_Float32x","(_Float32x, _Float32x)"],
"__fminimum_numf32x":["_Float32x","(_Float32x, _Float32x)"],
"fmaximum_magf32x":["_Float32x","(_Float32x, _Float32x)"],
"__fmaximum_magf32x":["_Float32x","(_Float32x, _Float32x)"],
"fminimum_magf32x":["_Float32x","(_Float32x, _Float32x)"],
"__fminimum_magf32x":["_Float32x","(_Float32x, _Float32x)"],
"fmaximum_mag_numf32x":["_Float32x","(_Float32x, _Float32x)"],
"__fmaximum_mag_numf32x":["_Float32x","(_Float32x, _Float32x)"],
"fminimum_mag_numf32x":["_Float32x","(_Float32x, _Float32x)"],
"__fminimum_mag_numf32x":["_Float32x","(_Float32x, _Float32x)"],
"totalorderf32x":["int","(const _Float32x *, const _Float32x *)"],
"totalordermagf32x":["int","(const _Float32x *, const _Float32x *)"],
"getpayloadf32x":["_Float32x","(const _Float32x *)"],
"__getpayloadf32x":["_Float32x","(const _Float32x *)"],
"setpayloadf32x":["int","(_Float32x *, _Float32x)"],
"setpayloadsigf32x":["int","(_Float32x *, _Float32x)"],
"acosf64x":["_Float64x","(_Float64x)"],
"__acosf64x":["_Float64x","(_Float64x)"],
"asinf64x":["_Float64x","(_Float64x)"],
"__asinf64x":["_Float64x","(_Float64x)"],
"atanf64x":["_Float64x","(_Float64x)"],
"__atanf64x":["_Float64x","(_Float64x)"],
"atan2f64x":["_Float64x","(_Float64x, _Float64x)"],
"__atan2f64x":["_Float64x","(_Float64x, _Float64x)"],
"cosf64x":["_Float64x","(_Float64x)"],
"__cosf64x":["_Float64x","(_Float64x)"],
"sinf64x":["_Float64x","(_Float64x)"],
"__sinf64x":["_Float64x","(_Float64x)"],
"tanf64x":["_Float64x","(_Float64x)"],
"__tanf64x":["_Float64x","(_Float64x)"],
"coshf64x":["_Float64x","(_Float64x)"],
"__coshf64x":["_Float64x","(_Float64x)"],
"sinhf64x":["_Float64x","(_Float64x)"],
"__sinhf64x":["_Float64x","(_Float64x)"],
"tanhf64x":["_Float64x","(_Float64x)"],
"__tanhf64x":["_Float64x","(_Float64x)"],
"sincosf64x":["void","(_Float64x, _Float64x *, _Float64x *)"],
"__sincosf64x":["void","(_Float64x, _Float64x *, _Float64x *)"],
"acoshf64x":["_Float64x","(_Float64x)"],
"__acoshf64x":["_Float64x","(_Float64x)"],
"asinhf64x":["_Float64x","(_Float64x)"],
"__asinhf64x":["_Float64x","(_Float64x)"],
"atanhf64x":["_Float64x","(_Float64x)"],
"__atanhf64x":["_Float64x","(_Float64x)"],
"expf64x":["_Float64x","(_Float64x)"],
"__expf64x":["_Float64x","(_Float64x)"],
"frexpf64x":["_Float64x","(_Float64x, int *)"],
"__frexpf64x":["_Float64x","(_Float64x, int *)"],
"ldexpf64x":["_Float64x","(_Float64x, int)"],
"__ldexpf64x":["_Float64x","(_Float64x, int)"],
"logf64x":["_Float64x","(_Float64x)"],
"__logf64x":["_Float64x","(_Float64x)"],
"log10f64x":["_Float64x","(_Float64x)"],
"__log10f64x":["_Float64x","(_Float64x)"],
"modff64x":["_Float64x","(_Float64x, _Float64x *)"],
"__modff64x":["_Float64x","(_Float64x, _Float64x *)"],
"exp10f64x":["_Float64x","(_Float64x)"],
"__exp10f64x":["_Float64x","(_Float64x)"],
"expm1f64x":["_Float64x","(_Float64x)"],
"__expm1f64x":["_Float64x","(_Float64x)"],
"log1pf64x":["_Float64x","(_Float64x)"],
"__log1pf64x":["_Float64x","(_Float64x)"],
"logbf64x":["_Float64x","(_Float64x)"],
"__logbf64x":["_Float64x","(_Float64x)"],
"exp2f64x":["_Float64x","(_Float64x)"],
"__exp2f64x":["_Float64x","(_Float64x)"],
"log2f64x":["_Float64x","(_Float64x)"],
"__log2f64x":["_Float64x","(_Float64x)"],
"powf64x":["_Float64x","(_Float64x, _Float64x)"],
"__powf64x":["_Float64x","(_Float64x, _Float64x)"],
"sqrtf64x":["_Float64x","(_Float64x)"],
"__sqrtf64x":["_Float64x","(_Float64x)"],
"hypotf64x":["_Float64x","(_Float64x, _Float64x)"],
"__hypotf64x":["_Float64x","(_Float64x, _Float64x)"],
"cbrtf64x":["_Float64x","(_Float64x)"],
"__cbrtf64x":["_Float64x","(_Float64x)"],
"ceilf64x":["_Float64x","(_Float64x)"],
"__ceilf64x":["_Float64x","(_Float64x)"],
"fabsf64x":["_Float64x","(_Float64x)"],
"__fabsf64x":["_Float64x","(_Float64x)"],
"floorf64x":["_Float64x","(_Float64x)"],
"__floorf64x":["_Float64x","(_Float64x)"],
"fmodf64x":["_Float64x","(_Float64x, _Float64x)"],
"__fmodf64x":["_Float64x","(_Float64x, _Float64x)"],
"copysignf64x":["_Float64x","(_Float64x, _Float64x)"],
"__copysignf64x":["_Float64x","(_Float64x, _Float64x)"],
"nanf64x":["_Float64x","(const char *)"],
"__nanf64x":["_Float64x","(const char *)"],
"j0f64x":["_Float64x","(_Float64x)"],
"__j0f64x":["_Float64x","(_Float64x)"],
"j1f64x":["_Float64x","(_Float64x)"],
"__j1f64x":["_Float64x","(_Float64x)"],
"jnf64x":["_Float64x","(int, _Float64x)"],
"__jnf64x":["_Float64x","(int, _Float64x)"],
"y0f64x":["_Float64x","(_Float64x)"],
"__y0f64x":["_Float64x","(_Float64x)"],
"y1f64x":["_Float64x","(_Float64x)"],
"__y1f64x":["_Float64x","(_Float64x)"],
"ynf64x":["_Float64x","(int, _Float64x)"],
"__ynf64x":["_Float64x","(int, _Float64x)"],
"erff64x":["_Float64x","(_Float64x)"],
"__erff64x":["_Float64x","(_Float64x)"],
"erfcf64x":["_Float64x","(_Float64x)"],
"__erfcf64x":["_Float64x","(_Float64x)"],
"lgammaf64x":["_Float64x","(_Float64x)"],
"__lgammaf64x":["_Float64x","(_Float64x)"],
"tgammaf64x":["_Float64x","(_Float64x)"],
"__tgammaf64x":["_Float64x","(_Float64x)"],
"lgammaf64x_r":["_Float64x","(_Float64x, int *)"],
"__lgammaf64x_r":["_Float64x","(_Float64x, int *)"],
"rintf64x":["_Float64x","(_Float64x)"],
"__rintf64x":["_Float64x","(_Float64x)"],
"nextafterf64x":["_Float64x","(_Float64x, _Float64x)"],
"__nextafterf64x":["_Float64x","(_Float64x, _Float64x)"],
"nextdownf64x":["_Float64x","(_Float64x)"],
"__nextdownf64x":["_Float64x","(_Float64x)"],
"nextupf64x":["_Float64x","(_Float64x)"],
"__nextupf64x":["_Float64x","(_Float64x)"],
"remainderf64x":["_Float64x","(_Float64x, _Float64x)"],
"__remainderf64x":["_Float64x","(_Float64x, _Float64x)"],
"scalbnf64x":["_Float64x","(_Float64x, int)"],
"__scalbnf64x":["_Float64x","(_Float64x, int)"],
"ilogbf64x":["int","(_Float64x)"],
"__ilogbf64x":["int","(_Float64x)"],
"llogbf64x":["long","(_Float64x)"],
"__llogbf64x":["long","(_Float64x)"],
"scalblnf64x":["_Float64x","(_Float64x, long)"],
"__scalblnf64x":["_Float64x","(_Float64x, long)"],
"nearbyintf64x":["_Float64x","(_Float64x)"],
"__nearbyintf64x":["_Float64x","(_Float64x)"],
"roundf64x":["_Float64x","(_Float64x)"],
"__roundf64x":["_Float64x","(_Float64x)"],
"truncf64x":["_Float64x","(_Float64x)"],
"__truncf64x":["_Float64x","(_Float64x)"],
"remquof64x":["_Float64x","(_Float64x, _Float64x, int *)"],
"__remquof64x":["_Float64x","(_Float64x, _Float64x, int *)"],
"lrintf64x":["long","(_Float64x)"],
"__lrintf64x":["long","(_Float64x)"],
"llrintf64x":["long long","(_Float64x)"],
"__llrintf64x":["long long","(_Float64x)"],
"lroundf64x":["long","(_Float64x)"],
"__lroundf64x":["long","(_Float64x)"],
"llroundf64x":["long long","(_Float64x)"],
"__llroundf64x":["long long","(_Float64x)"],
"fdimf64x":["_Float64x","(_Float64x, _Float64x)"],
"__fdimf64x":["_Float64x","(_Float64x, _Float64x)"],
"fmaxf64x":["_Float64x","(_Float64x, _Float64x)"],
"__fmaxf64x":["_Float64x","(_Float64x, _Float64x)"],
"fminf64x":["_Float64x","(_Float64x, _Float64x)"],
"__fminf64x":["_Float64x","(_Float64x, _Float64x)"],
"fmaf64x":["_Float64x","(_Float64x, _Float64x, _Float64x)"],
"__fmaf64x":["_Float64x","(_Float64x, _Float64x, _Float64x)"],
"roundevenf64x":["_Float64x","(_Float64x)"],
"__roundevenf64x":["_Float64x","(_Float64x)"],
"fromfpf64x":["__intmax_t","(_Float64x, int, unsigned int)"],
"__fromfpf64x":["__intmax_t","(_Float64x, int, unsigned int)"],
"ufromfpf64x":["__uintmax_t","(_Float64x, int, unsigned int)"],
"__ufromfpf64x":["__uintmax_t","(_Float64x, int, unsigned int)"],
"fromfpxf64x":["__intmax_t","(_Float64x, int, unsigned int)"],
"__fromfpxf64x":["__intmax_t","(_Float64x, int, unsigned int)"],
"ufromfpxf64x":["__uintmax_t","(_Float64x, int, unsigned int)"],
"__ufromfpxf64x":["__uintmax_t","(_Float64x, int, unsigned int)"],
"canonicalizef64x":["int","(_Float64x *, const _Float64x *)"],
"fmaxmagf64x":["_Float64x","(_Float64x, _Float64x)"],
"__fmaxmagf64x":["_Float64x","(_Float64x, _Float64x)"],
"fminmagf64x":["_Float64x","(_Float64x, _Float64x)"],
"__fminmagf64x":["_Float64x","(_Float64x, _Float64x)"],
"fmaximumf64x":["_Float64x","(_Float64x, _Float64x)"],
"__fmaximumf64x":["_Float64x","(_Float64x, _Float64x)"],
"fminimumf64x":["_Float64x","(_Float64x, _Float64x)"],
"__fminimumf64x":["_Float64x","(_Float64x, _Float64x)"],
"fmaximum_numf64x":["_Float64x","(_Float64x, _Float64x)"],
"__fmaximum_numf64x":["_Float64x","(_Float64x, _Float64x)"],
"fminimum_numf64x":["_Float64x","(_Float64x, _Float64x)"],
"__fminimum_numf64x":["_Float64x","(_Float64x, _Float64x)"],
"fmaximum_magf64x":["_Float64x","(_Float64x, _Float64x)"],
"__fmaximum_magf64x":["_Float64x","(_Float64x, _Float64x)"],
"fminimum_magf64x":["_Float64x","(_Float64x, _Float64x)"],
"__fminimum_magf64x":["_Float64x","(_Float64x, _Float64x)"],
"fmaximum_mag_numf64x":["_Float64x","(_Float64x, _Float64x)"],
"__fmaximum_mag_numf64x":["_Float64x","(_Float64x, _Float64x)"],
"fminimum_mag_numf64x":["_Float64x","(_Float64x, _Float64x)"],
"__fminimum_mag_numf64x":["_Float64x","(_Float64x, _Float64x)"],
"totalorderf64x":["int","(const _Float64x *, const _Float64x *)"],
"totalordermagf64x":["int","(const _Float64x *, const _Float64x *)"],
"getpayloadf64x":["_Float64x","(const _Float64x *)"],
"__getpayloadf64x":["_Float64x","(const _Float64x *)"],
"setpayloadf64x":["int","(_Float64x *, _Float64x)"],
"setpayloadsigf64x":["int","(_Float64x *, _Float64x)"],
"fadd":["float","(double, double)"],
"fdiv":["float","(double, double)"],
"ffma":["float","(double, double, double)"],
"fmul":["float","(double, double)"],
"fsqrt":["float","(double)"],
"fsub":["float","(double, double)"],
"faddl":["float","(long double, long double)"],
"fdivl":["float","(long double, long double)"],
"ffmal":["float","(long double, long double, long double)"],
"fmull":["float","(long double, long double)"],
"fsqrtl":["float","(long double)"],
"fsubl":["float","(long double, long double)"],
"daddl":["double","(long double, long double)"],
"ddivl":["double","(long double, long double)"],
"dfmal":["double","(long double, long double, long double)"],
"dmull":["double","(long double, long double)"],
"dsqrtl":["double","(long double)"],
"dsubl":["double","(long double, long double)"],
"f32addf32x":["_Float32","(_Float32x, _Float32x)"],
"f32divf32x":["_Float32","(_Float32x, _Float32x)"],
"f32fmaf32x":["_Float32","(_Float32x, _Float32x, _Float32x)"],
"f32mulf32x":["_Float32","(_Float32x, _Float32x)"],
"f32sqrtf32x":["_Float32","(_Float32x)"],
"f32subf32x":["_Float32","(_Float32x, _Float32x)"],
"f32addf64":["_Float32","(_Float64, _Float64)"],
"f32divf64":["_Float32","(_Float64, _Float64)"],
"f32fmaf64":["_Float32","(_Float64, _Float64, _Float64)"],
"f32mulf64":["_Float32","(_Float64, _Float64)"],
"f32sqrtf64":["_Float32","(_Float64)"],
"f32subf64":["_Float32","(_Float64, _Float64)"],
"f32addf64x":["_Float32","(_Float64x, _Float64x)"],
"f32divf64x":["_Float32","(_Float64x, _Float64x)"],
"f32fmaf64x":["_Float32","(_Float64x, _Float64x, _Float64x)"],
"f32mulf64x":["_Float32","(_Float64x, _Float64x)"],
"f32sqrtf64x":["_Float32","(_Float64x)"],
"f32subf64x":["_Float32","(_Float64x, _Float64x)"],
"f32xaddf64":["_Float32x","(_Float64, _Float64)"],
"f32xdivf64":["_Float32x","(_Float64, _Float64)"],
"f32xfmaf64":["_Float32x","(_Float64, _Float64, _Float64)"],
"f32xmulf64":["_Float32x","(_Float64, _Float64)"],
"f32xsqrtf64":["_Float32x","(_Float64)"],
"f32xsubf64":["_Float32x","(_Float64, _Float64)"],
"f32xaddf64x":["_Float32x","(_Float64x, _Float64x)"],
"f32xdivf64x":["_Float32x","(_Float64x, _Float64x)"],
"f32xfmaf64x":["_Float32x","(_Float64x, _Float64x, _Float64x)"],
"f32xmulf64x":["_Float32x","(_Float64x, _Float64x)"],
"f32xsqrtf64x":["_Float32x","(_Float64x)"],
"f32xsubf64x":["_Float32x","(_Float64x, _Float64x)"],
"f64addf64x":["_Float64","(_Float64x, _Float64x)"],
"f64divf64x":["_Float64","(_Float64x, _Float64x)"],
"f64fmaf64x":["_Float64","(_Float64x, _Float64x, _Float64x)"],
"f64mulf64x":["_Float64","(_Float64x, _Float64x)"],
"f64sqrtf64x":["_Float64","(_Float64x)"],
"f64subf64x":["_Float64","(_Float64x, _Float64x)"],
"__iscanonicall":["int","(long double)"],
"iscanonical":[("int","(float)"),("int","(double)"),("int","(long double)")],
"issignaling":[("int","(float)"),("int","(double)"),("int","(long double)")],
"__ctype_get_mb_cur_max":["size_t","()"],
"atof":["double","(const char *)"],
"atoi":["int","(const char *)"],
"atol":["long","(const char *)"],
"atoll":["long long","(const char *)"],
"strtod":["double","(const char *__restrict, char **__restrict)"],
"strtof":["float","(const char *__restrict, char **__restrict)"],
"strtold":["long double","(const char *__restrict, char **__restrict)"],
"strtof32":["_Float32","(const char *__restrict, char **__restrict)"],
"strtof64":["_Float64","(const char *__restrict, char **__restrict)"],
"strtof32x":["_Float32x","(const char *__restrict, char **__restrict)"],
"strtof64x":["_Float64x","(const char *__restrict, char **__restrict)"],
"strtol":["long","(const char *__restrict, char **__restrict, int)"],
"strtoul":["unsigned long","(const char *__restrict, char **__restrict, int)"],
"strtoq":["long long","(const char *__restrict, char **__restrict, int)"],
"strtouq":["unsigned long long","(const char *__restrict, char **__restrict, int)"],
"strtoll":["long long","(const char *__restrict, char **__restrict, int)"],
"strtoull":["unsigned long long","(const char *__restrict, char **__restrict, int)"],
"strfromd":["int","(char *, size_t, const char *, double)"],
"strfromf":["int","(char *, size_t, const char *, float)"],
"strfroml":["int","(char *, size_t, const char *, long double)"],
"strfromf32":["int","(char *, size_t, const char *, _Float32)"],
"strfromf64":["int","(char *, size_t, const char *, _Float64)"],
"strfromf32x":["int","(char *, size_t, const char *, _Float32x)"],
"strfromf64x":["int","(char *, size_t, const char *, _Float64x)"],
"strtol_l":["long","(const char *__restrict, char **__restrict, int, locale_t)"],
"strtoul_l":["unsigned long","(const char *__restrict, char **__restrict, int, locale_t)"],
"strtoll_l":["long long","(const char *__restrict, char **__restrict, int, locale_t)"],
"strtoull_l":["unsigned long long","(const char *__restrict, char **__restrict, int, locale_t)"],
"strtod_l":["double","(const char *__restrict, char **__restrict, locale_t)"],
"strtof_l":["float","(const char *__restrict, char **__restrict, locale_t)"],
"strtold_l":["long double","(const char *__restrict, char **__restrict, locale_t)"],
"strtof32_l":["_Float32","(const char *__restrict, char **__restrict, locale_t)"],
"strtof64_l":["_Float64","(const char *__restrict, char **__restrict, locale_t)"],
"strtof32x_l":["_Float32x","(const char *__restrict, char **__restrict, locale_t)"],
"strtof64x_l":["_Float64x","(const char *__restrict, char **__restrict, locale_t)"],
"l64a":["char *","(long)"],
"a64l":["long","(const char *)"],
"__bswap_16":["__uint16_t","(__uint16_t)"],
"__bswap_32":["__uint32_t","(__uint32_t)"],
"__bswap_64":["__uint64_t","(__uint64_t)"],
"__uint16_identity":["__uint16_t","(__uint16_t)"],
"__uint32_identity":["__uint32_t","(__uint32_t)"],
"__uint64_identity":["__uint64_t","(__uint64_t)"],
"select":["int","(int, fd_set *__restrict, fd_set *__restrict, fd_set *__restrict, struct timeval *__restrict)"],
"pselect":["int","(int, fd_set *__restrict, fd_set *__restrict, fd_set *__restrict, const struct timespec *__restrict, const __sigset_t *__restrict)"],
"random":["long","()"],
"srandom":["void","(unsigned int)"],
"initstate":["char *","(unsigned int, char *, size_t)"],
"setstate":["char *","(char *)"],
"random_r":["int","(struct random_data *__restrict, int32_t *__restrict)"],
"srandom_r":["int","(unsigned int, struct random_data *)"],
"initstate_r":["int","(unsigned int, char *__restrict, size_t, struct random_data *__restrict)"],
"setstate_r":["int","(char *__restrict, struct random_data *__restrict)"],
"rand":["int","()"],
"srand":["void","(unsigned int)"],
"rand_r":["int","(unsigned int *)"],
"drand48":["double","()"],
"erand48":["double","(unsigned short *)"],
"lrand48":["long","()"],
"nrand48":["long","(unsigned short *)"],
"mrand48":["long","()"],
"jrand48":["long","(unsigned short *)"],
"srand48":["void","(long)"],
"seed48":["unsigned short *","(unsigned short *)"],
"lcong48":["void","(unsigned short *)"],
"drand48_r":["int","(struct drand48_data *__restrict, double *__restrict)"],
"erand48_r":["int","(unsigned short *, struct drand48_data *__restrict, double *__restrict)"],
"lrand48_r":["int","(struct drand48_data *__restrict, long *__restrict)"],
"nrand48_r":["int","(unsigned short *, struct drand48_data *__restrict, long *__restrict)"],
"mrand48_r":["int","(struct drand48_data *__restrict, long *__restrict)"],
"jrand48_r":["int","(unsigned short *, struct drand48_data *__restrict, long *__restrict)"],
"srand48_r":["int","(long, struct drand48_data *)"],
"seed48_r":["int","(unsigned short *, struct drand48_data *)"],
"lcong48_r":["int","(unsigned short *, struct drand48_data *)"],
"malloc":["void *","(size_t)"],
"calloc":["void *","(size_t, size_t)"],
"realloc":["void *","(void *, size_t)"],
"free":["void","(void *)"],
"reallocarray":[("void *","(void *, size_t, size_t)"),("void *","(void *, size_t, size_t)")],
"alloca":["void *","(size_t)"],
"valloc":["void *","(size_t)"],
"posix_memalign":["int","(void **, size_t, size_t)"],
"aligned_alloc":["void *","(size_t, size_t)"],
"abort":["void","()"],
"atexit":["int","(void (*)())"],
"at_quick_exit":["int","(void (*)())"],
"on_exit":["int","(void (*)(int, void *), void *)"],
"exit":["void","(int)"],
"quick_exit":["void","(int)"],
"_Exit":["void","(int)"],
"getenv":["char *","(const char *)"],
"secure_getenv":["char *","(const char *)"],
"putenv":["int","(char *)"],
"setenv":["int","(const char *, const char *, int)"],
"unsetenv":["int","(const char *)"],
"clearenv":["int","()"],
"mktemp":["char *","(char *)"],
"mkstemp":["int","(char *)"],
"mkstemp64":["int","(char *)"],
"mkstemps":["int","(char *, int)"],
"mkstemps64":["int","(char *, int)"],
"mkdtemp":["char *","(char *)"],
"mkostemp":["int","(char *, int)"],
"mkostemp64":["int","(char *, int)"],
"mkostemps":["int","(char *, int, int)"],
"mkostemps64":["int","(char *, int, int)"],
"system":["int","(const char *)"],
"canonicalize_file_name":["char *","(const char *)"],
"realpath":["char *","(const char *__restrict, char *__restrict)"],
"bsearch":["void *","(const void *, const void *, size_t, size_t, __compar_fn_t)"],
"qsort":["void","(void *, size_t, size_t, __compar_fn_t)"],
"qsort_r":["void","(void *, size_t, size_t, __compar_d_fn_t, void *)"],
"abs":[("int","(int)"),("long","(long)"),("long long","(long long)"),("double","(double)"),("float","(float)"),("long double","(long double)"),("__int128","(__int128)"),("__float128","(__float128)")],
"labs":["long","(long)"],
"llabs":["long long","(long long)"],
"div":[("div_t","(int, int)"),("ldiv_t","(long, long)"),("lldiv_t","(long long, long long)")],
"ldiv":["ldiv_t","(long, long)"],
"lldiv":["lldiv_t","(long long, long long)"],
"ecvt":["char *","(double, int, int *__restrict, int *__restrict)"],
"fcvt":["char *","(double, int, int *__restrict, int *__restrict)"],
"gcvt":["char *","(double, int, char *)"],
"qecvt":["char *","(long double, int, int *__restrict, int *__restrict)"],
"qfcvt":["char *","(long double, int, int *__restrict, int *__restrict)"],
"qgcvt":["char *","(long double, int, char *)"],
"ecvt_r":["int","(double, int, int *__restrict, int *__restrict, char *__restrict, size_t)"],
"fcvt_r":["int","(double, int, int *__restrict, int *__restrict, char *__restrict, size_t)"],
"qecvt_r":["int","(long double, int, int *__restrict, int *__restrict, char *__restrict, size_t)"],
"qfcvt_r":["int","(long double, int, int *__restrict, int *__restrict, char *__restrict, size_t)"],
"mblen":["int","(const char *, size_t)"],
"mbtowc":["int","(wchar_t *__restrict, const char *__restrict, size_t)"],
"wctomb":["int","(char *, wchar_t)"],
"mbstowcs":["size_t","(wchar_t *__restrict, const char *__restrict, size_t)"],
"wcstombs":["size_t","(char *__restrict, const wchar_t *__restrict, size_t)"],
"rpmatch":["int","(const char *)"],
"getsubopt":["int","(char **__restrict, char *const *__restrict, char **__restrict)"],
"posix_openpt":["int","(int)"],
"grantpt":["int","(int)"],
"unlockpt":["int","(int)"],
"ptsname":["char *","(int)"],
"ptsname_r":["int","(int, char *, size_t)"],
"getpt":["int","()"],
"getloadavg":["int","(double *, int)"],
"fpclassify":[("int","(float)"),("int","(double)"),("int","(long double)")],
"isfinite":[("bool","(float)"),("bool","(double)"),("bool","(long double)")],
"isinf":[("bool","(float)"),("bool","(double)"),("bool","(long double)")],
"isnan":[("bool","(float)"),("bool","(double)"),("bool","(long double)")],
"isnormal":[("bool","(float)"),("bool","(double)"),("bool","(long double)")],
"signbit":[("bool","(float)"),("bool","(double)"),("bool","(long double)")],
"isgreater":[("bool","(float, float)"),("bool","(double, double)"),("bool","(long double, long double)")],
"isgreaterequal":[("bool","(float, float)"),("bool","(double, double)"),("bool","(long double, long double)")],
"isless":[("bool","(float, float)"),("bool","(double, double)"),("bool","(long double, long double)")],
"islessequal":[("bool","(float, float)"),("bool","(double, double)"),("bool","(long double, long double)")],
"islessgreater":[("bool","(float, float)"),("bool","(double, double)"),("bool","(long double, long double)")],
"isunordered":[("bool","(float, float)"),("bool","(double, double)"),("bool","(long double, long double)")],
"setjmp":["int","(struct __jmp_buf_tag *)"],
"__sigsetjmp":[("int","(struct __jmp_buf_tag *, int)"),("int","(struct __jmp_buf_tag *, int)")],
"_setjmp":["int","(struct __jmp_buf_tag *)"],
"longjmp":["void","(struct __jmp_buf_tag *, int)"],
"_longjmp":["void","(struct __jmp_buf_tag *, int)"],
"siglongjmp":["void","(struct __jmp_buf_tag *, int)"],
"__sysv_signal":["__sighandler_t","(int, __sighandler_t)"],
"sysv_signal":["__sighandler_t","(int, __sighandler_t)"],
"signal":["__sighandler_t","(int, __sighandler_t)"],
"kill":["int","(__pid_t, int)"],
"killpg":["int","(__pid_t, int)"],
"raise":["int","(int)"],
"ssignal":["__sighandler_t","(int, __sighandler_t)"],
"gsignal":["int","(int)"],
"psignal":["void","(int, const char *)"],
"psiginfo":["void","(const siginfo_t *, const char *)"],
"sigpause":["int","(int)"],
"sigblock":["int","(int)"],
"sigsetmask":["int","(int)"],
"siggetmask":["int","()"],
"sigemptyset":["int","(sigset_t *)"],
"sigfillset":["int","(sigset_t *)"],
"sigaddset":["int","(sigset_t *, int)"],
"sigdelset":["int","(sigset_t *, int)"],
"sigismember":["int","(const sigset_t *, int)"],
"sigisemptyset":["int","(const sigset_t *)"],
"sigandset":["int","(sigset_t *, const sigset_t *, const sigset_t *)"],
"sigorset":["int","(sigset_t *, const sigset_t *, const sigset_t *)"],
"sigprocmask":["int","(int, const sigset_t *__restrict, sigset_t *__restrict)"],
"sigsuspend":["int","(const sigset_t *)"],
"sigaction":["int","(int, const struct sigaction *__restrict, struct sigaction *__restrict)"],
"sigpending":["int","(sigset_t *)"],
"sigwait":["int","(const sigset_t *__restrict, int *__restrict)"],
"sigwaitinfo":["int","(const sigset_t *__restrict, siginfo_t *__restrict)"],
"sigtimedwait":["int","(const sigset_t *__restrict, siginfo_t *__restrict, const struct timespec *__restrict)"],
"sigqueue":["int","(__pid_t, int, const union sigval)"],
"sigreturn":["int","(struct sigcontext *)"],
"siginterrupt":["int","(int, int)"],
"access":["int","(const char *, int)"],
"euidaccess":["int","(const char *, int)"],
"eaccess":["int","(const char *, int)"],
"execveat":["int","(int, const char *, char *const *, char *const *, int)"],
"faccessat":["int","(int, const char *, int, int)"],
"lseek":["__off_t","(int, __off_t, int)"],
"lseek64":["__off64_t","(int, __off64_t, int)"],
"close":["int","(int)"],
"closefrom":["void","(int)"],
"read":["ssize_t","(int, void *, size_t)"],
"write":["ssize_t","(int, const void *, size_t)"],
"pread":["ssize_t","(int, void *, size_t, __off_t)"],
"pwrite":["ssize_t","(int, const void *, size_t, __off_t)"],
"pread64":["ssize_t","(int, void *, size_t, __off64_t)"],
"pwrite64":["ssize_t","(int, const void *, size_t, __off64_t)"],
"pipe":["int","(int *)"],
"pipe2":["int","(int *, int)"],
"alarm":["unsigned int","(unsigned int)"],
"sleep":["unsigned int","(unsigned int)"],
"ualarm":["__useconds_t","(__useconds_t, __useconds_t)"],
"usleep":["int","(__useconds_t)"],
"pause":["int","()"],
"chown":["int","(const char *, __uid_t, __gid_t)"],
"fchown":["int","(int, __uid_t, __gid_t)"],
"lchown":["int","(const char *, __uid_t, __gid_t)"],
"fchownat":["int","(int, const char *, __uid_t, __gid_t, int)"],
"chdir":["int","(const char *)"],
"fchdir":["int","(int)"],
"getcwd":["char *","(char *, size_t)"],
"get_current_dir_name":["char *","()"],
"getwd":["char *","(char *)"],
"dup":["int","(int)"],
"dup2":["int","(int, int)"],
"dup3":["int","(int, int, int)"],
"execve":["int","(const char *, char *const *, char *const *)"],
"fexecve":["int","(int, char *const *, char *const *)"],
"execv":["int","(const char *, char *const *)"],
"execle":["int","(const char *, const char *, ...)"],
"execl":["int","(const char *, const char *, ...)"],
"execvp":["int","(const char *, char *const *)"],
"execlp":["int","(const char *, const char *, ...)"],
"execvpe":["int","(const char *, char *const *, char *const *)"],
"nice":["int","(int)"],
"_exit":["void","(int)"],
"pathconf":["long","(const char *, int)"],
"fpathconf":["long","(int, int)"],
"sysconf":["long","(int)"],
"confstr":["size_t","(int, char *, size_t)"],
"getpid":["__pid_t","()"],
"getppid":["__pid_t","()"],
"getpgrp":["__pid_t","()"],
"__getpgid":["__pid_t","(__pid_t)"],
"getpgid":["__pid_t","(__pid_t)"],
"setpgid":["int","(__pid_t, __pid_t)"],
"setpgrp":["int","()"],
"setsid":["__pid_t","()"],
"getsid":["__pid_t","(__pid_t)"],
"getuid":["__uid_t","()"],
"geteuid":["__uid_t","()"],
"getgid":["__gid_t","()"],
"getegid":["__gid_t","()"],
"getgroups":["int","(int, __gid_t *)"],
"group_member":["int","(__gid_t)"],
"setuid":["int","(__uid_t)"],
"setreuid":["int","(__uid_t, __uid_t)"],
"seteuid":["int","(__uid_t)"],
"setgid":["int","(__gid_t)"],
"setregid":["int","(__gid_t, __gid_t)"],
"setegid":["int","(__gid_t)"],
"getresuid":["int","(__uid_t *, __uid_t *, __uid_t *)"],
"getresgid":["int","(__gid_t *, __gid_t *, __gid_t *)"],
"setresuid":["int","(__uid_t, __uid_t, __uid_t)"],
"setresgid":["int","(__gid_t, __gid_t, __gid_t)"],
"fork":["__pid_t","()"],
"vfork":["__pid_t","()"],
"_Fork":["__pid_t","()"],
"ttyname":["char *","(int)"],
"ttyname_r":["int","(int, char *, size_t)"],
"isatty":["int","(int)"],
"ttyslot":["int","()"],
"link":["int","(const char *, const char *)"],
"linkat":["int","(int, const char *, int, const char *, int)"],
"symlink":["int","(const char *, const char *)"],
"readlink":["ssize_t","(const char *__restrict, char *__restrict, size_t)"],
"symlinkat":["int","(const char *, int, const char *)"],
"readlinkat":["ssize_t","(int, const char *__restrict, char *__restrict, size_t)"],
"unlink":["int","(const char *)"],
"unlinkat":["int","(int, const char *, int)"],
"rmdir":["int","(const char *)"],
"tcgetpgrp":["__pid_t","(int)"],
"tcsetpgrp":["int","(int, __pid_t)"],
"getlogin":["char *","()"],
"getlogin_r":["int","(char *, size_t)"],
"setlogin":["int","(const char *)"],
"getopt":["int","(int, char *const *, const char *)"],
"gethostname":["int","(char *, size_t)"],
"sethostname":["int","(const char *, size_t)"],
"sethostid":["int","(long)"],
"getdomainname":["int","(char *, size_t)"],
"setdomainname":["int","(const char *, size_t)"],
"vhangup":["int","()"],
"revoke":["int","(const char *)"],
"profil":["int","(unsigned short *, size_t, size_t, unsigned int)"],
"acct":["int","(const char *)"],
"getusershell":["char *","()"],
"endusershell":["void","()"],
"setusershell":["void","()"],
"daemon":["int","(int, int)"],
"chroot":["int","(const char *)"],
"getpass":["char *","(const char *)"],
"fsync":["int","(int)"],
"syncfs":["int","(int)"],
"gethostid":["long","()"],
"sync":["void","()"],
"getpagesize":["int","()"],
"getdtablesize":["int","()"],
"truncate":["int","(const char *, __off_t)"],
"truncate64":["int","(const char *, __off64_t)"],
"ftruncate":["int","(int, __off_t)"],
"ftruncate64":["int","(int, __off64_t)"],
"brk":["int","(void *)"],
"sbrk":["void *","(intptr_t)"],
"syscall":["long","(long, ...)"],
"lockf":["int","(int, int, __off_t)"],
"lockf64":["int","(int, int, __off64_t)"],
"copy_file_range":["ssize_t","(int, __off64_t *, int, __off64_t *, size_t, unsigned int)"],
"fdatasync":["int","(int)"],
"crypt":["char *","(const char *, const char *)"],
"swab":["void","(const void *__restrict, void *__restrict, ssize_t)"],
"getentropy":["int","(void *, size_t)"],
"close_range":["int","(unsigned int, unsigned int, int)"],
"gettid":["__pid_t","()"],
"sigaltstack":["int","(const stack_t *__restrict, stack_t *__restrict)"],
"sigstack":["int","(struct sigstack *, struct sigstack *)"],
"sighold":["int","(int)"],
"sigrelse":["int","(int)"],
"sigignore":["int","(int)"],
"sigset":["__sighandler_t","(int, __sighandler_t)"],
"pthread_sigmask":["int","(int, const __sigset_t *__restrict, __sigset_t *__restrict)"],
"pthread_kill":["int","(pthread_t, int)"],
"pthread_sigqueue":["int","(pthread_t, int, const union sigval)"],
"__libc_current_sigrtmin":["int","()"],
"__libc_current_sigrtmax":["int","()"],
"tgkill":["int","(__pid_t, __pid_t, int)"],
"remove":["int","(const char *)"],
"rename":["int","(const char *, const char *)"],
"renameat":["int","(int, const char *, int, const char *)"],
"renameat2":["int","(int, const char *, int, const char *, unsigned int)"],
"fclose":["int","(FILE *)"],
"tmpfile":["FILE *","()"],
"tmpfile64":["FILE *","()"],
"tmpnam":["char *","(char *)"],
"tmpnam_r":["char *","(char *)"],
"tempnam":["char *","(const char *, const char *)"],
"fflush":["int","(FILE *)"],
"fflush_unlocked":["int","(FILE *)"],
"fcloseall":["int","()"],
"fopen":["FILE *","(const char *__restrict, const char *__restrict)"],
"freopen":["FILE *","(const char *__restrict, const char *__restrict, FILE *__restrict)"],
"fopen64":["FILE *","(const char *__restrict, const char *__restrict)"],
"freopen64":["FILE *","(const char *__restrict, const char *__restrict, FILE *__restrict)"],
"fdopen":["FILE *","(int, const char *)"],
"fopencookie":["FILE *","(void *__restrict, const char *__restrict, cookie_io_functions_t)"],
"fmemopen":["FILE *","(void *, size_t, const char *)"],
"open_memstream":["FILE *","(char **, size_t *)"],
"setbuf":["void","(FILE *__restrict, char *__restrict)"],
"setvbuf":["int","(FILE *__restrict, char *__restrict, int, size_t)"],
"setbuffer":["void","(FILE *__restrict, char *__restrict, size_t)"],
"setlinebuf":["void","(FILE *)"],
"fprintf":["int","(FILE *__restrict, const char *__restrict, ...)"],
"printf":["int","(const char *__restrict, ...)"],
"sprintf":["int","(char *__restrict, const char *__restrict, ...)"],
"vfprintf":["int","(FILE *__restrict, const char *__restrict, __va_list_tag *)"],
"vprintf":["int","(const char *__restrict, __va_list_tag *)"],
"vsprintf":["int","(char *__restrict, const char *__restrict, __va_list_tag *)"],
"snprintf":["int","(char *__restrict, size_t, const char *__restrict, ...)"],
"vsnprintf":["int","(char *__restrict, size_t, const char *__restrict, __va_list_tag *)"],
"vasprintf":["int","(char **__restrict, const char *__restrict, __va_list_tag *)"],
"__asprintf":["int","(char **__restrict, const char *__restrict, ...)"],
"asprintf":["int","(char **__restrict, const char *__restrict, ...)"],
"vdprintf":["int","(int, const char *__restrict, __va_list_tag *)"],
"dprintf":["int","(int, const char *__restrict, ...)"],
"fscanf":[("int","(FILE *__restrict, const char *__restrict, ...)"),("int","(FILE *__restrict, const char *__restrict, ...)")],
"scanf":[("int","(const char *__restrict, ...)"),("int","(const char *__restrict, ...)")],
"sscanf":[("int","(const char *__restrict, const char *__restrict, ...)"),("int","(const char *__restrict, const char *__restrict, ...)")],
"vfscanf":[("int","(FILE *__restrict, const char *__restrict, __va_list_tag *)"),("int","(FILE *__restrict, const char *__restrict, __va_list_tag *)")],
"vscanf":[("int","(const char *__restrict, __va_list_tag *)"),("int","(const char *__restrict, __va_list_tag *)")],
"vsscanf":[("int","(const char *__restrict, const char *__restrict, __va_list_tag *)"),("int","(const char *__restrict, const char *__restrict, __va_list_tag *)")],
"fgetc":["int","(FILE *)"],
"getc":["int","(FILE *)"],
"getchar":["int","()"],
"getc_unlocked":["int","(FILE *)"],
"getchar_unlocked":["int","()"],
"fgetc_unlocked":["int","(FILE *)"],
"fputc":["int","(int, FILE *)"],
"putc":["int","(int, FILE *)"],
"putchar":["int","(int)"],
"fputc_unlocked":["int","(int, FILE *)"],
"putc_unlocked":["int","(int, FILE *)"],
"putchar_unlocked":["int","(int)"],
"getw":["int","(FILE *)"],
"putw":["int","(int, FILE *)"],
"fgets":["char *","(char *__restrict, int, FILE *__restrict)"],
"fgets_unlocked":["char *","(char *__restrict, int, FILE *__restrict)"],
"__getdelim":["__ssize_t","(char **__restrict, size_t *__restrict, int, FILE *__restrict)"],
"getdelim":["__ssize_t","(char **__restrict, size_t *__restrict, int, FILE *__restrict)"],
"getline":[("__ssize_t","(char **__restrict, size_t *__restrict, FILE *__restrict)"),("basic_istream<char> &","(basic_istream<char> &, basic_string<char> &, char)"),("basic_istream<wchar_t> &","(basic_istream<wchar_t> &, basic_string<wchar_t> &, wchar_t)")],
"fputs":["int","(const char *__restrict, FILE *__restrict)"],
"puts":["int","(const char *)"],
"ungetc":["int","(int, FILE *)"],
"fread":["size_t","(void *__restrict, size_t, size_t, FILE *__restrict)"],
"fwrite":["size_t","(const void *__restrict, size_t, size_t, FILE *__restrict)"],
"fputs_unlocked":["int","(const char *__restrict, FILE *__restrict)"],
"fread_unlocked":["size_t","(void *__restrict, size_t, size_t, FILE *__restrict)"],
"fwrite_unlocked":["size_t","(const void *__restrict, size_t, size_t, FILE *__restrict)"],
"fseek":["int","(FILE *, long, int)"],
"ftell":["long","(FILE *)"],
"rewind":["void","(FILE *)"],
"fseeko":["int","(FILE *, __off_t, int)"],
"ftello":["__off_t","(FILE *)"],
"fgetpos":["int","(FILE *__restrict, fpos_t *__restrict)"],
"fsetpos":["int","(FILE *, const fpos_t *)"],
"fseeko64":["int","(FILE *, __off64_t, int)"],
"ftello64":["__off64_t","(FILE *)"],
"fgetpos64":["int","(FILE *__restrict, fpos64_t *__restrict)"],
"fsetpos64":["int","(FILE *, const fpos64_t *)"],
"clearerr":["void","(FILE *)"],
"feof":["int","(FILE *)"],
"ferror":["int","(FILE *)"],
"clearerr_unlocked":["void","(FILE *)"],
"feof_unlocked":["int","(FILE *)"],
"ferror_unlocked":["int","(FILE *)"],
"perror":["void","(const char *)"],
"fileno":["int","(FILE *)"],
"fileno_unlocked":["int","(FILE *)"],
"pclose":["int","(FILE *)"],
"popen":["FILE *","(const char *, const char *)"],
"ctermid":["char *","(char *)"],
"cuserid":["char *","(char *)"],
"obstack_printf":["int","(struct obstack *__restrict, const char *__restrict, ...)"],
"obstack_vprintf":["int","(struct obstack *__restrict, const char *__restrict, __va_list_tag *)"],
"flockfile":["void","(FILE *)"],
"ftrylockfile":["int","(FILE *)"],
"funlockfile":["void","(FILE *)"],
"__uflow":["int","(FILE *)"],
"__overflow":["int","(FILE *, int)"],
"memcpy":["void *","(void *__restrict, const void *__restrict, size_t)"],
"memmove":["void *","(void *, const void *, size_t)"],
"memccpy":["void *","(void *__restrict, const void *__restrict, int, size_t)"],
"memset":["void *","(void *, int, size_t)"],
"memcmp":["int","(const void *, const void *, size_t)"],
"__memcmpeq":["int","(const void *, const void *, size_t)"],
"memchr":[("void *","(void *, int, size_t)"),("const void *","(const void *, int, size_t)")],
"rawmemchr":[("void *","(void *, int)"),("const void *","(const void *, int)")],
"memrchr":[("void *","(void *, int, size_t)"),("const void *","(const void *, int, size_t)")],
"strcpy":["char *","(char *__restrict, const char *__restrict)"],
"strncpy":["char *","(char *__restrict, const char *__restrict, size_t)"],
"strcat":["char *","(char *__restrict, const char *__restrict)"],
"strncat":["char *","(char *__restrict, const char *__restrict, size_t)"],
"strcmp":["int","(const char *, const char *)"],
"strncmp":["int","(const char *, const char *, size_t)"],
"strcoll":["int","(const char *, const char *)"],
"strxfrm":["size_t","(char *__restrict, const char *__restrict, size_t)"],
"strcoll_l":["int","(const char *, const char *, locale_t)"],
"strxfrm_l":["size_t","(char *, const char *, size_t, locale_t)"],
"strdup":["char *","(const char *)"],
"strndup":["char *","(const char *, size_t)"],
"strchr":[("char *","(char *, int)"),("const char *","(const char *, int)")],
"strrchr":[("char *","(char *, int)"),("const char *","(const char *, int)")],
"strchrnul":[("char *","(char *, int)"),("const char *","(const char *, int)")],
"strcspn":["size_t","(const char *, const char *)"],
"strspn":["size_t","(const char *, const char *)"],
"strpbrk":[("char *","(char *, const char *)"),("const char *","(const char *, const char *)")],
"strstr":[("char *","(char *, const char *)"),("const char *","(const char *, const char *)")],
"strtok":["char *","(char *__restrict, const char *__restrict)"],
"__strtok_r":["char *","(char *__restrict, const char *__restrict, char **__restrict)"],
"strtok_r":["char *","(char *__restrict, const char *__restrict, char **__restrict)"],
"strcasestr":[("char *","(char *, const char *)"),("const char *","(const char *, const char *)")],
"memmem":["void *","(const void *, size_t, const void *, size_t)"],
"__mempcpy":["void *","(void *__restrict, const void *__restrict, size_t)"],
"mempcpy":["void *","(void *__restrict, const void *__restrict, size_t)"],
"strlen":["size_t","(const char *)"],
"strnlen":["size_t","(const char *, size_t)"],
"strerror":["char *","(int)"],
"strerror_r":["char *","(int, char *, size_t)"],
"strerrordesc_np":["const char *","(int)"],
"strerrorname_np":["const char *","(int)"],
"strerror_l":["char *","(int, locale_t)"],
"bcmp":["int","(const void *, const void *, size_t)"],
"bcopy":["void","(const void *, void *, size_t)"],
"bzero":["void","(void *, size_t)"],
"index":["char *","(const char *, int)"],
"rindex":["char *","(const char *, int)"],
"ffs":["int","(int)"],
"ffsl":["int","(long)"],
"ffsll":["int","(long long)"],
"strcasecmp":["int","(const char *, const char *)"],
"strncasecmp":["int","(const char *, const char *, size_t)"],
"strcasecmp_l":["int","(const char *, const char *, locale_t)"],
"strncasecmp_l":["int","(const char *, const char *, size_t, locale_t)"],
"explicit_bzero":["void","(void *, size_t)"],
"strsep":["char *","(char **__restrict, const char *__restrict)"],
"strsignal":["char *","(int)"],
"sigabbrev_np":["const char *","(int)"],
"sigdescr_np":["const char *","(int)"],
"__stpcpy":["char *","(char *__restrict, const char *__restrict)"],
"stpcpy":["char *","(char *__restrict, const char *__restrict)"],
"__stpncpy":["char *","(char *__restrict, const char *__restrict, size_t)"],
"stpncpy":["char *","(char *__restrict, const char *__restrict, size_t)"],
"strverscmp":["int","(const char *, const char *)"],
"strfry":["char *","(char *)"],
"memfrob":["void *","(void *, size_t)"],
"basename":[("char *","(char *)"),("const char *","(const char *)")],
"clock_adjtime":["int","(__clockid_t, struct timex *)"],
"clock":["clock_t","()"],
"time":["time_t","(time_t *)"],
"difftime":["double","(time_t, time_t)"],
"mktime":["time_t","(struct tm *)"],
"strftime":["size_t","(char *__restrict, size_t, const char *__restrict, const struct tm *__restrict)"],
"strptime":["char *","(const char *__restrict, const char *__restrict, struct tm *)"],
"strftime_l":["size_t","(char *__restrict, size_t, const char *__restrict, const struct tm *__restrict, locale_t)"],
"strptime_l":["char *","(const char *__restrict, const char *__restrict, struct tm *, locale_t)"],
"gmtime":["struct tm *","(const time_t *)"],
"localtime":["struct tm *","(const time_t *)"],
"gmtime_r":["struct tm *","(const time_t *__restrict, struct tm *__restrict)"],
"localtime_r":["struct tm *","(const time_t *__restrict, struct tm *__restrict)"],
"asctime":["char *","(const struct tm *)"],
"ctime":["char *","(const time_t *)"],
"asctime_r":["char *","(const struct tm *__restrict, char *__restrict)"],
"ctime_r":["char *","(const time_t *__restrict, char *__restrict)"],
"tzset":["void","()"],
"timegm":["time_t","(struct tm *)"],
"timelocal":["time_t","(struct tm *)"],
"dysize":["int","(int)"],
"nanosleep":["int","(const struct timespec *, struct timespec *)"],
"clock_getres":["int","(clockid_t, struct timespec *)"],
"clock_gettime":["int","(clockid_t, struct timespec *)"],
"clock_settime":["int","(clockid_t, const struct timespec *)"],
"clock_nanosleep":["int","(clockid_t, int, const struct timespec *, struct timespec *)"],
"clock_getcpuclockid":["int","(pid_t, clockid_t *)"],
"timer_create":["int","(clockid_t, struct sigevent *__restrict, timer_t *__restrict)"],
"timer_delete":["int","(timer_t)"],
"timer_settime":["int","(timer_t, int, const struct itimerspec *__restrict, struct itimerspec *__restrict)"],
"timer_gettime":["int","(timer_t, struct itimerspec *)"],
"timer_getoverrun":["int","(timer_t)"],
"timespec_get":["int","(struct timespec *, int)"],
"timespec_getres":["int","(struct timespec *, int)"],
"getdate":["struct tm *","(const char *)"],
"getdate_r":["int","(const char *__restrict, struct tm *__restrict)"],
"wcscpy":["wchar_t *","(wchar_t *__restrict, const wchar_t *__restrict)"],
"wcsncpy":["wchar_t *","(wchar_t *__restrict, const wchar_t *__restrict, size_t)"],
"wcscat":["wchar_t *","(wchar_t *__restrict, const wchar_t *__restrict)"],
"wcsncat":["wchar_t *","(wchar_t *__restrict, const wchar_t *__restrict, size_t)"],
"wcscmp":["int","(const wchar_t *, const wchar_t *)"],
"wcsncmp":["int","(const wchar_t *, const wchar_t *, size_t)"],
"wcscasecmp":["int","(const wchar_t *, const wchar_t *)"],
"wcsncasecmp":["int","(const wchar_t *, const wchar_t *, size_t)"],
"wcscasecmp_l":["int","(const wchar_t *, const wchar_t *, locale_t)"],
"wcsncasecmp_l":["int","(const wchar_t *, const wchar_t *, size_t, locale_t)"],
"wcscoll":["int","(const wchar_t *, const wchar_t *)"],
"wcsxfrm":["size_t","(wchar_t *__restrict, const wchar_t *__restrict, size_t)"],
"wcscoll_l":["int","(const wchar_t *, const wchar_t *, locale_t)"],
"wcsxfrm_l":["size_t","(wchar_t *, const wchar_t *, size_t, locale_t)"],
"wcsdup":["wchar_t *","(const wchar_t *)"],
"wcschr":[("wchar_t *","(const wchar_t *, wchar_t)"),("wchar_t *","(wchar_t *, wchar_t)")],
"wcsrchr":[("wchar_t *","(const wchar_t *, wchar_t)"),("wchar_t *","(wchar_t *, wchar_t)")],
"wcschrnul":["wchar_t *","(const wchar_t *, wchar_t)"],
"wcscspn":["size_t","(const wchar_t *, const wchar_t *)"],
"wcsspn":["size_t","(const wchar_t *, const wchar_t *)"],
"wcspbrk":[("wchar_t *","(const wchar_t *, const wchar_t *)"),("wchar_t *","(wchar_t *, const wchar_t *)")],
"wcsstr":[("wchar_t *","(const wchar_t *, const wchar_t *)"),("wchar_t *","(wchar_t *, const wchar_t *)")],
"wcstok":["wchar_t *","(wchar_t *__restrict, const wchar_t *__restrict, wchar_t **__restrict)"],
"wcslen":["size_t","(const wchar_t *)"],
"wcswcs":["wchar_t *","(const wchar_t *, const wchar_t *)"],
"wcsnlen":["size_t","(const wchar_t *, size_t)"],
"wmemchr":[("wchar_t *","(const wchar_t *, wchar_t, size_t)"),("wchar_t *","(wchar_t *, wchar_t, std::size_t)")],
"wmemcmp":["int","(const wchar_t *, const wchar_t *, size_t)"],
"wmemcpy":["wchar_t *","(wchar_t *__restrict, const wchar_t *__restrict, size_t)"],
"wmemmove":["wchar_t *","(wchar_t *, const wchar_t *, size_t)"],
"wmemset":["wchar_t *","(wchar_t *, wchar_t, size_t)"],
"wmempcpy":["wchar_t *","(wchar_t *__restrict, const wchar_t *__restrict, size_t)"],
"btowc":["wint_t","(int)"],
"wctob":["int","(wint_t)"],
"mbsinit":["int","(const mbstate_t *)"],
"mbrtowc":["size_t","(wchar_t *__restrict, const char *__restrict, size_t, mbstate_t *__restrict)"],
"wcrtomb":["size_t","(char *__restrict, wchar_t, mbstate_t *__restrict)"],
"__mbrlen":["size_t","(const char *__restrict, size_t, mbstate_t *__restrict)"],
"mbrlen":["size_t","(const char *__restrict, size_t, mbstate_t *__restrict)"],
"mbsrtowcs":["size_t","(wchar_t *__restrict, const char **__restrict, size_t, mbstate_t *__restrict)"],
"wcsrtombs":["size_t","(char *__restrict, const wchar_t **__restrict, size_t, mbstate_t *__restrict)"],
"mbsnrtowcs":["size_t","(wchar_t *__restrict, const char **__restrict, size_t, size_t, mbstate_t *__restrict)"],
"wcsnrtombs":["size_t","(char *__restrict, const wchar_t **__restrict, size_t, size_t, mbstate_t *__restrict)"],
"wcwidth":["int","(wchar_t)"],
"wcswidth":["int","(const wchar_t *, size_t)"],
"wcstod":["double","(const wchar_t *__restrict, wchar_t **__restrict)"],
"wcstof":["float","(const wchar_t *__restrict, wchar_t **__restrict)"],
"wcstold":["long double","(const wchar_t *__restrict, wchar_t **__restrict)"],
"wcstof32":["_Float32","(const wchar_t *__restrict, wchar_t **__restrict)"],
"wcstof64":["_Float64","(const wchar_t *__restrict, wchar_t **__restrict)"],
"wcstof32x":["_Float32x","(const wchar_t *__restrict, wchar_t **__restrict)"],
"wcstof64x":["_Float64x","(const wchar_t *__restrict, wchar_t **__restrict)"],
"wcstol":["long","(const wchar_t *__restrict, wchar_t **__restrict, int)"],
"wcstoul":["unsigned long","(const wchar_t *__restrict, wchar_t **__restrict, int)"],
"wcstoll":["long long","(const wchar_t *__restrict, wchar_t **__restrict, int)"],
"wcstoull":["unsigned long long","(const wchar_t *__restrict, wchar_t **__restrict, int)"],
"wcstoq":["long long","(const wchar_t *__restrict, wchar_t **__restrict, int)"],
"wcstouq":["unsigned long long","(const wchar_t *__restrict, wchar_t **__restrict, int)"],
"wcstol_l":["long","(const wchar_t *__restrict, wchar_t **__restrict, int, locale_t)"],
"wcstoul_l":["unsigned long","(const wchar_t *__restrict, wchar_t **__restrict, int, locale_t)"],
"wcstoll_l":["long long","(const wchar_t *__restrict, wchar_t **__restrict, int, locale_t)"],
"wcstoull_l":["unsigned long long","(const wchar_t *__restrict, wchar_t **__restrict, int, locale_t)"],
"wcstod_l":["double","(const wchar_t *__restrict, wchar_t **__restrict, locale_t)"],
"wcstof_l":["float","(const wchar_t *__restrict, wchar_t **__restrict, locale_t)"],
"wcstold_l":["long double","(const wchar_t *__restrict, wchar_t **__restrict, locale_t)"],
"wcstof32_l":["_Float32","(const wchar_t *__restrict, wchar_t **__restrict, locale_t)"],
"wcstof64_l":["_Float64","(const wchar_t *__restrict, wchar_t **__restrict, locale_t)"],
"wcstof32x_l":["_Float32x","(const wchar_t *__restrict, wchar_t **__restrict, locale_t)"],
"wcstof64x_l":["_Float64x","(const wchar_t *__restrict, wchar_t **__restrict, locale_t)"],
"wcpcpy":["wchar_t *","(wchar_t *__restrict, const wchar_t *__restrict)"],
"wcpncpy":["wchar_t *","(wchar_t *__restrict, const wchar_t *__restrict, size_t)"],
"open_wmemstream":["__FILE *","(wchar_t **, size_t *)"],
"fwide":["int","(__FILE *, int)"],
"fwprintf":["int","(__FILE *__restrict, const wchar_t *__restrict, ...)"],
"wprintf":["int","(const wchar_t *__restrict, ...)"],
"swprintf":["int","(wchar_t *__restrict, size_t, const wchar_t *__restrict, ...)"],
"vfwprintf":["int","(__FILE *__restrict, const wchar_t *__restrict, __va_list_tag *)"],
"vwprintf":["int","(const wchar_t *__restrict, __va_list_tag *)"],
"vswprintf":["int","(wchar_t *__restrict, size_t, const wchar_t *__restrict, __va_list_tag *)"],
"fwscanf":[("int","(__FILE *__restrict, const wchar_t *__restrict, ...)"),("int","(__FILE *__restrict, const wchar_t *__restrict, ...)")],
"wscanf":[("int","(const wchar_t *__restrict, ...)"),("int","(const wchar_t *__restrict, ...)")],
"swscanf":[("int","(const wchar_t *__restrict, const wchar_t *__restrict, ...)"),("int","(const wchar_t *__restrict, const wchar_t *__restrict, ...)")],
"vfwscanf":[("int","(__FILE *__restrict, const wchar_t *__restrict, __va_list_tag *)"),("int","(__FILE *__restrict, const wchar_t *__restrict, __va_list_tag *)")],
"vwscanf":[("int","(const wchar_t *__restrict, __va_list_tag *)"),("int","(const wchar_t *__restrict, __va_list_tag *)")],
"vswscanf":[("int","(const wchar_t *__restrict, const wchar_t *__restrict, __va_list_tag *)"),("int","(const wchar_t *__restrict, const wchar_t *__restrict, __va_list_tag *)")],
"fgetwc":["wint_t","(__FILE *)"],
"getwc":["wint_t","(__FILE *)"],
"getwchar":["wint_t","()"],
"fputwc":["wint_t","(wchar_t, __FILE *)"],
"putwc":["wint_t","(wchar_t, __FILE *)"],
"putwchar":["wint_t","(wchar_t)"],
"fgetws":["wchar_t *","(wchar_t *__restrict, int, __FILE *__restrict)"],
"fputws":["int","(const wchar_t *__restrict, __FILE *__restrict)"],
"ungetwc":["wint_t","(wint_t, __FILE *)"],
"getwc_unlocked":["wint_t","(__FILE *)"],
"getwchar_unlocked":["wint_t","()"],
"fgetwc_unlocked":["wint_t","(__FILE *)"],
"fputwc_unlocked":["wint_t","(wchar_t, __FILE *)"],
"putwc_unlocked":["wint_t","(wchar_t, __FILE *)"],
"putwchar_unlocked":["wint_t","(wchar_t)"],
"fgetws_unlocked":["wchar_t *","(wchar_t *__restrict, int, __FILE *__restrict)"],
"fputws_unlocked":["int","(const wchar_t *__restrict, __FILE *__restrict)"],
"wcsftime":["size_t","(wchar_t *__restrict, size_t, const wchar_t *__restrict, const struct tm *__restrict)"],
"wcsftime_l":["size_t","(wchar_t *__restrict, size_t, const wchar_t *__restrict, const struct tm *__restrict, locale_t)"],
"iswalnum":["int","(wint_t)"],
"iswalpha":["int","(wint_t)"],
"iswcntrl":["int","(wint_t)"],
"iswdigit":["int","(wint_t)"],
"iswgraph":["int","(wint_t)"],
"iswlower":["int","(wint_t)"],
"iswprint":["int","(wint_t)"],
"iswpunct":["int","(wint_t)"],
"iswspace":["int","(wint_t)"],
"iswupper":["int","(wint_t)"],
"iswxdigit":["int","(wint_t)"],
"iswblank":["int","(wint_t)"],
"wctype":["wctype_t","(const char *)"],
"iswctype":["int","(wint_t, wctype_t)"],
"towlower":["wint_t","(wint_t)"],
"towupper":["wint_t","(wint_t)"],
"wctrans":["wctrans_t","(const char *)"],
"towctrans":["wint_t","(wint_t, wctrans_t)"],
"iswalnum_l":["int","(wint_t, locale_t)"],
"iswalpha_l":["int","(wint_t, locale_t)"],
"iswcntrl_l":["int","(wint_t, locale_t)"],
"iswdigit_l":["int","(wint_t, locale_t)"],
"iswgraph_l":["int","(wint_t, locale_t)"],
"iswlower_l":["int","(wint_t, locale_t)"],
"iswprint_l":["int","(wint_t, locale_t)"],
"iswpunct_l":["int","(wint_t, locale_t)"],
"iswspace_l":["int","(wint_t, locale_t)"],
"iswupper_l":["int","(wint_t, locale_t)"],
"iswxdigit_l":["int","(wint_t, locale_t)"],
"iswblank_l":["int","(wint_t, locale_t)"],
"wctype_l":["wctype_t","(const char *, locale_t)"],
"iswctype_l":["int","(wint_t, wctype_t, locale_t)"],
"towlower_l":["wint_t","(wint_t, locale_t)"],
"towupper_l":["wint_t","(wint_t, locale_t)"],
"wctrans_l":["wctrans_t","(const char *, locale_t)"],
"towctrans_l":["wint_t","(wint_t, wctrans_t, locale_t)"],
"set_terminate":["std::terminate_handler","(std::terminate_handler)"],
"get_terminate":["std::terminate_handler","()"],
"terminate":["void","()"],
"set_unexpected":["std::unexpected_handler","(std::unexpected_handler)"],
"get_unexpected":["std::unexpected_handler","()"],
"unexpected":["void","()"],
"uncaught_exception":["bool","()"],
"uncaught_exceptions":["int","()"],
"__verbose_terminate_handler":["void","()"],
"__cxa_allocate_exception":["void *","(size_t)"],
"__cxa_free_exception":["void","(void *)"],
"__cxa_init_primary_exception":["__cxxabiv1::__cxa_refcounted_exception *","(void *, std::type_info *, void (*)(void *))"],
"_Hash_bytes":["std::size_t","(const void *, std::size_t, std::size_t)"],
"_Fnv_hash_bytes":["std::size_t","(const void *, std::size_t, std::size_t)"],
"set_new_handler":["std::new_handler","(std::new_handler)"],
"get_new_handler":["std::new_handler","()"],
"current_exception":[("std::__exception_ptr::exception_ptr","()"),("std::__exception_ptr::exception_ptr","()")],
"rethrow_exception":[("void","(std::__exception_ptr::exception_ptr)"),("void","(std::__exception_ptr::exception_ptr)")],
"swap":[("void","(std::__exception_ptr::exception_ptr &, std::__exception_ptr::exception_ptr &)"),("void","(std::_Bit_reference, std::_Bit_reference)"),("void","(std::_Bit_reference, bool &)"),("void","(bool &, std::_Bit_reference)"),("void","(std::thread &, std::thread &)")],
"__rethrow_if_nested_impl":["void","(const void *)"],
"__uselocale":["locale_t","(locale_t)"],
"__convert_from_v":["int","(const std::__c_locale &, char *, const int, const char *, ...)"],
"clone":["int","(int (*)(void *), void *, int, void *, ...)"],
"unshare":["int","(int)"],
"sched_getcpu":["int","()"],
"getcpu":["int","(unsigned int *, unsigned int *)"],
"setns":["int","(int, int)"],
"__sched_cpucount":["int","(size_t, const cpu_set_t *)"],
"__sched_cpualloc":["cpu_set_t *","(size_t)"],
"__sched_cpufree":["void","(cpu_set_t *)"],
"sched_setparam":["int","(__pid_t, const struct sched_param *)"],
"sched_getparam":["int","(__pid_t, struct sched_param *)"],
"sched_setscheduler":["int","(__pid_t, int, const struct sched_param *)"],
"sched_getscheduler":["int","(__pid_t)"],
"sched_yield":["int","()"],
"sched_get_priority_max":["int","(int)"],
"sched_get_priority_min":["int","(int)"],
"sched_rr_get_interval":["int","(__pid_t, struct timespec *)"],
"sched_setaffinity":["int","(__pid_t, size_t, const cpu_set_t *)"],
"sched_getaffinity":["int","(__pid_t, size_t, cpu_set_t *)"],
"pthread_create":["int","(pthread_t *__restrict, const pthread_attr_t *__restrict, void *(*)(void *), void *__restrict)"],
"pthread_exit":["void","(void *)"],
"pthread_join":["int","(pthread_t, void **)"],
"pthread_tryjoin_np":["int","(pthread_t, void **)"],
"pthread_timedjoin_np":["int","(pthread_t, void **, const struct timespec *)"],
"pthread_clockjoin_np":["int","(pthread_t, void **, clockid_t, const struct timespec *)"],
"pthread_detach":["int","(pthread_t)"],
"pthread_self":["pthread_t","()"],
"pthread_equal":["int","(pthread_t, pthread_t)"],
"pthread_attr_init":["int","(pthread_attr_t *)"],
"pthread_attr_destroy":["int","(pthread_attr_t *)"],
"pthread_attr_getdetachstate":["int","(const pthread_attr_t *, int *)"],
"pthread_attr_setdetachstate":["int","(pthread_attr_t *, int)"],
"pthread_attr_getguardsize":["int","(const pthread_attr_t *, size_t *)"],
"pthread_attr_setguardsize":["int","(pthread_attr_t *, size_t)"],
"pthread_attr_getschedparam":["int","(const pthread_attr_t *__restrict, struct sched_param *__restrict)"],
"pthread_attr_setschedparam":["int","(pthread_attr_t *__restrict, const struct sched_param *__restrict)"],
"pthread_attr_getschedpolicy":["int","(const pthread_attr_t *__restrict, int *__restrict)"],
"pthread_attr_setschedpolicy":["int","(pthread_attr_t *, int)"],
"pthread_attr_getinheritsched":["int","(const pthread_attr_t *__restrict, int *__restrict)"],
"pthread_attr_setinheritsched":["int","(pthread_attr_t *, int)"],
"pthread_attr_getscope":["int","(const pthread_attr_t *__restrict, int *__restrict)"],
"pthread_attr_setscope":["int","(pthread_attr_t *, int)"],
"pthread_attr_getstackaddr":["int","(const pthread_attr_t *__restrict, void **__restrict)"],
"pthread_attr_setstackaddr":["int","(pthread_attr_t *, void *)"],
"pthread_attr_getstacksize":["int","(const pthread_attr_t *__restrict, size_t *__restrict)"],
"pthread_attr_setstacksize":["int","(pthread_attr_t *, size_t)"],
"pthread_attr_getstack":["int","(const pthread_attr_t *__restrict, void **__restrict, size_t *__restrict)"],
"pthread_attr_setstack":["int","(pthread_attr_t *, void *, size_t)"],
"pthread_attr_setaffinity_np":["int","(pthread_attr_t *, size_t, const cpu_set_t *)"],
"pthread_attr_getaffinity_np":["int","(const pthread_attr_t *, size_t, cpu_set_t *)"],
"pthread_getattr_default_np":["int","(pthread_attr_t *)"],
"pthread_attr_setsigmask_np":["int","(pthread_attr_t *, const __sigset_t *)"],
"pthread_attr_getsigmask_np":["int","(const pthread_attr_t *, __sigset_t *)"],
"pthread_setattr_default_np":["int","(const pthread_attr_t *)"],
"pthread_getattr_np":["int","(pthread_t, pthread_attr_t *)"],
"pthread_setschedparam":["int","(pthread_t, int, const struct sched_param *)"],
"pthread_getschedparam":["int","(pthread_t, int *__restrict, struct sched_param *__restrict)"],
"pthread_setschedprio":["int","(pthread_t, int)"],
"pthread_getname_np":["int","(pthread_t, char *, size_t)"],
"pthread_setname_np":["int","(pthread_t, const char *)"],
"pthread_getconcurrency":["int","()"],
"pthread_setconcurrency":["int","(int)"],
"pthread_yield":[("int","()"),("int","()")],
"pthread_setaffinity_np":["int","(pthread_t, size_t, const cpu_set_t *)"],
"pthread_getaffinity_np":["int","(pthread_t, size_t, cpu_set_t *)"],
"pthread_once":["int","(pthread_once_t *, void (*)())"],
"pthread_setcancelstate":["int","(int, int *)"],
"pthread_setcanceltype":["int","(int, int *)"],
"pthread_cancel":["int","(pthread_t)"],
"pthread_testcancel":["void","()"],
"pthread_mutex_init":["int","(pthread_mutex_t *, const pthread_mutexattr_t *)"],
"pthread_mutex_destroy":["int","(pthread_mutex_t *)"],
"pthread_mutex_trylock":["int","(pthread_mutex_t *)"],
"pthread_mutex_lock":["int","(pthread_mutex_t *)"],
"pthread_mutex_timedlock":["int","(pthread_mutex_t *__restrict, const struct timespec *__restrict)"],
"pthread_mutex_clocklock":["int","(pthread_mutex_t *__restrict, clockid_t, const struct timespec *__restrict)"],
"pthread_mutex_unlock":["int","(pthread_mutex_t *)"],
"pthread_mutex_getprioceiling":["int","(const pthread_mutex_t *__restrict, int *__restrict)"],
"pthread_mutex_setprioceiling":["int","(pthread_mutex_t *__restrict, int, int *__restrict)"],
"pthread_mutex_consistent":["int","(pthread_mutex_t *)"],
"pthread_mutex_consistent_np":["int","(pthread_mutex_t *)"],
"pthread_mutexattr_init":["int","(pthread_mutexattr_t *)"],
"pthread_mutexattr_destroy":["int","(pthread_mutexattr_t *)"],
"pthread_mutexattr_getpshared":["int","(const pthread_mutexattr_t *__restrict, int *__restrict)"],
"pthread_mutexattr_setpshared":["int","(pthread_mutexattr_t *, int)"],
"pthread_mutexattr_gettype":["int","(const pthread_mutexattr_t *__restrict, int *__restrict)"],
"pthread_mutexattr_settype":["int","(pthread_mutexattr_t *, int)"],
"pthread_mutexattr_getprotocol":["int","(const pthread_mutexattr_t *__restrict, int *__restrict)"],
"pthread_mutexattr_setprotocol":["int","(pthread_mutexattr_t *, int)"],
"pthread_mutexattr_getprioceiling":["int","(const pthread_mutexattr_t *__restrict, int *__restrict)"],
"pthread_mutexattr_setprioceiling":["int","(pthread_mutexattr_t *, int)"],
"pthread_mutexattr_getrobust":["int","(const pthread_mutexattr_t *, int *)"],
"pthread_mutexattr_getrobust_np":["int","(pthread_mutexattr_t *, int *)"],
"pthread_mutexattr_setrobust":["int","(pthread_mutexattr_t *, int)"],
"pthread_mutexattr_setrobust_np":["int","(pthread_mutexattr_t *, int)"],
"pthread_rwlock_init":["int","(pthread_rwlock_t *__restrict, const pthread_rwlockattr_t *__restrict)"],
"pthread_rwlock_destroy":["int","(pthread_rwlock_t *)"],
"pthread_rwlock_rdlock":["int","(pthread_rwlock_t *)"],
"pthread_rwlock_tryrdlock":["int","(pthread_rwlock_t *)"],
"pthread_rwlock_timedrdlock":["int","(pthread_rwlock_t *__restrict, const struct timespec *__restrict)"],
"pthread_rwlock_clockrdlock":["int","(pthread_rwlock_t *__restrict, clockid_t, const struct timespec *__restrict)"],
"pthread_rwlock_wrlock":["int","(pthread_rwlock_t *)"],
"pthread_rwlock_trywrlock":["int","(pthread_rwlock_t *)"],
"pthread_rwlock_timedwrlock":["int","(pthread_rwlock_t *__restrict, const struct timespec *__restrict)"],
"pthread_rwlock_clockwrlock":["int","(pthread_rwlock_t *__restrict, clockid_t, const struct timespec *__restrict)"],
"pthread_rwlock_unlock":["int","(pthread_rwlock_t *)"],
"pthread_rwlockattr_init":["int","(pthread_rwlockattr_t *)"],
"pthread_rwlockattr_destroy":["int","(pthread_rwlockattr_t *)"],
"pthread_rwlockattr_getpshared":["int","(const pthread_rwlockattr_t *__restrict, int *__restrict)"],
"pthread_rwlockattr_setpshared":["int","(pthread_rwlockattr_t *, int)"],
"pthread_rwlockattr_getkind_np":["int","(const pthread_rwlockattr_t *__restrict, int *__restrict)"],
"pthread_rwlockattr_setkind_np":["int","(pthread_rwlockattr_t *, int)"],
"pthread_cond_init":["int","(pthread_cond_t *__restrict, const pthread_condattr_t *__restrict)"],
"pthread_cond_destroy":["int","(pthread_cond_t *)"],
"pthread_cond_signal":["int","(pthread_cond_t *)"],
"pthread_cond_broadcast":["int","(pthread_cond_t *)"],
"pthread_cond_wait":["int","(pthread_cond_t *__restrict, pthread_mutex_t *__restrict)"],
"pthread_cond_timedwait":["int","(pthread_cond_t *__restrict, pthread_mutex_t *__restrict, const struct timespec *__restrict)"],
"pthread_cond_clockwait":["int","(pthread_cond_t *__restrict, pthread_mutex_t *__restrict, __clockid_t, const struct timespec *__restrict)"],
"pthread_condattr_init":["int","(pthread_condattr_t *)"],
"pthread_condattr_destroy":["int","(pthread_condattr_t *)"],
"pthread_condattr_getpshared":["int","(const pthread_condattr_t *__restrict, int *__restrict)"],
"pthread_condattr_setpshared":["int","(pthread_condattr_t *, int)"],
"pthread_condattr_getclock":["int","(const pthread_condattr_t *__restrict, __clockid_t *__restrict)"],
"pthread_condattr_setclock":["int","(pthread_condattr_t *, __clockid_t)"],
"pthread_spin_init":["int","(pthread_spinlock_t *, int)"],
"pthread_spin_destroy":["int","(pthread_spinlock_t *)"],
"pthread_spin_lock":["int","(pthread_spinlock_t *)"],
"pthread_spin_trylock":["int","(pthread_spinlock_t *)"],
"pthread_spin_unlock":["int","(pthread_spinlock_t *)"],
"pthread_barrier_init":["int","(pthread_barrier_t *__restrict, const pthread_barrierattr_t *__restrict, unsigned int)"],
"pthread_barrier_destroy":["int","(pthread_barrier_t *)"],
"pthread_barrier_wait":["int","(pthread_barrier_t *)"],
"pthread_barrierattr_init":["int","(pthread_barrierattr_t *)"],
"pthread_barrierattr_destroy":["int","(pthread_barrierattr_t *)"],
"pthread_barrierattr_getpshared":["int","(const pthread_barrierattr_t *__restrict, int *__restrict)"],
"pthread_barrierattr_setpshared":["int","(pthread_barrierattr_t *, int)"],
"pthread_key_create":["int","(pthread_key_t *, void (*)(void *))"],
"pthread_key_delete":["int","(pthread_key_t)"],
"pthread_getspecific":["void *","(pthread_key_t)"],
"pthread_setspecific":["int","(pthread_key_t, const void *)"],
"pthread_getcpuclockid":["int","(pthread_t, __clockid_t *)"],
"pthread_atfork":["int","(void (*)(), void (*)(), void (*)())"],
"__gthread_active_p":["int","()"],
"__gthread_create":["int","(__gthread_t *, void *(*)(void *), void *)"],
"__gthread_join":["int","(__gthread_t, void **)"],
"__gthread_detach":["int","(__gthread_t)"],
"__gthread_equal":["int","(__gthread_t, __gthread_t)"],
"__gthread_self":["__gthread_t","()"],
"__gthread_yield":["int","()"],
"__gthread_once":["int","(__gthread_once_t *, void (*)())"],
"__gthread_key_create":["int","(__gthread_key_t *, void (*)(void *))"],
"__gthread_key_delete":["int","(__gthread_key_t)"],
"__gthread_getspecific":["void *","(__gthread_key_t)"],
"__gthread_setspecific":["int","(__gthread_key_t, const void *)"],
"__gthread_mutex_init_function":["void","(__gthread_mutex_t *)"],
"__gthread_mutex_destroy":["int","(__gthread_mutex_t *)"],
"__gthread_mutex_lock":["int","(__gthread_mutex_t *)"],
"__gthread_mutex_trylock":["int","(__gthread_mutex_t *)"],
"__gthread_mutex_timedlock":["int","(__gthread_mutex_t *, const __gthread_time_t *)"],
"__gthread_mutex_unlock":["int","(__gthread_mutex_t *)"],
"__gthread_recursive_mutex_lock":["int","(__gthread_recursive_mutex_t *)"],
"__gthread_recursive_mutex_trylock":["int","(__gthread_recursive_mutex_t *)"],
"__gthread_recursive_mutex_timedlock":["int","(__gthread_recursive_mutex_t *, const __gthread_time_t *)"],
"__gthread_recursive_mutex_unlock":["int","(__gthread_recursive_mutex_t *)"],
"__gthread_recursive_mutex_destroy":["int","(__gthread_recursive_mutex_t *)"],
"__gthread_cond_broadcast":["int","(__gthread_cond_t *)"],
"__gthread_cond_signal":["int","(__gthread_cond_t *)"],
"__gthread_cond_wait":["int","(__gthread_cond_t *, __gthread_mutex_t *)"],
"__gthread_cond_timedwait":["int","(__gthread_cond_t *, __gthread_mutex_t *, const __gthread_time_t *)"],
"__gthread_cond_wait_recursive":["int","(__gthread_cond_t *, __gthread_recursive_mutex_t *)"],
"__gthread_cond_destroy":["int","(__gthread_cond_t *)"],
"__is_single_threaded":["bool","()"],
"__exchange_and_add":["_Atomic_word","(volatile _Atomic_word *, int)"],
"__atomic_add":["void","(volatile _Atomic_word *, int)"],
"__exchange_and_add_single":["_Atomic_word","(_Atomic_word *, int)"],
"__atomic_add_single":["void","(_Atomic_word *, int)"],
"__exchange_and_add_dispatch":["_Atomic_word","(_Atomic_word *, int)"],
"__atomic_add_dispatch":["void","(_Atomic_word *, int)"],
"__throw_bad_exception":["void","()"],
"__throw_bad_alloc":["void","()"],
"__throw_bad_array_new_length":["void","()"],
"__throw_bad_cast":["void","()"],
"__throw_bad_typeid":["void","()"],
"__throw_logic_error":["void","(const char *)"],
"__throw_domain_error":["void","(const char *)"],
"__throw_invalid_argument":["void","(const char *)"],
"__throw_length_error":["void","(const char *)"],
"__throw_out_of_range":["void","(const char *)"],
"__throw_out_of_range_fmt":["void","(const char *, ...)"],
"__throw_runtime_error":["void","(const char *)"],
"__throw_range_error":["void","(const char *)"],
"__throw_overflow_error":["void","(const char *)"],
"__throw_underflow_error":["void","(const char *)"],
"__throw_ios_failure":[("void","(const char *)"),("void","(const char *, int)")],
"__throw_system_error":["void","(int)"],
"__throw_future_error":[("void","(int)"),("void","(int)")],
"__throw_bad_function_call":["void","()"],
"__iter_less_iter":["__gnu_cxx::__ops::_Iter_less_iter","()"],
"__iter_less_val":["__gnu_cxx::__ops::_Iter_less_val","()"],
"__iter_comp_val":[("__gnu_cxx::__ops::_Iter_less_val","(__gnu_cxx::__ops::_Iter_less_iter)"),("__gnu_cxx::__ops::_Iter_equal_to_val","(__gnu_cxx::__ops::_Iter_equal_to_iter)")],
"__val_less_iter":["__gnu_cxx::__ops::_Val_less_iter","()"],
"__val_comp_iter":["__gnu_cxx::__ops::_Val_less_iter","(__gnu_cxx::__ops::_Iter_less_iter)"],
"__iter_equal_to_iter":["__gnu_cxx::__ops::_Iter_equal_to_iter","()"],
"__iter_equal_to_val":["__gnu_cxx::__ops::_Iter_equal_to_val","()"],
"__fill_a1":[("void","(std::_Bit_iterator, std::_Bit_iterator, const bool &)"),("void","(std::_Bit_iterator, std::_Bit_iterator, const bool &)")],
"__size_to_integer":[("int","(int)"),("unsigned int","(unsigned int)"),("long","(long)"),("unsigned long","(unsigned long)"),("long long","(long long)"),("unsigned long long","(unsigned long long)"),("__int128","(__int128)"),("unsigned __int128","(unsigned __int128)"),("long long","(float)"),("long long","(double)"),("long long","(long double)"),("long long","(__float128)")],
"__lg":[("int","(int)"),("unsigned int","(unsigned int)"),("long","(long)"),("unsigned long","(unsigned long)"),("long long","(long long)"),("unsigned long long","(unsigned long long)")],
"stoi":[("int","(const std::string &, std::size_t *, int)"),("int","(const std::wstring &, std::size_t *, int)")],
"stol":[("long","(const std::string &, std::size_t *, int)"),("long","(const std::wstring &, std::size_t *, int)")],
"stoul":[("unsigned long","(const std::string &, std::size_t *, int)"),("unsigned long","(const std::wstring &, std::size_t *, int)")],
"stoll":[("long long","(const std::string &, std::size_t *, int)"),("long long","(const std::wstring &, std::size_t *, int)")],
"stoull":[("unsigned long long","(const std::string &, std::size_t *, int)"),("unsigned long long","(const std::wstring &, std::size_t *, int)")],
"stof":[("float","(const std::string &, std::size_t *)"),("float","(const std::wstring &, std::size_t *)")],
"stod":[("double","(const std::string &, std::size_t *)"),("double","(const std::wstring &, std::size_t *)")],
"stold":[("long double","(const std::string &, std::size_t *)"),("long double","(const std::wstring &, std::size_t *)")],
"to_string":[("std::string","(int)"),("std::string","(unsigned int)"),("std::string","(long)"),("std::string","(unsigned long)"),("std::string","(long long)"),("std::string","(unsigned long long)"),("std::string","(float)"),("std::string","(double)"),("std::string","(long double)")],
"to_wstring":[("std::wstring","(int)"),("std::wstring","(unsigned int)"),("std::wstring","(long)"),("std::wstring","(unsigned long)"),("std::wstring","(long long)"),("std::wstring","(unsigned long long)"),("std::wstring","(float)"),("std::wstring","(double)"),("std::wstring","(long double)")],
"generic_category":["const std::_V2::error_category &","()"],
"system_category":["const std::_V2::error_category &","()"],
"make_error_code":[("std::error_code","(std::errc)"),("std::error_code","(std::errc)"),("std::error_code","(std::io_errc)"),("std::error_code","(std::future_errc)")],
"make_error_condition":[("std::error_condition","(std::errc)"),("std::error_condition","(std::errc)"),("std::error_condition","(std::io_errc)"),("std::error_condition","(std::future_errc)")],
"iostream_category":["const std::_V2::error_category &","()"],
"boolalpha":["std::ios_base &","(std::ios_base &)"],
"noboolalpha":["std::ios_base &","(std::ios_base &)"],
"showbase":["std::ios_base &","(std::ios_base &)"],
"noshowbase":["std::ios_base &","(std::ios_base &)"],
"showpoint":["std::ios_base &","(std::ios_base &)"],
"noshowpoint":["std::ios_base &","(std::ios_base &)"],
"showpos":["std::ios_base &","(std::ios_base &)"],
"noshowpos":["std::ios_base &","(std::ios_base &)"],
"skipws":["std::ios_base &","(std::ios_base &)"],
"noskipws":["std::ios_base &","(std::ios_base &)"],
"uppercase":["std::ios_base &","(std::ios_base &)"],
"nouppercase":["std::ios_base &","(std::ios_base &)"],
"unitbuf":["std::ios_base &","(std::ios_base &)"],
"nounitbuf":["std::ios_base &","(std::ios_base &)"],
"internal":["std::ios_base &","(std::ios_base &)"],
"left":["std::ios_base &","(std::ios_base &)"],
"right":["std::ios_base &","(std::ios_base &)"],
"dec":["std::ios_base &","(std::ios_base &)"],
"hex":["std::ios_base &","(std::ios_base &)"],
"oct":["std::ios_base &","(std::ios_base &)"],
"fixed":["std::ios_base &","(std::ios_base &)"],
"scientific":["std::ios_base &","(std::ios_base &)"],
"hexfloat":["std::ios_base &","(std::ios_base &)"],
"defaultfloat":["std::ios_base &","(std::ios_base &)"],
"__copy_streambufs_eof":[("std::streamsize","(basic_streambuf<_CharT, _Traits> *, basic_streambuf<_CharT, _Traits> *, bool &)"),("std::streamsize","(basic_streambuf<char> *, basic_streambuf<char> *, bool &)"),("std::streamsize","(basic_streambuf<wchar_t> *, basic_streambuf<wchar_t> *, bool &)")],
"__istream_extract":[("void","(std::istream &, char *, std::streamsize)"),("void","(std::istream &, char *, std::streamsize)")],
"__convert_to_v":[("void","(const char *, float &, ios_base::iostate &, const std::__c_locale &)"),("void","(const char *, double &, ios_base::iostate &, const std::__c_locale &)"),("void","(const char *, long double &, ios_base::iostate &, const std::__c_locale &)")],
"__verify_grouping":["bool","(const char *, std::size_t, const std::string &)"],
"__complex_abs":[("float","(_Complex float)"),("double","(_Complex double)"),("long double","(const _Complex long double &)")],
"__complex_arg":[("float","(_Complex float)"),("double","(_Complex double)"),("long double","(const _Complex long double &)")],
"__complex_cos":[("_Complex float","(_Complex float)"),("_Complex double","(_Complex double)"),("_Complex long double","(const _Complex long double &)")],
"__complex_cosh":[("_Complex float","(_Complex float)"),("_Complex double","(_Complex double)"),("_Complex long double","(const _Complex long double &)")],
"__complex_exp":[("_Complex float","(_Complex float)"),("_Complex double","(_Complex double)"),("_Complex long double","(const _Complex long double &)")],
"__complex_log":[("_Complex float","(_Complex float)"),("_Complex double","(_Complex double)"),("_Complex long double","(const _Complex long double &)")],
"__complex_sin":[("_Complex float","(_Complex float)"),("_Complex double","(_Complex double)"),("_Complex long double","(const _Complex long double &)")],
"__complex_sinh":[("_Complex float","(_Complex float)"),("_Complex double","(_Complex double)"),("_Complex long double","(const _Complex long double &)")],
"__complex_sqrt":[("_Complex float","(_Complex float)"),("_Complex double","(_Complex double)"),("_Complex long double","(const _Complex long double &)")],
"__complex_tan":[("_Complex float","(_Complex float)"),("_Complex double","(_Complex double)"),("_Complex long double","(const _Complex long double &)")],
"__complex_tanh":[("_Complex float","(_Complex float)"),("_Complex double","(_Complex double)"),("_Complex long double","(const _Complex long double &)")],
"__complex_pow":[("_Complex float","(_Complex float, _Complex float)"),("_Complex double","(_Complex double, _Complex double)"),("_Complex long double","(const _Complex long double &, const _Complex long double &)")],
"__complex_acos":[("_Complex float","(_Complex float)"),("_Complex double","(_Complex double)"),("_Complex long double","(const _Complex long double &)")],
"__complex_asin":[("_Complex float","(_Complex float)"),("_Complex double","(_Complex double)"),("_Complex long double","(const _Complex long double &)")],
"__complex_atan":[("_Complex float","(_Complex float)"),("_Complex double","(_Complex double)"),("_Complex long double","(const _Complex long double &)")],
"__complex_acosh":[("_Complex float","(_Complex float)"),("_Complex double","(_Complex double)"),("_Complex long double","(const _Complex long double &)")],
"__complex_asinh":[("_Complex float","(_Complex float)"),("_Complex double","(_Complex double)"),("_Complex long double","(const _Complex long double &)")],
"__complex_atanh":[("_Complex float","(_Complex float)"),("_Complex double","(_Complex double)"),("_Complex long double","(const _Complex long double &)")],
"__complex_proj":[("complex<float>","(const complex<float> &)"),("complex<double>","(const complex<double> &)"),("complex<long double>","(const complex<long double> &)")],
"feclearexcept":["int","(int)"],
"fegetexceptflag":["int","(fexcept_t *, int)"],
"feraiseexcept":["int","(int)"],
"fesetexcept":["int","(int)"],
"fesetexceptflag":["int","(const fexcept_t *, int)"],
"fetestexcept":["int","(int)"],
"fetestexceptflag":["int","(const fexcept_t *, int)"],
"fegetround":["int","()"],
"fesetround":["int","(int)"],
"fegetenv":["int","(fenv_t *)"],
"feholdexcept":["int","(fenv_t *)"],
"fesetenv":["int","(const fenv_t *)"],
"feupdateenv":["int","(const fenv_t *)"],
"fegetmode":["int","(femode_t *)"],
"fesetmode":["int","(const femode_t *)"],
"feenableexcept":["int","(int)"],
"fedisableexcept":["int","(int)"],
"fegetexcept":["int","()"],
"imaxabs":["intmax_t","(intmax_t)"],
"imaxdiv":["imaxdiv_t","(intmax_t, intmax_t)"],
"strtoimax":["intmax_t","(const char *__restrict, char **__restrict, int)"],
"strtoumax":["uintmax_t","(const char *__restrict, char **__restrict, int)"],
"wcstoimax":["intmax_t","(const wchar_t *__restrict, wchar_t **__restrict, int)"],
"wcstoumax":["uintmax_t","(const wchar_t *__restrict, wchar_t **__restrict, int)"],
"mbrtoc16":["size_t","(char16_t *__restrict, const char *__restrict, size_t, mbstate_t *__restrict)"],
"c16rtomb":["size_t","(char *__restrict, char16_t, mbstate_t *__restrict)"],
"mbrtoc32":["size_t","(char32_t *__restrict, const char *__restrict, size_t, mbstate_t *__restrict)"],
"c32rtomb":["size_t","(char *__restrict, char32_t, mbstate_t *__restrict)"],
"random_shuffle":[("void","(int, int)"),("void","(int, int, int &&)")],
"__deque_buf_size":["std::size_t","(std::size_t)"],
"gettext":["char *","(const char *)"],
"dgettext":["char *","(const char *, const char *)"],
"__dgettext":["char *","(const char *, const char *)"],
"dcgettext":["char *","(const char *, const char *, int)"],
"__dcgettext":["char *","(const char *, const char *, int)"],
"ngettext":["char *","(const char *, const char *, unsigned long)"],
"dngettext":["char *","(const char *, const char *, const char *, unsigned long)"],
"dcngettext":["char *","(const char *, const char *, const char *, unsigned long, int)"],
"textdomain":["char *","(const char *)"],
"bindtextdomain":["char *","(const char *, const char *)"],
"bind_textdomain_codeset":["char *","(const char *, const char *)"],
"resetiosflags":["std::_Resetiosflags","(ios_base::fmtflags)"],
"setiosflags":["std::_Setiosflags","(ios_base::fmtflags)"],
"setbase":["std::_Setbase","(int)"],
"setprecision":["std::_Setprecision","(int)"],
"setw":["std::_Setw","(int)"],
"_Rb_tree_increment":[("std::_Rb_tree_node_base *","(std::_Rb_tree_node_base *)"),("const std::_Rb_tree_node_base *","(const std::_Rb_tree_node_base *)")],
"_Rb_tree_decrement":[("std::_Rb_tree_node_base *","(std::_Rb_tree_node_base *)"),("const std::_Rb_tree_node_base *","(const std::_Rb_tree_node_base *)")],
"_Rb_tree_insert_and_rebalance":["void","(const bool, std::_Rb_tree_node_base *, std::_Rb_tree_node_base *, std::_Rb_tree_node_base &)"],
"_Rb_tree_rebalance_for_erase":["std::_Rb_tree_node_base *","(std::_Rb_tree_node_base *const, std::_Rb_tree_node_base &)"],
"_Rb_tree_black_count":["unsigned int","(const std::_Rb_tree_node_base *, const std::_Rb_tree_node_base *)"],
"align":["void *","(std::size_t, std::size_t, void *&, std::size_t &)"],
"make_unique":[("int","(int &&)"),("int","(std::size_t)")],
"__throw_concurrence_lock_error":["void","()"],
"__throw_concurrence_unlock_error":["void","()"],
"__throw_concurrence_broadcast_error":["void","()"],
"__throw_concurrence_wait_error":["void","()"],
"__throw_bad_weak_ptr":["void","()"],
"__enable_shared_from_this_base":[("const __enable_shared_from_this<_Tp, _Lp> *","(const __shared_count<_Lp> &, const __enable_shared_from_this<_Tp, _Lp> *)"),("const enable_shared_from_this<_Tp> *","(const int &, const enable_shared_from_this<_Tp> *)")],
"__cmpexch_failure_order2":["std::memory_order","(std::memory_order)"],
"__cmpexch_failure_order":["std::memory_order","(std::memory_order)"],
"__is_valid_cmpexch_failure_order":["bool","(std::memory_order)"],
"atomic_thread_fence":["void","(std::memory_order)"],
"atomic_signal_fence":["void","(std::memory_order)"],
"declare_reachable":["void","(void *)"],
"declare_no_pointers":["void","(char *, std::size_t)"],
"undeclare_no_pointers":["void","(char *, std::size_t)"],
"get_pointer_safety":["std::pointer_safety","()"],
"__fill_bvector_n":[("void","(std::_Bit_type *, std::size_t, bool)"),("void","(std::_Bit_type *, std::size_t, bool)")],
"__fill_bvector":["void","(std::_Bit_type *, unsigned int, unsigned int, bool)"],
"__valarray_release_memory":["void","(void *)"],
"atomic_flag_test_and_set_explicit":[("bool","(std::atomic_flag *, std::memory_order)"),("bool","(volatile std::atomic_flag *, std::memory_order)")],
"atomic_flag_clear_explicit":[("void","(std::atomic_flag *, std::memory_order)"),("void","(volatile std::atomic_flag *, std::memory_order)")],
"atomic_flag_test_and_set":[("bool","(std::atomic_flag *)"),("bool","(volatile std::atomic_flag *)")],
"atomic_flag_clear":[("void","(std::atomic_flag *)"),("void","(volatile std::atomic_flag *)")],
"notify_all_at_thread_exit":["void","(std::condition_variable &, unique_lock<std::mutex>)"],
"__once_proxy":["void","()"],
"get_id":["thread::id","()"],
"yield":["void","()"],
"future_category":["const std::_V2::error_category &","()"],
"__throw_regex_error":[("void","(std::regex_error::error_type, const char *)"),("void","(regex_constants::error_type)"),("void","(regex_constants::error_type, const char *)")],
"__clp2":["std::size_t","(std::size_t)"],
"__glibcxx_rwlock_rdlock":["int","(pthread_rwlock_t *)"],
"__glibcxx_rwlock_tryrdlock":["int","(pthread_rwlock_t *)"],
"__glibcxx_rwlock_wrlock":["int","(pthread_rwlock_t *)"],
"__glibcxx_rwlock_trywrlock":["int","(pthread_rwlock_t *)"],
"__glibcxx_rwlock_unlock":["int","(pthread_rwlock_t *)"],
"__glibcxx_rwlock_timedrdlock":["int","(pthread_rwlock_t *, const timespec *)"],
"__glibcxx_rwlock_timedwrlock":["int","(pthread_rwlock_t *, const timespec *)"],
"opendir":["DIR *","(const char *)"],
"fdopendir":["DIR *","(int)"],
"closedir":["int","(DIR *)"],
"readdir":["struct dirent *","(DIR *)"],
"readdir64":["struct dirent64 *","(DIR *)"],
"readdir_r":["int","(DIR *__restrict, struct dirent *__restrict, struct dirent **__restrict)"],
"readdir64_r":["int","(DIR *__restrict, struct dirent64 *__restrict, struct dirent64 **__restrict)"],
"rewinddir":["void","(DIR *)"],
"seekdir":["void","(DIR *, long)"],
"telldir":["long","(DIR *)"],
"dirfd":["int","(DIR *)"],
"scandir":["int","(const char *__restrict, struct dirent ***__restrict, int (*)(const struct dirent *), int (*)(const struct dirent **, const struct dirent **))"],
"scandir64":["int","(const char *__restrict, struct dirent64 ***__restrict, int (*)(const struct dirent64 *), int (*)(const struct dirent64 **, const struct dirent64 **))"],
"scandirat":["int","(int, const char *__restrict, struct dirent ***__restrict, int (*)(const struct dirent *), int (*)(const struct dirent **, const struct dirent **))"],
"scandirat64":["int","(int, const char *__restrict, struct dirent64 ***__restrict, int (*)(const struct dirent64 *), int (*)(const struct dirent64 **, const struct dirent64 **))"],
"alphasort":["int","(const struct dirent **, const struct dirent **)"],
"alphasort64":["int","(const struct dirent64 **, const struct dirent64 **)"],
"getdirentries":["__ssize_t","(int, char *__restrict, size_t, __off_t *__restrict)"],
"getdirentries64":["__ssize_t","(int, char *__restrict, size_t, __off64_t *__restrict)"],
"versionsort":["int","(const struct dirent **, const struct dirent **)"],
"versionsort64":["int","(const struct dirent64 **, const struct dirent64 **)"],
"getdents64":["__ssize_t","(int, void *, size_t)"],
"_obstack_newchunk":["void","(struct obstack *, int)"],
"_obstack_begin":["int","(struct obstack *, int, int, void *(*)(long), void (*)(void *))"],
"_obstack_begin_1":["int","(struct obstack *, int, int, void *(*)(void *, long), void (*)(void *, void *), void *)"],
"_obstack_memory_used":["int","(struct obstack *)"],
"obstack_free":["void","(struct obstack *, void *)"],
"getopt_long":["int","(int, char *const *, const char *, const struct option *, int *)"],
"getopt_long_only":["int","(int, char *const *, const char *, const struct option *, int *)"],
"catopen":["nl_catd","(const char *, int)"],
"catgets":["char *","(nl_catd, int, int, const char *)"],
"catclose":["int","(nl_catd)"],

  }

